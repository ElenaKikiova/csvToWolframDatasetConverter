Created at	Closed at	Updated at	State	Labels	Comments	Number	Title	Url	Html url	Body	User name	User email	Milestone created at	Milestone due on	Milestone descrtiption	Milestone state	Milestone title
2011-09-05 17:45:59.0	2011-09-06 13:16:49.0	2014-06-12 13:58:33.0	closed	[]	24	6	Putting some beer in the freezer	https://api.github.com/repos/torvalds/linux/issues/6	https://github.com/torvalds/linux/pull/6	Thanks for sharing linux in github! The beer is free too! 	leobalter	null	null	null	null	null	null	
2011-09-05 18:46:20.0	2011-09-05 19:05:40.0	2014-06-12 06:22:06.0	closed	[]	11	7	proper license on Microsoft-related files	https://api.github.com/repos/torvalds/linux/issues/7	https://github.com/torvalds/linux/pull/7		Holek	null	null	null	null	null	null	
2011-09-05 21:17:10.0	2011-09-06 19:15:53.0	2014-06-13 07:23:48.0	closed	[]	2	8	Tinkered with the README.	https://api.github.com/repos/torvalds/linux/issues/8	https://github.com/torvalds/linux/pull/8	I was going through the readme, checking it out, and a few things kept distracting me. So I fixed 'em. 	Spaceghost	null	null	null	null	null	null	
2011-09-05 21:37:49.0	2011-09-06 15:21:38.0	2014-06-12 06:24:25.0	closed	[]	8	9	Removed extra 'an' in ext4 docs.	https://api.github.com/repos/torvalds/linux/issues/9	https://github.com/torvalds/linux/pull/9	There as an extra 'an' in this doc, so I removed it. 	smartinez87	null	null	null	null	null	null	
2011-09-06 13:43:12.0	2011-09-07 14:52:01.0	2014-06-13 07:44:20.0	closed	[]	0	10	[GIT PULL] v9fs fixes for 3.1-rc6	https://api.github.com/repos/torvalds/linux/issues/10	https://github.com/torvalds/linux/pull/10	(will resend on lkml as well, but figured I try the github way for fun)  First off, let me apologize.  Vacations and kernel.org disruptions have delayed me from getting you these bug fixes sooner in the cycle.  There are a couple of protocol "bugs" fixed here dealing with lack of foresight in developing some of the new protocol extensions.  Thanks.  The following changes since commit ddf28352b80c86754a6424e3a61e8bdf9213b3c7:    Linux 3.1-rc5 (2011-09-04 15:45:10 -0700)  are available in the git repository at:   git://github.com/ericvh/linux.git for-linus  Aneesh Kumar K.V (5):       fs/9p: Add fid before dentry instantiation       fs/9p: Don't update file type when updating file attributes       net/9p: Fix kernel crash with msize 512K       fs/9p: Add OS dependent open flags in 9p protocol       fs/9p: Always ask new inode in lookup for cache mode disabled  Jim Garlick (1):       fs/9p: Use protocol-defined value for lock/getlock 'type' field.   fs/9p/v9fs_vfs.h       |    6 ++-  fs/9p/vfs_file.c       |   36 ++++++++++---  fs/9p/vfs_inode.c      |  139 ++++++++++++++++++++++++++++++------------------  fs/9p/vfs_inode_dotl.c |   86 +++++++++++++++++++++++++-----  fs/9p/vfs_super.c      |    2 +-  include/net/9p/9p.h    |   29 ++++++++++  net/9p/trans_virtio.c  |   17 ++++--  7 files changed, 234 insertions(+), 81 deletions(-) 	ericvh	null	null	null	null	null	null	
2011-09-06 22:35:53.0	2011-09-07 04:35:16.0	2014-06-12 06:25:26.0	closed	[]	12	11	Added backlight support for some samsung laptops	https://api.github.com/repos/torvalds/linux/issues/11	https://github.com/torvalds/linux/pull/11	Models: - N120 - R468/R418 - X320/X420/X520 - R510/P510 - N350 - R470/R420 - R528/R728 - SQ1S 	xonatius	null	null	null	null	null	null	
2011-09-21 22:52:19.0	2011-09-22 17:38:48.0	2014-06-12 15:07:25.0	closed	[]	6	12	small cleanup in CREDITS	https://api.github.com/repos/torvalds/linux/issues/12	https://github.com/torvalds/linux/pull/12	Hi,  Here is what I did to the `CREDITS` file: - I removed some **tailing spaces** - I verified the **alphabetical order**, and found **3 errors** - I **corrected** them  Sorry for the microscopic commit.  Sincerely, Jan. 	jankeromnes	null	null	null	null	null	null	
2011-09-30 03:02:29.0	2011-09-30 03:07:29.0	2014-06-12 08:35:07.0	closed	[]	0	13	Fixed overflow bug in binary search for large input.	https://api.github.com/repos/torvalds/linux/issues/13	https://github.com/torvalds/linux/pull/13	(left+right)/2 can overflow in the case where left and/or right are large, where left + (right-left)/2 wouldn't. Example: left=2, right = 2^(32)-1. 	mutexlox	null	null	null	null	null	null	
2011-09-30 03:06:52.0	2011-09-30 14:42:54.0	2014-06-13 04:35:54.0	closed	[]	1	14	Fixed overflow bug in binary search.	https://api.github.com/repos/torvalds/linux/issues/14	https://github.com/torvalds/linux/pull/14	(left + right)/2 can overflow in cases where left + (right-left)/2 wouldn't. See, for example left=2 and right=2^32-1. 	mutexlox	null	null	null	null	null	null	
2012-01-04 12:26:00.0	2012-06-25 11:41:24.0	2014-06-12 06:24:45.0	closed	[]	1	15	drm/edid: Fix the HDTV hack yet more.	https://api.github.com/repos/torvalds/linux/issues/15	https://github.com/torvalds/linux/pull/15	Checking for just two variants of standard timings for 1366x768 isn't quite correct, let's check for ranges instead.  Signed-off-by: Andrew Shadura andrew@beldisplaytech.com 	andrewshadura	null	null	null	null	null	null	
2012-03-29 15:33:54.0	2012-05-30 14:20:00.0	2014-07-01 22:33:42.0	closed	[]	4	16	Updated README for MarkDown (This is not a final version but a draft).	https://api.github.com/repos/torvalds/linux/issues/16	https://github.com/torvalds/linux/pull/16	This is a MarkDown version of the README file... must be renamed to README.md to work properly (I think). 	ghost	null	null	null	null	null	null	
2012-05-11 11:26:51.0	2012-05-11 11:27:55.0	2019-01-08 14:52:55.0	closed	[]	192	17	Add support for AR5BBU22 [0489:e03c]	https://api.github.com/repos/torvalds/linux/issues/17	https://github.com/torvalds/linux/pull/17		reejk	null	null	null	null	null	null	
2012-05-11 12:30:15.0	2012-05-16 02:18:53.0	2014-06-12 11:05:35.0	closed	[]	0	18	Add support for AR5BBU22 [0489:e03c]	https://api.github.com/repos/torvalds/linux/issues/18	https://github.com/torvalds/linux/pull/18		reejk	null	null	null	null	null	null	
2012-06-01 06:30:21.0	2012-06-01 06:31:12.0	2014-06-13 07:44:23.0	closed	[]	0	19	Update Documentation/ABI/obsolete/proc-pid-oom_adj	https://api.github.com/repos/torvalds/linux/issues/19	https://github.com/torvalds/linux/pull/19		vargheseapm	null	null	null	null	null	null	
2012-06-26 23:29:25.0	2013-04-29 19:22:49.0	2014-06-13 07:44:47.0	closed	[]	0	20	s	https://api.github.com/repos/torvalds/linux/issues/20	https://github.com/torvalds/linux/pull/20	sup 	goeke	null	null	null	null	null	null	
2012-08-24 02:44:33.0	2012-08-25 23:26:42.0	2014-06-13 07:43:52.0	closed	[]	0	21	UML	https://api.github.com/repos/torvalds/linux/issues/21	https://github.com/torvalds/linux/pull/21		asamy	null	null	null	null	null	null	
2012-09-16 02:27:38.0	2013-07-02 19:28:26.0	2014-06-12 11:43:36.0	closed	[]	1	22	Repaired broken USB ID 0x15E to 0x015E	https://api.github.com/repos/torvalds/linux/issues/22	https://github.com/torvalds/linux/pull/22	The USB device with ID 0x015E is known as Huwai WIXUBB116. The module works fine when the ID is changed to 0x015E. 	mdminhazulhaque	null	null	null	null	null	null	
2012-10-01 01:06:29.0	2013-07-04 00:19:22.0	2014-06-13 07:44:51.0	closed	[]	0	23	Junwei	https://api.github.com/repos/torvalds/linux/issues/23	https://github.com/torvalds/linux/pull/23		oscarvei	null	null	null	null	null	null	
2012-10-23 13:16:36.0	2013-07-10 18:44:11.0	2014-06-13 06:35:24.0	closed	[]	1	24	Update drivers/staging/bcm/InterfaceInit.h	https://api.github.com/repos/torvalds/linux/issues/24	https://github.com/torvalds/linux/pull/24	Added device ID of ZTE AX326. 	mdminhazulhaque	null	null	null	null	null	null	
2012-11-10 11:15:00.0	2013-09-03 19:00:19.0	2014-06-13 07:20:42.0	closed	[]	1	25	added support for Sony Vaio E-Series bluetooth	https://api.github.com/repos/torvalds/linux/issues/25	https://github.com/torvalds/linux/pull/25	added support for "foxconn hon/hai 0489:e027" bluetooth which is an Atheros 3011 chip 	paolostivanin	null	null	null	null	null	null	
2012-11-27 18:57:46.0	2012-11-27 20:29:10.0	2014-06-12 06:26:55.0	closed	[]	1	26	Tweak to support 1Mbaud and similar baudrates that require Mode16 instea...	https://api.github.com/repos/torvalds/linux/issues/26	https://github.com/torvalds/linux/pull/26	...d of Mode13 	alexey-pelykh	null	null	null	null	null	null	
2013-02-27 05:16:46.0	2013-11-15 05:27:17.0	2014-06-12 19:43:18.0	closed	[]	1	27	[PATCH] ATH6KL: "Fix the byte alignment rule to avoid loss of bytes in a TCP segment"	https://api.github.com/repos/torvalds/linux/issues/27	https://github.com/torvalds/linux/pull/27	I found the driver bug which occur loss of some bytes on the TCP/IP stack.  Either first 3 bytes of the first received tcp segment or last one over MTU size file can be loss due to the byte alignment problem. Although ATH6KL_HTC_ALIGN_BYTES was defined for 'extra bytes for htc header alignment' in the patch "Fix buffer alignment for scatter-gather I/O"(1df94a857), there exists the bytes loss issue which means that it will be truncated 3 bytes in the transmitted file contents if a file which has over MTU size is transferred through TCP/IP stack. It doesn't look like TCP/IP stack bug of 3.5 or the latest version of kernel but the byte alignment issue. This patch is to use the roundup() function for the byte alignment rather than the predefined ATH6KL_HTC_ALIGN_BYTES.  Signed-off-by: Myoungje Kim mjei78@gmail.com 	kingpotato	null	null	null	null	null	null	
2013-03-01 20:12:20.0	2013-03-01 21:25:59.0	2014-06-12 06:59:28.0	closed	[]	0	28	Remove trailing slash from kernel.org link	https://api.github.com/repos/torvalds/linux/issues/28	https://github.com/torvalds/linux/pull/28	A trailing slash on a URL connotes a link to a directory; an absence of a trailing slash connotes a link to a page. 	mikegagnon	null	null	null	null	null	null	
2013-03-05 14:29:00.0	2013-03-05 14:33:21.0	2014-06-12 22:37:42.0	closed	[]	0	29	ideapad: fix the delay when controlling brightness	https://api.github.com/repos/torvalds/linux/issues/29	https://github.com/torvalds/linux/pull/29		abdelli	null	null	null	null	null	null	
2013-03-09 14:16:30.0	2013-03-09 14:16:52.0	2014-06-17 22:35:28.0	closed	[]	1	30	Odroid 3.8.y	https://api.github.com/repos/torvalds/linux/issues/30	https://github.com/torvalds/linux/pull/30	Test 	mdrjr	null	null	null	null	null	null	
2013-03-20 21:37:45.0	null	2020-02-14 20:40:08.0	open	[]	1	31	Fix M1405 netbook touchpad	https://api.github.com/repos/torvalds/linux/issues/31	https://github.com/torvalds/linux/pull/31	Added support for Gigabyte M1405 touchpad 	mmatviyiv	null	null	null	null	null	null	
2013-05-12 12:33:33.0	null	2015-07-20 01:33:49.0	open	[]	4	32	value swap macro change with xor	https://api.github.com/repos/torvalds/linux/issues/32	https://github.com/torvalds/linux/pull/32		halit	null	null	null	null	null	null	
2013-05-16 09:06:29.0	2015-10-21 14:04:49.0	2015-10-21 14:04:49.0	closed	[]	2	33	fix crypto4xx_core.c compilation error	https://api.github.com/repos/torvalds/linux/issues/33	https://github.com/torvalds/linux/pull/33	This tiny pull request fixes...  ``` ...   CC      drivers/crypto/amcc/crypto4xx_core.o drivers/crypto/amcc/crypto4xx_core.c:1139:18: error: 'THIS_MODULE' undeclared here (not in a function) ... ```  compilation error. 	ryzhovau	null	null	null	null	null	null	
2013-05-18 02:13:05.0	null	2020-10-02 17:57:16.0	open	[]	0	34	Update aliasing-test.c	https://api.github.com/repos/torvalds/linux/issues/34	https://github.com/torvalds/linux/pull/34	i'm studying seminario de actualizacion at UCV, Greetings from Lima. by Marcelino Estrada 	smeaime	null	null	null	null	null	null	
2013-05-30 07:03:17.0	null	2020-02-18 14:28:23.0	open	[]	0	35	Update socket.c	https://api.github.com/repos/torvalds/linux/issues/35	https://github.com/torvalds/linux/pull/35	Improved the readability of the error message. 	njsubedi	null	null	null	null	null	null	
2013-06-05 21:41:10.0	null	2020-10-02 17:57:12.0	open	[]	0	36	audit: fixed typo in comment	https://api.github.com/repos/torvalds/linux/issues/36	https://github.com/torvalds/linux/pull/36		gwaltgw	null	null	null	null	null	null	
2013-06-19 21:45:29.0	2013-06-19 21:59:06.0	2014-06-13 07:43:49.0	closed	[]	0	37	Update ctx.h	https://api.github.com/repos/torvalds/linux/issues/37	https://github.com/torvalds/linux/pull/37		nmtigor	null	null	null	null	null	null	
2013-06-19 22:20:21.0	2013-07-17 13:17:35.0	2014-06-12 10:56:55.0	closed	[]	0	38	fix ctx.h	https://api.github.com/repos/torvalds/linux/issues/38	https://github.com/torvalds/linux/pull/38		nmtigor	null	null	null	null	null	null	
2013-06-22 21:08:19.0	2014-04-08 22:01:20.0	2014-06-12 08:18:00.0	closed	[]	0	39	Remove redundant msg.msg_namelen = 0 in drivers/staging/usbip/ubip_common.c	https://api.github.com/repos/torvalds/linux/issues/39	https://github.com/torvalds/linux/pull/39	Just spotted it from a Google search, thought I'd fix it. One-liner PR. 	eloff	null	null	null	null	null	null	
2013-06-25 08:19:38.0	null	2020-10-02 17:57:09.0	open	[]	0	40	update	https://api.github.com/repos/torvalds/linux/issues/40	https://github.com/torvalds/linux/pull/40	update 	lsmushroom	null	null	null	null	null	null	
2013-08-01 10:33:56.0	null	2014-06-13 02:41:39.0	open	[]	1	41	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/41	https://github.com/torvalds/linux/pull/41	pull-linuxmaster 	moonlinux	null	null	null	null	null	null	
2013-08-07 09:35:37.0	2013-08-08 09:33:18.0	2014-06-12 04:54:24.0	closed	[]	2	42	Replace "duplicate" to "reproduce" README 	https://api.github.com/repos/torvalds/linux/issues/42	https://github.com/torvalds/linux/pull/42	Replace the word "duplicate" to "reproduce" in README to make the meaning more relevant. 	cshubhamrao	null	null	null	null	null	null	
2013-08-10 22:10:19.0	null	2014-06-13 21:29:30.0	open	[]	0	43	Update nv50.c	https://api.github.com/repos/torvalds/linux/issues/43	https://github.com/torvalds/linux/pull/43	"limit" is "length-1", otherwise line 143 should be corrected. 	nmtigor	null	null	null	null	null	null	
2013-08-19 16:33:52.0	null	2014-06-13 06:41:29.0	open	[]	1	44	Ralink 3070 WiFi adapter driver.	https://api.github.com/repos/torvalds/linux/issues/44	https://github.com/torvalds/linux/pull/44	This will add driver for Ralink 3070 WiFi adapter (shown below).  ![ralink](https://f.cloud.github.com/assets/534152/987448/a1e9c020-08ec-11e3-8f8f-5beddb3a1273.JPG) 	intermediatech	null	null	null	null	null	null	
2013-08-29 22:08:33.0	2013-08-29 23:12:58.0	2014-06-12 14:09:14.0	closed	[]	4	45	criar uma documentação em português do Brasil	https://api.github.com/repos/torvalds/linux/issues/45	https://github.com/torvalds/linux/pull/45		EvandroZanatta	null	null	null	null	null	null	
2013-09-10 19:29:08.0	2014-05-21 08:44:10.0	2015-02-09 18:01:59.0	closed	[]	1	46	Corrected typo in comments.	https://api.github.com/repos/torvalds/linux/issues/46	https://github.com/torvalds/linux/pull/46	Really minor, obviously, but "a algorithm" should be "an algorithm". 	tedivm	null	null	null	null	null	null	
2013-09-13 23:20:28.0	null	2014-06-13 06:41:07.0	open	[]	0	47	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/47	https://github.com/torvalds/linux/pull/47		xuanmingkai	null	null	null	null	null	null	
2013-09-16 17:33:58.0	2015-02-06 18:34:12.0	2015-02-06 18:34:12.0	closed	[]	2	48	Add periodictimer to net/MRP to enable retries 	https://api.github.com/repos/torvalds/linux/issues/48	https://github.com/torvalds/linux/pull/48	Added periodic timer from [802.1Q-2011] to retry if MRP loses messages.  MRP used to lose JoinIn messages and never retry if it sent messages before the interface became ready.  The periodic timer from the 802.1Q spec never turns off.  It fires every second, causing MRP to bounce from state QA to AA and back. You might think that would stop when the registrar responds with an JoinIn, but there's no state in the MRP state table to ignore the periodic timer after getting a reply.  The result is MRP sends a JoinIn message every second.  This may not be desirable, but it's what the spec requires.  [802.1Q-2011] http://standards.ieee.org/findstds/standard/802.1Q-2011.html 	noelbk	null	null	null	null	null	null	
2013-10-02 08:23:57.0	2013-10-02 17:33:03.0	2016-03-13 17:30:12.0	closed	[]	3	49	rm redundant empty line	https://api.github.com/repos/torvalds/linux/issues/49	https://github.com/torvalds/linux/pull/49	a completely trivial patch to remove a completely redundant blank line. 	arjun024	null	null	null	null	null	null	
2013-10-09 09:59:34.0	null	2014-06-20 03:47:06.0	open	[]	7	50	how to access older version of zen kenrel from gitub	https://api.github.com/repos/torvalds/linux/issues/50	https://github.com/torvalds/linux/pull/50		nvan7891	null	null	null	null	null	null	
2013-10-23 23:27:51.0	2013-10-23 23:30:03.0	2014-08-16 20:16:29.0	closed	[]	0	51	e906c090ca17ed30ed0e826df3c4d095e5f5c865	https://api.github.com/repos/torvalds/linux/issues/51	https://github.com/torvalds/linux/pull/51		korneliuszo	null	null	null	null	null	null	
2013-10-31 14:14:42.0	null	2020-10-02 17:56:59.0	open	[]	0	54	correct rtl_op_set_tim and rtl_update_beacon implementation missing	https://api.github.com/repos/torvalds/linux/issues/54	https://github.com/torvalds/linux/pull/54	patch found at 'http://www.spinics.net/lists/linux-wireless/msg96128.html' 	jpbruyere	null	null	null	null	null	null	
2013-11-04 07:58:14.0	2013-11-04 08:00:41.0	2014-06-13 05:50:00.0	closed	[]	0	55	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/55	https://github.com/torvalds/linux/pull/55	1103 	coder280	null	null	null	null	null	null	
2013-11-04 08:01:34.0	2013-11-04 08:02:49.0	2014-06-12 08:06:19.0	closed	[]	0	56	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/56	https://github.com/torvalds/linux/pull/56	1103 	coder280	null	null	null	null	null	null	
2013-11-16 11:52:45.0	2013-11-16 11:53:39.0	2014-06-15 06:32:08.0	closed	[]	0	57	1116	https://api.github.com/repos/torvalds/linux/issues/57	https://github.com/torvalds/linux/pull/57		coder280	null	null	null	null	null	null	
2013-11-29 16:44:45.0	null	2020-10-02 17:56:57.0	open	[]	0	59	Fixed a minor typo in Documentation/rbtree.c	https://api.github.com/repos/torvalds/linux/issues/59	https://github.com/torvalds/linux/pull/59	Changed linus/rbtree.h to linux/rbtree.h 	anshulk	null	null	null	null	null	null	
2013-12-01 11:56:37.0	null	2014-06-16 00:52:30.0	open	[]	0	60	fix some typos	https://api.github.com/repos/torvalds/linux/issues/60	https://github.com/torvalds/linux/pull/60		yang-le	null	null	null	null	null	null	
2013-12-15 14:39:08.0	2014-06-12 15:37:22.0	2014-06-12 15:37:22.0	closed	[]	2	61	Update faq.txt	https://api.github.com/repos/torvalds/linux/issues/61	https://github.com/torvalds/linux/pull/61	I remove dead links. 	Codecombay	null	null	null	null	null	null	
2013-12-18 09:59:50.0	null	2020-02-16 17:35:50.0	open	[]	3	62	update to gnu3	https://api.github.com/repos/torvalds/linux/issues/62	https://github.com/torvalds/linux/pull/62		ghost	null	null	null	null	null	null	
2013-12-19 05:10:17.0	null	2020-10-02 17:56:52.0	open	[]	0	63	Odroidxu 3.4.y	https://api.github.com/repos/torvalds/linux/issues/63	https://github.com/torvalds/linux/pull/63		JustinKo-JK	null	null	null	null	null	null	
2013-12-24 15:56:36.0	2015-12-05 00:22:52.0	2015-12-05 00:22:52.0	closed	[]	0	64	Support for TQ2440 Board	https://api.github.com/repos/torvalds/linux/issues/64	https://github.com/torvalds/linux/pull/64	Support for TQ2440 Board 	lzto	null	null	null	null	null	null	
2014-01-02 14:31:45.0	null	2020-02-14 22:47:47.0	open	[]	0	65	Update REPORTING-BUGS	https://api.github.com/repos/torvalds/linux/issues/65	https://github.com/torvalds/linux/pull/65		ghost	null	null	null	null	null	null	
2014-01-03 13:50:06.0	2014-01-03 13:50:35.0	2014-06-13 07:17:20.0	closed	[]	1	66	Support MONITOR and MWAIT as no-op.	https://api.github.com/repos/torvalds/linux/issues/66	https://github.com/torvalds/linux/pull/66	MONITOR and MWAIT which are used to enter low power cpu wait until a memory address is accessed are by definition allowed to wake early, and thus we can replace them with a no-op to safely (although by burning up cpu). 	jmickeyd	null	null	null	null	null	null	
2014-01-13 13:09:24.0	null	2020-10-02 17:56:49.0	open	[]	0	67	7601	https://api.github.com/repos/torvalds/linux/issues/67	https://github.com/torvalds/linux/pull/67		danss70	null	null	null	null	null	null	
2014-01-22 05:10:12.0	2014-01-22 05:16:09.0	2014-06-15 14:10:49.0	closed	[]	0	68	none	https://api.github.com/repos/torvalds/linux/issues/68	https://github.com/torvalds/linux/pull/68	please cancel. 	shanmin	null	null	null	null	null	null	
2014-01-22 09:52:16.0	2015-03-16 18:25:52.0	2015-03-16 18:25:52.0	closed	[]	0	69	.	https://api.github.com/repos/torvalds/linux/issues/69	https://github.com/torvalds/linux/pull/69		arjun024	null	null	null	null	null	null	
2014-02-18 17:08:51.0	null	2020-10-02 17:56:46.0	open	[]	1	71	Update double.h	https://api.github.com/repos/torvalds/linux/issues/71	https://github.com/torvalds/linux/pull/71	Fixed punctuation. 	punctual	null	null	null	null	null	null	
2014-02-21 01:54:49.0	2014-02-21 01:55:36.0	2014-06-22 18:19:40.0	closed	[]	0	72	3.14-rc3	https://api.github.com/repos/torvalds/linux/issues/72	https://github.com/torvalds/linux/pull/72		shanmin	null	null	null	null	null	null	
2014-02-22 22:10:15.0	null	2020-02-14 22:43:01.0	open	[]	0	73	fixed a typo	https://api.github.com/repos/torvalds/linux/issues/73	https://github.com/torvalds/linux/pull/73	fixed a typo in .gitignore 	vadik2014	null	null	null	null	null	null	
2014-02-25 17:39:58.0	null	2020-10-02 17:56:42.0	open	[]	3	74	Update resize.c	https://api.github.com/repos/torvalds/linux/issues/74	https://github.com/torvalds/linux/pull/74	Update resize.c 	thedj21	null	null	null	null	null	null	
2014-03-02 02:26:36.0	null	2014-06-19 10:00:38.0	open	[]	0	75	Odroid 3.13.y	https://api.github.com/repos/torvalds/linux/issues/75	https://github.com/torvalds/linux/pull/75		leeseungcheol	null	null	null	null	null	null	
2014-03-05 08:16:58.0	null	2020-10-02 17:56:40.0	open	[]	2	76	Fix section 3.8 number	https://api.github.com/repos/torvalds/linux/issues/76	https://github.com/torvalds/linux/pull/76		ruckuus	null	null	null	null	null	null	
2014-03-07 16:20:39.0	null	2020-10-02 17:56:38.0	open	[]	1	77	Fixed typo in comment	https://api.github.com/repos/torvalds/linux/issues/77	https://github.com/torvalds/linux/pull/77	Changed "then" to "than" No functional change 	kiteflyingmonkey	null	null	null	null	null	null	
2014-03-16 12:12:36.0	null	2016-12-08 18:05:50.0	open	[]	11	78	supercharged some functions	https://api.github.com/repos/torvalds/linux/issues/78	https://github.com/torvalds/linux/pull/78	supercharged some boring ass function 	raincoats	null	null	null	null	null	null	
2014-03-16 17:50:35.0	null	2020-10-02 17:56:34.0	open	[]	4	79	Add period for consistency	https://api.github.com/repos/torvalds/linux/issues/79	https://github.com/torvalds/linux/pull/79	In a list of items, the other items end in a period. Adding a period to make the list items consistent. 	russellpwirtz	null	null	null	null	null	null	
2014-03-17 16:44:53.0	2014-03-18 16:19:04.0	2014-06-16 04:26:05.0	closed	[]	1	80	Script options fix	https://api.github.com/repos/torvalds/linux/issues/80	https://github.com/torvalds/linux/pull/80	This pull request fixes the following issues :  - when passing custom arguments to a script, if those arguments are not declared within perf, they prevent the execution of perf.   e.g.   ``` perf script -i path/to/perf.data -s my_script -arg1 arg_value ```  perf will issue an error message and no processing will occur - when passing custom arguments to a script, if those arguments are declared by perf, they are consumed and not passed to the script.   e.g.  ``` perf script -i path/to/perf.data -s my_script -h ```  perf will display its own help message, instead of the expected help message from my_script.  These issues are addressed as follows : - The parse option flag is changed from PARSE_OPT_STOP_AT_NON_OPTION to PARSE_OPT_KEEP_UNKNOWN - A new option type is introduce OPT_CALLBACK_FINAL_OPTION, which effectively prevents the parsing of all options located after the script. 	abak	null	null	null	null	null	null	
2014-03-18 05:17:16.0	null	2014-09-29 13:31:24.0	open	[]	13	81	facebook functionality	https://api.github.com/repos/torvalds/linux/issues/81	https://github.com/torvalds/linux/pull/81	allows users to login to linux with facebook 	raincoats	null	null	null	null	null	null	
2014-03-26 02:42:27.0	null	2020-05-18 17:47:56.0	open	[]	4	83	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/83	https://github.com/torvalds/linux/pull/83	Pull request at 2013-12-19 	wuborush	null	null	null	null	null	null	
2014-03-31 06:24:24.0	null	2014-10-16 17:32:50.0	open	[]	5	84	ALSA: Missing ;	https://api.github.com/repos/torvalds/linux/issues/84	https://github.com/torvalds/linux/pull/84	Fixes: RT-Linux-Hdaudio-5.18 won't compile because of missing ; 	FriendlyHacker	null	null	null	null	null	null	
2014-03-31 08:07:47.0	2014-03-31 08:10:59.0	2014-06-12 08:17:59.0	closed	[]	0	85	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/85	https://github.com/torvalds/linux/pull/85	pull from torvalds 	e-mailky	null	null	null	null	null	null	
2014-03-31 08:11:59.0	2014-03-31 09:11:18.0	2014-08-18 02:04:02.0	closed	[]	0	86	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/86	https://github.com/torvalds/linux/pull/86	pull from torvalds 	e-mailky	null	null	null	null	null	null	
2014-04-02 11:43:00.0	2014-04-02 11:52:44.0	2014-06-12 04:44:16.0	closed	[]	0	87	Merge pull request #2 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/87	https://github.com/torvalds/linux/pull/87	合并作者的更新 	fbigun	null	null	null	null	null	null	
2014-04-07 05:48:02.0	2014-04-21 17:17:03.0	2014-06-20 05:28:43.0	closed	[]	0	88	Merge pull request #2 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/88	https://github.com/torvalds/linux/pull/88	合并作者的更新 	fbigun	null	null	null	null	null	null	
2014-04-08 07:56:37.0	2014-04-08 08:19:39.0	2014-06-12 08:17:53.0	closed	[]	1	89	Update ratelimit.c	https://api.github.com/repos/torvalds/linux/issues/89	https://github.com/torvalds/linux/pull/89	fix bug in ratelimit 	renweihub	null	null	null	null	null	null	
2014-04-08 08:31:03.0	null	2015-01-30 16:29:10.0	open	[]	5	90	Update ratelimit.c	https://api.github.com/repos/torvalds/linux/issues/90	https://github.com/torvalds/linux/pull/90	fix a bug in ratelimit, if the "begin" doesn't update at the same time with printed, the print will start from 1 in loops except for the first time, lets to only 9 logs suppressed, but not 10 as expected. 	renweihub	null	null	null	null	null	null	
2014-04-23 02:34:43.0	2017-03-04 22:34:21.0	2017-03-04 22:34:40.0	closed	[]	1	91	Fix the double-barreled homophone attack	https://api.github.com/repos/torvalds/linux/issues/91	https://github.com/torvalds/linux/pull/91		Ulexus	null	null	null	null	null	null	
2014-04-23 15:19:08.0	null	2015-01-08 14:02:02.0	open	[]	1	92	Add auto detection of the ds1307 device on the I2C	https://api.github.com/repos/torvalds/linux/issues/92	https://github.com/torvalds/linux/pull/92	Code should add instructions to kernel to auto-detect the presence of ds1307 device on I2C bus on address 0x68 and in case it is found auto assign it. The main drive is to make sure that devices (like Pi) do have correct time before init process is started thus make sure that all daemons have correct time during startup phase. I'm pretty sure that the code added is wrong, jsut don t knwo whom to contact to get help to add this functionality :) I've reused parts from the DOC: https://www.kernel.org/doc/Documentation/i2c/instantiating-devices 	maestrx	null	null	null	null	null	null	
2014-05-23 08:50:03.0	2015-06-26 09:40:47.0	2015-06-26 09:40:47.0	closed	[]	2	93	Wip/stage sunxi 3.4/a20	https://api.github.com/repos/torvalds/linux/issues/93	https://github.com/torvalds/linux/pull/93		kerlw	null	null	null	null	null	null	
2014-05-23 09:08:26.0	null	2020-10-02 17:56:21.0	open	[]	1	94	Update saa7134-cards.c	https://api.github.com/repos/torvalds/linux/issues/94	https://github.com/torvalds/linux/pull/94	fix for AVERMEDIA STUDIO 507UA 	AnTAVR	null	null	null	null	null	null	
2014-05-24 16:24:03.0	null	2020-10-02 17:56:19.0	open	[]	1	95	option: Inventec Velocity (V HSDPA) support	https://api.github.com/repos/torvalds/linux/issues/95	https://github.com/torvalds/linux/pull/95	Added Inventec Velocity modem IDs to option driver as it supports this device. It is a modem found in Kohjinsha SC3-VHB. 	daneos	null	null	null	null	null	null	
2014-05-28 17:04:06.0	null	2020-10-02 17:56:16.0	open	[]	11	96	Update printk.c	https://api.github.com/repos/torvalds/linux/issues/96	https://github.com/torvalds/linux/pull/96	Adding new function , int type_printk(int type, const char *fmt, ...) , it will print an output and adding type , 1 :  [error] . 2 [log] 3 [action] . TODO : other types 	invicnaper	null	null	null	null	null	null	
2014-05-30 03:46:08.0	2017-02-07 15:32:33.0	2017-02-07 15:32:33.0	closed	[]	1	97	USB: cp210x: Add 8998 (KCF PRN Device)	https://api.github.com/repos/torvalds/linux/issues/97	https://github.com/torvalds/linux/pull/97	Adds support for the KCF Technologies PRN Device in the cp210x usb serial driver 	sonofaforester	null	null	null	null	null	null	
2014-05-30 09:43:04.0	2014-05-30 19:17:08.0	2014-06-12 08:17:50.0	closed	[]	0	98	Convert to a time_after() expression.	https://api.github.com/repos/torvalds/linux/issues/98	https://github.com/torvalds/linux/pull/98		kjenova	null	null	null	null	null	null	
2014-06-05 17:52:58.0	null	2014-06-17 03:27:54.0	open	[]	1	99	Hell of a perfectionist.	https://api.github.com/repos/torvalds/linux/issues/99	https://github.com/torvalds/linux/pull/99		ghost	null	null	null	null	null	null	
2014-06-18 01:10:21.0	2014-06-18 01:10:59.0	2014-06-18 01:10:59.0	closed	[]	0	100	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/100	https://github.com/torvalds/linux/pull/100	pull from torvalds 	mbin	null	null	null	null	null	null	
2014-06-27 15:54:37.0	2014-06-27 15:55:34.0	2014-06-28 07:23:47.0	closed	[]	3	101	Update README	https://api.github.com/repos/torvalds/linux/issues/101	https://github.com/torvalds/linux/pull/101		raintean	null	null	null	null	null	null	
2014-06-29 20:55:01.0	null	2020-10-02 17:56:11.0	open	[]	0	102	Ignore diagonals for iMON PAD in keyboard mode	https://api.github.com/repos/torvalds/linux/issues/102	https://github.com/torvalds/linux/pull/102	For user with an iMON PAD Remote control, the keyboard mode is very touchy and almost useless with XBMC. Event with stabilized() algorithm the behaviour is unexpected. To make it less touchy, I make it ignore any value too close to the diagonals. 	ikus060	null	null	null	null	null	null	
2014-06-29 21:47:51.0	2017-11-09 21:52:25.0	2017-11-09 21:52:25.0	closed	[]	1	103	a few changes : boot.h , bit.h ,crc32	https://api.github.com/repos/torvalds/linux/issues/103	https://github.com/torvalds/linux/pull/103	boot.h : basic i/o port change bit.h : new header file (set & get bit ) crc32 : a new crc32 function 	burakkoken	null	null	null	null	null	null	
2014-06-30 09:59:27.0	2014-07-08 15:00:37.0	2014-07-08 15:00:37.0	closed	[]	0	104	Update acct.c	https://api.github.com/repos/torvalds/linux/issues/104	https://github.com/torvalds/linux/pull/104		hosembafer	null	null	null	null	null	null	
2014-06-30 10:03:58.0	2014-08-07 11:06:39.0	2014-08-07 11:06:39.0	closed	[]	0	105	Update acct.c	https://api.github.com/repos/torvalds/linux/issues/105	https://github.com/torvalds/linux/pull/105		hosembafer	null	null	null	null	null	null	
2014-07-17 13:56:08.0	2014-07-23 00:23:58.0	2014-07-23 03:12:42.0	closed	[]	2	106	correct a wrong word	https://api.github.com/repos/torvalds/linux/issues/106	https://github.com/torvalds/linux/pull/106	I think the "expression" may be a wrong word. 	blackmiaool	null	null	null	null	null	null	
2014-07-18 23:52:24.0	2014-07-22 01:05:53.0	2014-07-22 01:05:53.0	closed	[]	0	107	kernel-doc: handle and highlight varargs-parameter	https://api.github.com/repos/torvalds/linux/issues/107	https://github.com/torvalds/linux/pull/107	A varargs-section "@...:" is not recognized as such and thus gets written to the section introduced last. Also, a varargs-parameter "@..." doesn't get highlighted in descriptive text. 	ghost	null	null	null	null	null	null	
2014-07-23 22:23:53.0	2014-08-11 18:06:51.0	2014-08-11 18:06:51.0	closed	[]	0	108	scripts/tags.sh: Fix regex syntax for etags.	https://api.github.com/repos/torvalds/linux/issues/108	https://github.com/torvalds/linux/pull/108	Fix regexp syntax to run TAGS command correctly regarding below patches. - [79c704a] add regular expression replacement pattern for memcg - [3005286] add pattern for DEFINE_HASHTABLE  Signed-off-by: Sungwook Jung rhapsodist@gmail.com 	rhapsodist	null	null	null	null	null	null	
2014-07-25 22:21:50.0	2014-07-29 19:42:14.0	2014-07-29 19:42:14.0	closed	[]	0	109	Richacl	https://api.github.com/repos/torvalds/linux/issues/109	https://github.com/torvalds/linux/pull/109		rosellef	null	null	null	null	null	null	
2014-07-30 19:01:46.0	2014-07-30 19:06:14.0	2014-07-30 19:06:14.0	closed	[]	0	110	an ignore commit. FTR acpi pnp.	https://api.github.com/repos/torvalds/linux/issues/110	https://github.com/torvalds/linux/pull/110		arjun024	null	null	null	null	null	null	
2014-08-03 09:54:49.0	null	2019-08-15 04:53:34.0	open	[]	2	111	Create pure C material	https://api.github.com/repos/torvalds/linux/issues/111	https://github.com/torvalds/linux/pull/111	soon 	thinkwall	null	null	null	null	null	null	
2014-08-05 04:51:04.0	2014-08-05 04:51:21.0	2014-08-05 04:53:50.0	closed	[]	1	112	Dev39	https://api.github.com/repos/torvalds/linux/issues/112	https://github.com/torvalds/linux/pull/112		tgsergeant	null	null	null	null	null	null	
2014-08-16 10:32:37.0	2014-08-16 10:35:45.0	2014-08-16 10:35:45.0	closed	[]	1	113	Need to expand ath9k to ath10k driver structure	https://api.github.com/repos/torvalds/linux/issues/113	https://github.com/torvalds/linux/pull/113	Looking to study driver in comparison to FOSS/MAC drivers used for ath9K. (I'd like to expand my code for older drivers) 	ghost	null	null	null	null	null	null	
2014-08-18 02:10:22.0	2014-08-20 01:07:19.0	2014-08-20 01:07:19.0	closed	[]	2	114	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/114	https://github.com/torvalds/linux/pull/114	``` Merge pull request #1 from torvalds/master ``` 	e-mailky	null	null	null	null	null	null	
2014-08-21 17:17:09.0	null	2020-10-02 17:56:08.0	open	[]	1	115	ggry	https://api.github.com/repos/torvalds/linux/issues/115	https://github.com/torvalds/linux/pull/115		KonstantinBYvitebsk	null	null	null	null	null	null	
2014-08-23 14:23:30.0	null	2015-01-08 13:58:26.0	open	[]	1	116	Update names.c	https://api.github.com/repos/torvalds/linux/issues/116	https://github.com/torvalds/linux/pull/116	Hello. While making a program using usbip, I found a bug. When the variable pool_head was free()ed, it has dangling pointer. So, after names_free() called, we can't call names_free() again. Thanks for reading.  (Sorry for not fluent English) 	ghost	null	null	null	null	null	null	
2014-09-12 10:03:25.0	null	2020-10-02 17:56:02.0	open	[]	2	118	Fix typo	https://api.github.com/repos/torvalds/linux/issues/118	https://github.com/torvalds/linux/pull/118		zhenyuchen	null	null	null	null	null	null	
2014-09-14 05:53:01.0	null	2020-10-02 17:56:00.0	open	[]	1	119	Create voh98	https://api.github.com/repos/torvalds/linux/issues/119	https://github.com/torvalds/linux/pull/119		ghost	null	null	null	null	null	null	
2014-09-16 14:40:31.0	null	2020-10-02 17:55:58.0	open	[]	1	120	Added TLK106 PHY Support	https://api.github.com/repos/torvalds/linux/issues/120	https://github.com/torvalds/linux/pull/120	Supports TI's TLK106 series Ethernet PHYs. 	1800alex	null	null	null	null	null	null	
2014-09-17 02:36:52.0	2014-09-17 02:37:26.0	2014-09-17 02:37:26.0	closed	[]	0	121	merge for main	https://api.github.com/repos/torvalds/linux/issues/121	https://github.com/torvalds/linux/pull/121		baoruxing	null	null	null	null	null	null	
2014-09-19 06:14:41.0	2014-09-19 06:14:45.0	2014-09-19 06:14:45.0	closed	[]	0	122	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/122	https://github.com/torvalds/linux/pull/122	pulling latest linux code 	rakesh-gopal	null	null	null	null	null	null	
2014-09-19 06:16:38.0	2014-09-19 06:16:45.0	2014-09-19 06:16:45.0	closed	[]	0	123	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/123	https://github.com/torvalds/linux/pull/123	pulling latest linux code 	rakesh-gopal	null	null	null	null	null	null	
2014-09-19 12:34:10.0	2014-09-19 12:39:03.0	2014-09-19 12:39:03.0	closed	[]	0	124	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/124	https://github.com/torvalds/linux/pull/124	pulling latest linux code 	rakesh-gopal	null	null	null	null	null	null	
2014-09-24 08:49:16.0	null	2020-10-02 17:55:56.0	open	[]	2	125	Update cfi_cmdset_0002.c	https://api.github.com/repos/torvalds/linux/issues/125	https://github.com/torvalds/linux/pull/125	# Issue description:    During writing the Linux Kernel image on /dev/mtdX device the burning is failed due to I/O write or erase error:    Erasing blocks: 6/12 (50%)  While erasing blocks 0x000a0000-0x000c0000 on /dev/mtd1: Input/output error  Burning the /persistent/ISF.img image on /dev/mtd1 failed.    When doing erase, writing or verifying using FLASHCP program, the cfi mtd functions of Linux Kernel MTD driver can returns too early. The function chip_ready() return OK status while the actual writing or erasing is not finished on NOR flash device. It leads to I/O error and fail in writing, erasing or verifying of the data during working with MTD devices.    When the issue with writing is reproduced we compared the data of LinuxKERNEL.img and the data which was written on the /dev/mtdX device:  dd if=/dev/mtd3 bs=2367008 count=1 > /persistent/dest.buf  hexdump /persistent/dest.buf > /persistent/dest.hex  hexdump /persistent/LinuxKERNEL.img > /persistent/source.hex  diff -purN /persistent/dest.hex /persistent/source.hex    And it was observed that the driver didn't write some blocks at all (0xffff instead of real data in some places). Flash driver skip writing or hasn't been finished it during the specific time.    I found that in Internet I am not alone in this world, but I didn't find some solution for this problem which doesn't lead to increasing of the time of writing.  So I investigate the writing and found that there is no any check that the data is really was written on the Flash. So the proposed solution is to compare the given last byte with written one. We have run a long stubility during several weeks on our side with Switch Board using writing on NOR flash and the problem is not reproduced.  # FREQUENCY:    1%  The I/O error appears about 1 time during 3-4 hours writing on NOR flash. But it was not possible to determine exactly at what time the issue can happen.  # SYSTEM IMPACT:    fails to write/erase on NOR flash  # FIX DESCRIPTION:    Wait until the following checks return positive results during writing/erasing on NOR Flash:  1. read the data/status from the device (checking status of the NOR Flash: busy, timeout or ok(data)) return ok;  2. check the last byte of given buffer data is written in case of WRITE or the last map word is erased in case of ERASE.  # TEST DESCRIPTION:    Start writing some data on NOR FLASH (mtd device) using flashcp or start erasing using flash_erase.  	vjiki	null	null	null	null	null	null	
2014-09-25 06:44:39.0	2014-09-25 06:45:50.0	2014-09-25 06:45:50.0	closed	[]	0	126	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/126	https://github.com/torvalds/linux/pull/126	Auto merge 	1q84	null	null	null	null	null	null	
2014-09-30 20:11:15.0	2014-09-30 21:28:35.0	2014-09-30 21:28:35.0	closed	[]	0	127	update to latest	https://api.github.com/repos/torvalds/linux/issues/127	https://github.com/torvalds/linux/pull/127		prajoshpremdas	null	null	null	null	null	null	
2014-10-24 07:20:55.0	null	2015-01-08 13:50:04.0	open	[]	1	128	Eliminate two duplicated lines codes to enhance the xt_hashlimit.c of ne...	https://api.github.com/repos/torvalds/linux/issues/128	https://github.com/torvalds/linux/pull/128	There are two duplicated lines of hashlimit_mt. Now I enhance it to eliminate the duplicated codes. 	gfreewind	null	null	null	null	null	null	
2014-10-29 07:08:47.0	2014-11-12 00:46:18.0	2014-11-12 00:46:18.0	closed	[]	2	129	Surface Pro 3 Type Cover from Ubuntu Forums	https://api.github.com/repos/torvalds/linux/issues/129	https://github.com/torvalds/linux/pull/129	Surface Pro 3 Type Cover that works with Ubuntu (and possibly Arch) from this thread.  Both trackpad and keyboard work after compiling my own kernel. http://ubuntuforums.org/showthread.php?t=2231207&page=2&s=44910e0c56047e4f93dfd9fea58121ef This is the first time I'm submitting a pull request to the linux kernel, please point out any mistakes if I made any. 	chemelnucfin	null	null	null	null	null	null	
2014-10-29 23:31:24.0	2014-10-29 23:32:50.0	2014-10-29 23:32:50.0	closed	[]	0	130	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/130	https://github.com/torvalds/linux/pull/130	Sync as of 10272014 	dabrace	null	null	null	null	null	null	
2014-10-29 23:34:36.0	2014-10-29 23:34:53.0	2014-10-29 23:34:53.0	closed	[]	0	131	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/131	https://github.com/torvalds/linux/pull/131	Sync as of 10272014 	dabrace	null	null	null	null	null	null	
2014-10-30 23:20:16.0	null	2020-10-02 17:55:53.0	open	[]	8	132	Create operating system_src	https://api.github.com/repos/torvalds/linux/issues/132	https://github.com/torvalds/linux/pull/132		luvkg	null	null	null	null	null	null	
2014-11-03 06:43:00.0	2014-11-03 11:47:15.0	2014-11-03 11:47:25.0	closed	[]	1	133	Update irq.c, fix duplicate IRQ abbreviation	https://api.github.com/repos/torvalds/linux/issues/133	https://github.com/torvalds/linux/pull/133	Having 2 IRQ entries with the same abbreviation doesn't seem logical. Rename Hypervisor callback interrupts' abbreviation from THR to HCI. 	atonkyra	null	null	null	null	null	null	
2014-11-09 17:52:34.0	2014-11-09 17:52:55.0	2014-11-09 17:52:55.0	closed	[]	0	134	Merge pull request #2 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/134	https://github.com/torvalds/linux/pull/134	Sync as of 10272014 	dabrace	null	null	null	null	null	null	
2014-11-14 17:52:48.0	null	2020-10-02 17:55:51.0	open	[]	2	135	Small comment correction	https://api.github.com/repos/torvalds/linux/issues/135	https://github.com/torvalds/linux/pull/135	The time field in blk_io_trace is in nanoseconds. Correct the comment from microseconds to nanoseconds. The field was once in microseconds, but was changed to nanoseconds in commit 6c051ce0307526adec32a847f0daa1af2124f0a9 on March 25, 2009. Update the comment to match a 5-year-old reality. 	foodprocessor	null	null	null	null	null	null	
2014-11-15 07:10:12.0	null	2015-01-08 13:49:26.0	open	[]	3	136	Update xpad.c	https://api.github.com/repos/torvalds/linux/issues/136	https://github.com/torvalds/linux/pull/136	the abs_y and the abs_ry should negate the val and add 1 because it's the complement of the origin variable 	linbingchen	null	null	null	null	null	null	
2014-11-18 20:05:10.0	2014-11-18 20:05:36.0	2014-11-18 20:05:36.0	closed	[]	0	137	sync up with linux	https://api.github.com/repos/torvalds/linux/issues/137	https://github.com/torvalds/linux/pull/137		dabrace	null	null	null	null	null	null	
2014-11-24 01:07:44.0	null	2020-05-18 17:48:35.0	open	[]	1	138	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/138	https://github.com/torvalds/linux/pull/138	merge torvalds master 	qioixiy	null	null	null	null	null	null	
2014-11-26 05:42:44.0	null	2015-01-08 13:48:36.0	open	[]	1	139	Minor improvement for smsc95xx netusb driver performance.	https://api.github.com/repos/torvalds/linux/issues/139	https://github.com/torvalds/linux/pull/139	Reduce number of memcpy's by 1-2 improve transmit performance by 2-4%, or reduce cpu usage on a comparable value. 	SiarheiVolkau	null	null	null	null	null	null	
2014-11-27 16:31:07.0	2014-11-27 16:40:18.0	2014-11-27 16:40:18.0	closed	[]	0	140	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/140	https://github.com/torvalds/linux/pull/140	adding new changes 	sumanta23	null	null	null	null	null	null	
2014-11-27 18:08:24.0	null	2014-12-10 21:38:28.0	open	[]	5	141	updating for keypayload null check.	https://api.github.com/repos/torvalds/linux/issues/141	https://github.com/torvalds/linux/pull/141	adding NULL check to make it fail safe. Not sure about the return value. Please review and merge if required. 	sumanta23	null	null	null	null	null	null	
2014-11-27 21:54:40.0	2014-11-28 13:54:47.0	2014-11-28 13:54:47.0	closed	[]	0	142	[PATCH v6 0/5] acerhdf: adding new models, appropriate governor and minor clean up	https://api.github.com/repos/torvalds/linux/issues/142	https://github.com/torvalds/linux/pull/142	Hi,  This patch series is intended to: - Introduce "manual mode" support, which is needed to control   the fan of a few new models. - Add an appropriate thermal governor.  Manipulating and   fiddling around with the step-wise governor has been a very fragile thing   in the past and as it broke again, I used the opportunity to add a two   point thermal governor which implements the actual fan handling required by   acerhdf and puts from my point of view things straight. - Do some minor clean up like:   - adding second trip point for critical temperature   - removing _t suffix from struct which isn't typedef and replace unsigned     char by u8 (Patch 6)  Thanks and kind regards, peter 	xypiie	null	null	null	null	null	null	
2014-11-30 10:45:25.0	null	2020-10-02 17:55:45.0	open	[]	1	143	Update abdac.c	https://api.github.com/repos/torvalds/linux/issues/143	https://github.com/torvalds/linux/pull/143	Some mini changes of int to void. 	Amitabha2001	null	null	null	null	null	null	
2014-12-03 01:37:04.0	null	2014-12-13 23:53:15.0	open	[]	1	144	some optimizations	https://api.github.com/repos/torvalds/linux/issues/144	https://github.com/torvalds/linux/pull/144		alex8092	null	null	null	null	null	null	
2014-12-11 21:12:39.0	2014-12-11 21:18:55.0	2014-12-11 21:19:05.0	closed	[]	1	145	Updating the dmesg grep	https://api.github.com/repos/torvalds/linux/issues/145	https://github.com/torvalds/linux/pull/145	The module name is batman_adv (not batman-adv) in the logging of dmesg. 	danger89	null	null	null	null	null	null	
2014-12-21 11:50:05.0	2014-12-21 11:50:26.0	2014-12-21 11:50:26.0	closed	[]	0	146	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/146	https://github.com/torvalds/linux/pull/146	Update linux Repository 	aktech	null	null	null	null	null	null	
2014-12-21 19:11:24.0	2014-12-21 19:29:48.0	2014-12-21 19:29:48.0	closed	[]	1	147	My branch	https://api.github.com/repos/torvalds/linux/issues/147	https://github.com/torvalds/linux/pull/147	I made some documentation changes, please review 	Irvandoval	null	null	null	null	null	null	
2014-12-26 06:01:56.0	2014-12-26 14:31:26.0	2014-12-26 14:31:26.0	closed	[]	2	149	fixed typo in comment	https://api.github.com/repos/torvalds/linux/issues/149	https://github.com/torvalds/linux/pull/149	Line 1434; comment to function tty_driver_remove_tty() 	aaleksu	null	null	null	null	null	null	
2015-01-06 06:31:31.0	2015-01-06 23:20:44.0	2015-01-06 23:54:10.0	closed	[]	5	150	Replace gzip/bzip2 with xz in README	https://api.github.com/repos/torvalds/linux/issues/150	https://github.com/torvalds/linux/pull/150	Kernel tarballs are only compressed with xz now, gzip and bzip2 are redundant. 	felixphew	null	null	null	null	null	null	
2015-01-08 16:29:52.0	2015-01-08 16:30:31.0	2015-01-08 16:30:31.0	closed	[]	0	151	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/151	https://github.com/torvalds/linux/pull/151	merge 	willemwouters	null	null	null	null	null	null	
2015-01-08 16:31:00.0	2015-01-08 16:31:34.0	2015-01-08 16:31:34.0	closed	[]	0	152	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/152	https://github.com/torvalds/linux/pull/152	merge 	willemwouters	null	null	null	null	null	null	
2015-01-12 11:05:14.0	2015-01-12 11:05:43.0	2015-01-12 11:05:43.0	closed	[]	0	153	Update Copyright	https://api.github.com/repos/torvalds/linux/issues/153	https://github.com/torvalds/linux/pull/153	Update Copyright 	irogerthat	null	null	null	null	null	null	
2015-01-16 17:54:06.0	2015-01-16 17:59:37.0	2015-01-16 17:59:37.0	closed	[]	0	154	Artwork	https://api.github.com/repos/torvalds/linux/issues/154	https://github.com/torvalds/linux/pull/154	![noseparation](https://cloud.githubusercontent.com/assets/10564791/5781173/67edb974-9da8-11e4-97f7-7d7fe0d40abd.png)  There should be no seperation between userspace and kernel space. The code itself can decide where it wants to operate. 	Kernolia	null	null	null	null	null	null	
2015-01-17 02:38:31.0	null	2015-01-23 08:17:45.0	open	[]	3	155	Moving index in a more precise scope.	https://api.github.com/repos/torvalds/linux/issues/155	https://github.com/torvalds/linux/pull/155		Triton64	null	null	null	null	null	null	
2015-01-17 22:48:56.0	null	2021-03-21 09:03:58.0	open	[]	44	156	Pull it all	https://api.github.com/repos/torvalds/linux/issues/156	https://github.com/torvalds/linux/pull/156	racist 	xMooz	null	null	null	null	null	null	
2015-01-19 08:02:36.0	2015-01-19 10:44:48.0	2015-02-11 23:39:34.0	closed	[]	3	157	Merge origin repo updates	https://api.github.com/repos/torvalds/linux/issues/157	https://github.com/torvalds/linux/pull/157		yuxuanchen1997	null	null	null	null	null	null	
2015-01-28 11:54:21.0	2015-01-28 11:55:47.0	2015-01-28 11:55:47.0	closed	[]	0	158	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/158	https://github.com/torvalds/linux/pull/158	Merge to update 	chaithanya1996	null	null	null	null	null	null	
2015-02-05 14:43:10.0	null	2020-10-02 17:55:21.0	open	[]	11	159	Update smbencrypt.c	https://api.github.com/repos/torvalds/linux/issues/159	https://github.com/torvalds/linux/pull/159	Think it looks better with an explanation mark 	nibblebits	null	null	null	null	null	null	
2015-02-11 16:03:53.0	null	2015-05-12 18:09:01.0	open	[]	1	160	mali_drv.h includes drm_sman.h 	https://api.github.com/repos/torvalds/linux/issues/160	https://github.com/torvalds/linux/pull/160	There no drm_sman.h in linux kernel anymore 	amegz	null	null	null	null	null	null	
2015-02-19 20:10:55.0	2018-10-22 16:45:38.0	2018-10-22 16:45:38.0	closed	[]	3	161	Beta	https://api.github.com/repos/torvalds/linux/issues/161	https://github.com/torvalds/linux/pull/161		criminal	null	null	null	null	null	null	
2015-02-20 15:58:04.0	2017-05-11 12:59:16.0	2017-05-11 12:59:16.0	closed	[]	6	162	Replace old README with shiny new Markdown-based README	https://api.github.com/repos/torvalds/linux/issues/162	https://github.com/torvalds/linux/pull/162	Fine tuned and tested, this new README is 100% Markdown. It has (some) syntax highlighting, code recognition and more! 	nhubbard	null	null	null	null	null	null	
2015-02-25 04:06:40.0	2015-02-27 09:00:52.0	2015-02-27 09:00:52.0	closed	[]	4	163	Fix several "functoin" -> "function" typos	https://api.github.com/repos/torvalds/linux/issues/163	https://github.com/torvalds/linux/pull/163	Just a relatively common typo I noticed while browsing the linux source. 	razzius	null	null	null	null	null	null	
2015-02-26 16:14:57.0	2015-02-26 16:15:06.0	2015-02-26 16:15:06.0	closed	[]	0	164	Sync up with Linus	https://api.github.com/repos/torvalds/linux/issues/164	https://github.com/torvalds/linux/pull/164		dabrace	null	null	null	null	null	null	
2015-03-03 10:37:53.0	2015-03-03 10:38:25.0	2015-03-03 10:38:25.0	closed	[]	0	165	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/165	https://github.com/torvalds/linux/pull/165	updating my linux fork again 	sidcode	null	null	null	null	null	null	
2015-03-07 22:39:00.0	2015-03-09 21:00:36.0	2015-03-09 21:00:39.0	closed	[]	8	166	Update avc.c	https://api.github.com/repos/torvalds/linux/issues/166	https://github.com/torvalds/linux/pull/166		ghost	null	null	null	null	null	null	
2015-03-09 20:32:48.0	null	2015-03-09 22:02:13.0	open	[]	2	167	Update README	https://api.github.com/repos/torvalds/linux/issues/167	https://github.com/torvalds/linux/pull/167	Added ftp://ftp.kernel.org/pub/linux/kernel 	ghost	null	null	null	null	null	null	
2015-03-10 06:48:44.0	2015-03-10 06:49:00.0	2015-03-10 06:49:00.0	closed	[]	0	168	合并原作者提交	https://api.github.com/repos/torvalds/linux/issues/168	https://github.com/torvalds/linux/pull/168		mudongliang	null	null	null	null	null	null	
2015-03-16 17:34:50.0	2015-03-16 19:10:54.0	2015-03-16 19:10:54.0	closed	[]	0	169	Update cputime.c	https://api.github.com/repos/torvalds/linux/issues/169	https://github.com/torvalds/linux/pull/169	spelling mistake 	dautovri	null	null	null	null	null	null	
2015-03-16 17:43:58.0	2015-03-16 19:10:45.0	2015-03-16 19:10:48.0	closed	[]	2	170	Update sched.h	https://api.github.com/repos/torvalds/linux/issues/170	https://github.com/torvalds/linux/pull/170	spelling mistake 	dautovri	null	null	null	null	null	null	
2015-03-16 17:56:33.0	2015-03-16 19:10:36.0	2015-03-16 20:50:46.0	closed	[]	2	171	Update ftrace.c	https://api.github.com/repos/torvalds/linux/issues/171	https://github.com/torvalds/linux/pull/171	spelling mistake 	dautovri	null	null	null	null	null	null	
2015-03-16 18:12:36.0	2015-03-16 19:10:20.0	2015-03-16 19:10:20.0	closed	[]	1	172	spelling mistake 	https://api.github.com/repos/torvalds/linux/issues/172	https://github.com/torvalds/linux/pull/172	spelling mistake 	dautovri	null	null	null	null	null	null	
2015-03-17 19:55:36.0	2015-08-14 14:39:29.0	2015-08-14 14:39:29.0	closed	[]	0	173	Sync up with Linus	https://api.github.com/repos/torvalds/linux/issues/173	https://github.com/torvalds/linux/pull/173		dabrace	null	null	null	null	null	null	
2015-03-31 19:13:42.0	null	2020-10-02 17:55:17.0	open	[]	5	174	Fixed spelling errors	https://api.github.com/repos/torvalds/linux/issues/174	https://github.com/torvalds/linux/pull/174	Fixed some spelling and grammar errors in the documentation files. 	huntergregal	null	null	null	null	null	null	
2015-04-05 18:13:30.0	null	2020-10-02 17:55:15.0	open	[]	5	175	Fixed License	https://api.github.com/repos/torvalds/linux/issues/175	https://github.com/torvalds/linux/pull/175	I fixed the license 	revmischa	null	null	null	null	null	null	
2015-04-13 19:40:33.0	2015-04-13 19:50:36.0	2015-04-13 19:50:51.0	closed	[]	0	176	Update README Version	https://api.github.com/repos/torvalds/linux/issues/176	https://github.com/torvalds/linux/pull/176	Update Linux Kernel version in README file 	MAFLO321	null	null	null	null	null	null	
2015-04-15 10:45:47.0	2015-04-15 10:46:29.0	2015-04-15 10:46:29.0	closed	[]	0	177	Merge torvalds/linux:master	https://api.github.com/repos/torvalds/linux/issues/177	https://github.com/torvalds/linux/pull/177		AshishNamdev	null	null	null	null	null	null	
2015-04-15 10:48:24.0	2015-04-15 10:48:40.0	2015-04-15 10:48:40.0	closed	[]	0	178	Merge torvalds/linux:master 	https://api.github.com/repos/torvalds/linux/issues/178	https://github.com/torvalds/linux/pull/178		AshishNamdev	null	null	null	null	null	null	
2015-04-16 11:50:57.0	2015-04-16 11:53:06.0	2015-04-16 11:53:06.0	closed	[]	0	179	Merge pull request #2 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/179	https://github.com/torvalds/linux/pull/179	update 	DiamondBond	null	null	null	null	null	null	
2015-04-23 23:41:07.0	2015-04-24 10:31:28.0	2015-04-24 10:31:28.0	closed	[]	2	180	Added README.md	https://api.github.com/repos/torvalds/linux/issues/180	https://github.com/torvalds/linux/pull/180	I thought that a markdown version of the README would look better on GitHub while the orginial README would still be good in the terminal. My contact email is tsteinholz@yahoo.com. This upgrade will make the GitHub page more in inviting for new commers and also easier to start with. GitHub will automaticly show README.md before the normal README so there is no need to remove the old one if there is a need for it (it is more terminal friendly like I said before). Thanks. 	tsteinholz	null	null	null	null	null	null	
2015-04-26 00:14:39.0	2015-05-03 00:53:01.0	2015-05-03 00:53:01.0	closed	[]	6	181	Genius MousePen i608x patch fix	https://api.github.com/repos/torvalds/linux/issues/181	https://github.com/torvalds/linux/pull/181	okay, now i just sucked myself in front of everyone. then i'd like to add a few lines required for the device mentioned to work properly. thanks in advance. 	Erendis42	null	null	null	null	null	null	
2015-05-06 02:45:15.0	null	2020-10-02 17:55:12.0	open	[]	1	182	Another Hardware ID That i want to "just work".	https://api.github.com/repos/torvalds/linux/issues/182	https://github.com/torvalds/linux/pull/182	Im Just a Python Programmer :+1:  	adisciple50	null	null	null	null	null	null	
2015-05-11 10:43:22.0	null	2020-10-02 17:55:09.0	open	[]	1	183	fixed typos and grammar errors	https://api.github.com/repos/torvalds/linux/issues/183	https://github.com/torvalds/linux/pull/183	fixed typos and grammar errors of both Korean and English  I tried to fix few errors via github based on what I have learned from the mini concert held at school today.  If I am doing correct, it might be the first contribution in my life :).  Have nice day :)   안녕하세요! 오늘 학교에서 진행한 미니콘서트에서 배운 대로 코드 구경을 하다가 몇 가지 오타랑 띄어쓰기 오류가 보여서 수정해보았습니다... 이렇게 해도 되는 건 진 아직 잘 모르겠지만.. ;; 맞는다면 이게 제 첫 contribution이 되겠네요!! 그럼 수고하세요~~ 	dgucsekelly	null	null	null	null	null	null	
2015-05-11 11:57:07.0	null	2020-10-02 17:55:08.0	open	[]	1	184	fixed spelling errors	https://api.github.com/repos/torvalds/linux/issues/184	https://github.com/torvalds/linux/pull/184		dgucsekelly	null	null	null	null	null	null	
2015-05-20 01:43:03.0	2015-05-20 01:43:13.0	2016-02-22 09:53:18.0	closed	[]	0	185	Review/opal irq	https://api.github.com/repos/torvalds/linux/issues/185	https://github.com/torvalds/linux/pull/185		mpe	null	null	null	null	null	null	
2015-05-23 14:40:28.0	null	2020-10-02 17:55:06.0	open	[]	9	186	shumeipai	https://api.github.com/repos/torvalds/linux/issues/186	https://github.com/torvalds/linux/pull/186		Crazylobster96	null	null	null	null	null	null	
2015-05-24 16:17:34.0	2015-05-24 16:19:04.0	2015-05-24 16:19:04.0	closed	[]	0	187	同步原作者更新	https://api.github.com/repos/torvalds/linux/issues/187	https://github.com/torvalds/linux/pull/187	同步原作者更新 	leewi9	null	null	null	null	null	null	
2015-05-27 15:07:31.0	2015-05-27 15:24:19.0	2015-05-27 15:24:19.0	closed	[]	1	188	Patch for LZ4 decompression bug	https://api.github.com/repos/torvalds/linux/issues/188	https://github.com/torvalds/linux/pull/188	Sorry if i've misformatted this patch, i'm not terribly comfortable with github :(  The issue (and patch by Krzysztof Kolasa emerged here https://lkml.org/lkml/2015/4/3/453)  64bit kernels using the latest upstream source and compressed with LZ4 (mine included) are unable to decompress the image and simply halt saying  "Decoding failed  -- System halted"  The attached patch by Krzysztof successfully solved this issue, but there was a problem with its formatting, so it wasn't accepted. I'm hoping a suitable patch can be made (if i've horribly mucked this up) before the 4.1 kernel reaches stability, even better if it could make it in before this weekend's next -rc bump. I cannot comment on the suitability or style of the code itself, i am simply trying to push it forward, since it's quite important for fellow LZ4 users.  Thank you in advance! 	Antonius-git	null	null	null	null	null	null	
2015-05-27 15:28:54.0	2015-05-27 17:20:33.0	2015-05-27 17:20:33.0	closed	[]	2	189	Patch for LZ4 decompression bug	https://api.github.com/repos/torvalds/linux/issues/189	https://github.com/torvalds/linux/pull/189	Sorry if i've misformatted this patch, i'm not terribly comfortable with github :(  The issue (and subsequent patch by Krzysztof Kolasa emerged here https://lkml.org/lkml/2015/4/3/453)  64bit kernels using the latest upstream source and compressed with LZ4 (mine included) are unable to decompress the image and simply halt saying  "Decoding failed  -- System halted"  this issue began to surface for me from -rc4 and -rc5 of the 4.1 cycle.  The attached patch by Krzysztof successfully solved this issue, but there was a problem with its formatting, so it wasn't accepted for merging. Formatting-permitting, I'm hoping a suitable patch can be made if this isn't correct, before the 4.1 kernel reaches stability, even better if it could make it in before this weekend's next -rc bump.  I cannot comment on the suitability or style of the code itself, i am simply trying to push it forward, since it's quite important for fellow LZ4 users.  Thank you! 	Antonius-git	null	null	null	null	null	null	
2015-06-04 14:11:01.0	null	2020-10-02 17:55:03.0	open	[]	4	190	Spelling mistake in ftrace.c	https://api.github.com/repos/torvalds/linux/issues/190	https://github.com/torvalds/linux/pull/190	Fixed a spelling mistake ('immediately' has one l) 	RobvandenBerg	null	null	null	null	null	null	
2015-06-23 10:42:17.0	2015-06-24 07:44:37.0	2015-06-24 07:44:37.0	closed	[]	3	191	Wrong value unsigned three	https://api.github.com/repos/torvalds/linux/issues/191	https://github.com/torvalds/linux/pull/191		dileep-p	null	null	null	null	null	null	
2015-07-07 01:13:36.0	null	2015-07-07 02:41:37.0	open	[]	2	192	update include to point to correct header location	https://api.github.com/repos/torvalds/linux/issues/192	https://github.com/torvalds/linux/pull/192	this corrects bad header include location 	efargas	null	null	null	null	null	null	
2015-07-08 09:30:29.0	2015-07-08 09:31:03.0	2015-07-08 09:31:03.0	closed	[]	0	193	[PATCH v3 1/7]powerpc/powernv: Data structure and macros definition	https://api.github.com/repos/torvalds/linux/issues/193	https://github.com/torvalds/linux/pull/193	Create new header file "nest-pmu.h" to add the data structures and macros needed for the nest pmu support.  Signed-off-by: Madhavan Srinivasan maddy@linux.vnet.ibm.com 	maddy-kerneldev	null	null	null	null	null	null	
2015-07-08 10:19:07.0	2015-07-08 10:21:03.0	2015-11-13 02:58:24.0	closed	[]	0	194	Nest instr v3	https://api.github.com/repos/torvalds/linux/issues/194	https://github.com/torvalds/linux/pull/194		maddy-kerneldev	null	null	null	null	null	null	
2015-07-20 09:43:06.0	2015-07-21 03:58:31.0	2015-07-21 04:31:52.0	closed	[]	2	195	Test push	https://api.github.com/repos/torvalds/linux/issues/195	https://github.com/torvalds/linux/pull/195		fireshots	null	null	null	null	null	null	
2015-07-23 07:05:52.0	null	2020-10-02 17:55:00.0	open	[]	1	196	iio:ak8975 : Fixed checkpatch warning	https://api.github.com/repos/torvalds/linux/issues/196	https://github.com/torvalds/linux/pull/196	This adds support for the AsahiKASEI magnetometer sensor compatible string. 	fireshots	null	null	null	null	null	null	
2015-08-02 16:12:25.0	2015-08-02 16:14:25.0	2015-08-02 16:14:25.0	closed	[]	0	197	update	https://api.github.com/repos/torvalds/linux/issues/197	https://github.com/torvalds/linux/pull/197		ghost	null	null	null	null	null	null	
2015-08-13 18:05:36.0	2015-08-13 18:05:40.0	2015-08-13 18:05:40.0	closed	[]	0	198	Update Makefile	https://api.github.com/repos/torvalds/linux/issues/198	https://github.com/torvalds/linux/pull/198		rigbiks	null	null	null	null	null	null	
2015-08-17 07:07:34.0	2015-08-17 09:44:30.0	2015-08-17 09:44:35.0	closed	[]	1	199	Fix error with PMP cards not reading correctly on boot	https://api.github.com/repos/torvalds/linux/issues/199	https://github.com/torvalds/linux/pull/199	Please review the issue outlined in http://www.spinics.net/lists/linux-ide/msg42820.html  	jared-mackey	null	null	null	null	null	null	
2015-08-18 19:04:38.0	2015-09-28 17:18:56.0	2015-09-28 17:18:56.0	closed	[]	7	200	Update README	https://api.github.com/repos/torvalds/linux/issues/200	https://github.com/torvalds/linux/pull/200	Hi,  I added section "Books" and a link to the Learn Linux in a Month of Lunches written by Steven Ovadia for Manning Publications. We believe this book is a great resource and all members of community will benefit from this information. If you find this inappropriate, please let me know where I can publish it. 	slaven-s	null	null	null	null	null	null	
2015-08-25 06:42:42.0	2015-08-25 06:43:23.0	2015-08-25 06:43:23.0	closed	[]	0	201	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/201	https://github.com/torvalds/linux/pull/201	pull latest torvalds/linux into oe5hpm/linux 	oe5hpm	null	null	null	null	null	null	
2015-09-04 01:51:17.0	2015-09-04 01:51:54.0	2015-09-04 02:55:05.0	closed	[]	1	202	Master	https://api.github.com/repos/torvalds/linux/issues/202	https://github.com/torvalds/linux/pull/202	latest 	oceanfly	null	null	null	null	null	null	
2015-09-04 14:46:44.0	null	2020-10-02 17:54:58.0	open	[]	14	203	Fix typo 'acceptible'	https://api.github.com/repos/torvalds/linux/issues/203	https://github.com/torvalds/linux/pull/203	null	TheTypoMaster	null	null	null	null	null	null	
2015-09-08 20:13:54.0	2015-09-14 20:03:31.0	2019-04-16 09:41:57.0	closed	[]	2	204	Fixes issue preventing DMA being used	https://api.github.com/repos/torvalds/linux/issues/204	https://github.com/torvalds/linux/pull/204	Fixes issue preventing DMA being used whenever the rx/tx_buf is not word aligned. 	rlbartle	null	null	null	null	null	null	
2015-09-14 13:36:17.0	2015-09-14 13:36:28.0	2015-09-14 13:36:28.0	closed	[]	0	205	Sync up with Linus	https://api.github.com/repos/torvalds/linux/issues/205	https://github.com/torvalds/linux/pull/205		dabrace	null	null	null	null	null	null	
2015-09-16 20:57:34.0	2015-09-16 20:57:47.0	2015-09-16 20:57:47.0	closed	[]	0	206	Sync up with Linus	https://api.github.com/repos/torvalds/linux/issues/206	https://github.com/torvalds/linux/pull/206		dabrace	null	null	null	null	null	null	
2015-09-17 14:55:11.0	2015-10-04 14:12:50.0	2015-10-04 14:12:50.0	closed	[]	1	207	Add the missing PCIID for MSI (maybe not only) R7 370	https://api.github.com/repos/torvalds/linux/issues/207	https://github.com/torvalds/linux/pull/207	There's a missing PCIID for MSI R7 370 Armor 2X (probably some other cards). Without it the screen will turn black (there would be signal, but system hangs if it happens) or just become filled with vertical white stripes - note that it happens at the modesetting stage. There's a way to make it work without this patch by disabling dpm (dpm=0) and/or disabling modesetting (nomodeset) (note that disabling modesetting will make your system work for a while, but it will hang after a few minutes). Adding this line/ID will make the GPU function as expected, without functionaluty loss/instability. 	mradermaxlol	null	null	null	null	null	null	
2015-09-21 08:50:04.0	2015-09-21 08:50:57.0	2015-09-21 08:50:57.0	closed	[]	0	208	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/208	https://github.com/torvalds/linux/pull/208	Update from original 	pangteypiyush	null	null	null	null	null	null	
2015-09-29 12:57:30.0	2015-09-29 15:21:48.0	2015-09-29 15:22:20.0	closed	[]	1	209	Added bc in the list of dependencies to have an exhaustive list.	https://api.github.com/repos/torvalds/linux/issues/209	https://github.com/torvalds/linux/pull/209	I created a docker container based on the list of dependencies and it was missing bc. I spotted out it is later in the documentation but it would be more convenient to have it in the list as well as it seems to be the only one missing when using the default configuration on x86_64. 	blem3	null	null	null	null	null	null	
2015-10-08 16:26:25.0	2015-10-09 01:23:51.0	2015-11-05 23:12:23.0	closed	[]	6	210	drivers/of/irq.c : correct a typing error	https://api.github.com/repos/torvalds/linux/issues/210	https://github.com/torvalds/linux/pull/210	There is a typing error "interrrupt" So, I correct this to "interrupt"  Signed-off-by: Kyuha Hwang gmonster@jjssm.org 	gmonster	null	null	null	null	null	null	
2015-10-22 03:00:25.0	2015-10-22 03:01:02.0	2015-10-22 03:01:02.0	closed	[]	0	211	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/211	https://github.com/torvalds/linux/pull/211	actualizo-1 	danysan2000	null	null	null	null	null	null	
2015-10-23 08:59:14.0	2016-12-19 05:55:33.0	2020-05-18 17:50:23.0	closed	[]	0	212	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/212	https://github.com/torvalds/linux/pull/212	merge: with linus tree on 25-August 	mfrw	null	null	null	null	null	null	
2015-10-25 16:10:36.0	2015-11-24 04:08:01.0	2015-11-24 04:08:01.0	closed	[]	1	213	Update CREDITS	https://api.github.com/repos/torvalds/linux/issues/213	https://github.com/torvalds/linux/pull/213	Fix tags/typos 	skyscooby	null	null	null	null	null	null	
2015-10-25 23:12:39.0	null	2020-10-02 17:54:54.0	open	[]	1	214	Updated "arch/x86/boot/Makefile" to include ldlinux.c32	https://api.github.com/repos/torvalds/linux/issues/214	https://github.com/torvalds/linux/pull/214	Syslinux/isolinux 5.0.0 and up requires ldlinux.c32 to boot. This adds ldlinux.c32 so computers with isolinux 5.0.0+ can boot. 	Vladcosmonaut	null	null	null	null	null	null	
2015-10-26 03:07:15.0	2015-10-26 03:56:55.0	2015-11-04 08:17:25.0	closed	[]	0	215	Testusb	https://api.github.com/repos/torvalds/linux/issues/215	https://github.com/torvalds/linux/pull/215	Based on hikey-mainline-rebase, for usb 	gaozhangfei	null	null	null	null	null	null	
2015-10-29 20:24:55.0	2015-10-31 10:24:39.0	2015-10-31 10:24:46.0	closed	[]	2	216	Fixing infoleak via FBIOGET_VBLANK IOCTL CALL	https://api.github.com/repos/torvalds/linux/issues/216	https://github.com/torvalds/linux/pull/216	This was fixed on the repo in git.kernel.org (CVE-2015-7884) but not here. 	ghost	null	null	null	null	null	null	
2015-11-03 06:18:44.0	null	2020-10-02 17:54:52.0	open	[]	0	217	4.1 utf8	https://api.github.com/repos/torvalds/linux/issues/217	https://github.com/torvalds/linux/pull/217		boslad	null	null	null	null	null	null	
2015-11-03 20:24:59.0	null	2020-10-02 17:54:51.0	open	[]	2	218	Changed post-increment operation	https://api.github.com/repos/torvalds/linux/issues/218	https://github.com/torvalds/linux/pull/218	pre-increment operation is faster than post-increment operation 	crrlos	null	null	null	null	null	null	
2015-11-04 17:29:12.0	null	2020-10-02 17:54:49.0	open	[]	0	219	Odroid 3.14.y linaro	https://api.github.com/repos/torvalds/linux/issues/219	https://github.com/torvalds/linux/pull/219		bhavishyagoel	null	null	null	null	null	null	
2015-11-12 11:20:24.0	2015-11-12 11:21:23.0	2015-11-12 11:21:23.0	closed	[]	0	220	Lkl fbsd	https://api.github.com/repos/torvalds/linux/issues/220	https://github.com/torvalds/linux/pull/220		tavip	null	null	null	null	null	null	
2015-11-13 20:55:11.0	2015-11-13 20:56:28.0	2015-11-13 20:56:28.0	closed	[]	0	221	aacraid: avoid calling pci_free_consistent on NULL pointer.	https://api.github.com/repos/torvalds/linux/issues/221	https://github.com/torvalds/linux/pull/221	This prevents a hang when the adapter fails to initialize. Calling pci_free_consistent() with zero size results in an attempt to invalid all pages in the 64-bit address space, effectively hanging the system. 	dougmill-ibm	null	null	null	null	null	null	
2015-11-15 20:46:53.0	null	2020-10-02 17:54:46.0	open	[]	0	222	HID: sony: Enable Bluetooth Gasia third-party PS3 controllers	https://api.github.com/repos/torvalds/linux/issues/222	https://github.com/torvalds/linux/pull/222		vs7	null	null	null	null	null	null	
2015-11-16 23:13:50.0	null	2020-10-02 17:54:43.0	open	[]	2	223	typo: teh->the	https://api.github.com/repos/torvalds/linux/issues/223	https://github.com/torvalds/linux/pull/223	Because it matters.  And....  Hodor. 	ubante	null	null	null	null	null	null	
2015-11-17 14:04:39.0	null	2020-10-02 17:54:41.0	open	[]	1	224	Change device tree like sunxi's .fex file	https://api.github.com/repos/torvalds/linux/issues/224	https://github.com/torvalds/linux/pull/224		AAndranik	null	null	null	null	null	null	
2015-11-18 13:12:02.0	2015-11-20 08:25:13.0	2015-11-20 08:25:13.0	closed	[]	0	225	Added linking of rt library for UML	https://api.github.com/repos/torvalds/linux/issues/225	https://github.com/torvalds/linux/pull/225	Fixes the following linking problems for a UML build   ``` arch/um/os-Linux/built-in.o: In function `os_timer_create': arch/um/os-Linux/time.c:51: undefined reference to `timer_create' arch/um/os-Linux/built-in.o: In function `os_timer_set_interval': arch/um/os-Linux/time.c:84: undefined reference to `timer_settime' arch/um/os-Linux/built-in.o: In function `os_timer_remain': arch/um/os-Linux/time.c:109: undefined reference to `timer_gettime' arch/um/os-Linux/built-in.o: In function `os_timer_one_shot': arch/um/os-Linux/time.c:132: undefined reference to `timer_settime' arch/um/os-Linux/built-in.o: In function `os_timer_disable': arch/um/os-Linux/time.c:145: undefined reference to `timer_settime' ```  Reference http://man7.org/linux/man-pages/man2/timer_create.2.html 	oxidase	null	null	null	null	null	null	
2015-11-19 19:05:18.0	null	2015-12-17 21:02:17.0	open	[]	2	226	Drivers Description	https://api.github.com/repos/torvalds/linux/issues/226	https://github.com/torvalds/linux/pull/226	Drivers Description README.md 	darksystem23	null	null	null	null	null	null	
2015-11-20 08:42:41.0	2015-11-20 14:29:04.0	2015-11-20 14:29:14.0	closed	[]	0	227	Added linking of rt library for UML	https://api.github.com/repos/torvalds/linux/issues/227	https://github.com/torvalds/linux/pull/227	Fixes arch/um/os-Linux/built-in.o: In function `os_timer_create': arch/um/os-Linux/time.c:51: undefined reference to`timer_create' arch/um/os-Linux/built-in.o: In function `os_timer_set_interval': arch/um/os-Linux/time.c:84: undefined reference to`timer_settime' arch/um/os-Linux/built-in.o: In function `os_timer_remain': arch/um/os-Linux/time.c:109: undefined reference to`timer_gettime' arch/um/os-Linux/built-in.o: In function `os_timer_one_shot': arch/um/os-Linux/time.c:132: undefined reference to`timer_settime' arch/um/os-Linux/built-in.o: In function `os_timer_disable': arch/um/os-Linux/time.c:145: undefined reference to`timer_settime' 	oxidase	null	null	null	null	null	null	
2015-11-24 23:24:19.0	2015-11-24 23:24:46.0	2015-11-25 06:19:47.0	closed	[]	11	228	Makes it way more better	https://api.github.com/repos/torvalds/linux/issues/228	https://github.com/torvalds/linux/pull/228		ghost	null	null	null	null	null	null	
2015-11-26 04:15:21.0	2015-11-29 06:27:56.0	2015-11-29 06:28:55.0	closed	[]	3	229	Sync with torvalds/master	https://api.github.com/repos/torvalds/linux/issues/229	https://github.com/torvalds/linux/pull/229	Sync with torvalds/master 	ghost	null	null	null	null	null	null	
2015-11-30 10:59:17.0	2016-05-04 07:40:48.0	2020-05-18 17:50:16.0	closed	[]	1	230	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/230	https://github.com/torvalds/linux/pull/230	Update from original 	xeronith	null	null	null	null	null	null	
2015-12-01 19:07:46.0	2015-12-01 19:08:36.0	2015-12-01 19:09:15.0	closed	[]	1	231	Merge pull request #2 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/231	https://github.com/torvalds/linux/pull/231	sync with linus 	jgunthorpe	null	null	null	null	null	null	
2015-12-13 23:53:46.0	2015-12-13 23:54:49.0	2015-12-28 23:21:02.0	closed	[]	0	232	Fix int1 recursion and hard system lockup 	https://api.github.com/repos/torvalds/linux/issues/232	https://github.com/torvalds/linux/pull/232	Hi Linus,  The following changes since commit 527e9316f8ec44bd53d90fb9f611fa7ffff52bb9:    Linux 4.4-rc4 (2015-12-06 15:43:12 -0800)  are available in the git repository at:    https://github.com/jeffmerkey/linux/tree/fixes-for-linus  hw_breakpoint.c:  fix INT1 recursion and system hard hang.  Fixes a 13 year old bug in the int1 handler path that results in a hard system lockup is someone triggers an int1 breakpoint in the hardware and no perf event has been registered.   Prints a log message and sets the resume flag in x86 and x86_64 to prevent the system from locking up and gracefully prints a rate limited message. 	ghost	null	null	null	null	null	null	
2015-12-14 15:45:21.0	2018-01-11 12:41:21.0	2018-01-11 12:41:21.0	closed	[]	4	233	Bugfix - Typos	https://api.github.com/repos/torvalds/linux/issues/233	https://github.com/torvalds/linux/pull/233	Found few typos in `./Documentation` folder, so I thought I’m gonna fix 'em, and here we are. 	jutaz	null	null	null	null	null	null	
2015-12-14 22:30:19.0	2016-01-19 00:30:20.0	2016-01-19 00:30:20.0	closed	[]	0	234	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/234	https://github.com/torvalds/linux/pull/234	Update to r4.3 with some USB fixes 	gotoco	null	null	null	null	null	null	
2015-12-25 17:54:15.0	2015-12-25 17:54:45.0	2015-12-25 17:54:45.0	closed	[]	0	235	update	https://api.github.com/repos/torvalds/linux/issues/235	https://github.com/torvalds/linux/pull/235		akmittal	null	null	null	null	null	null	
2015-12-27 07:50:46.0	null	2020-10-02 17:54:38.0	open	[]	7	236	ideapad-laptop: Fix backlight regression introduced in 26bff5	https://api.github.com/repos/torvalds/linux/issues/236	https://github.com/torvalds/linux/pull/236	Fixes bug 110021: https://bugzilla.kernel.org/show_bug.cgi?id=110021 Tested on Yoga 900. 	Zenexer	null	null	null	null	null	null	
2015-12-29 07:25:57.0	2015-12-29 07:49:25.0	2015-12-29 08:01:33.0	closed	[]	0	237	0	https://api.github.com/repos/torvalds/linux/issues/237	https://github.com/torvalds/linux/pull/237		ghost	null	null	null	null	null	null	
2015-12-29 21:36:19.0	2016-05-04 13:34:07.0	2020-05-18 17:50:10.0	closed	[]	0	238	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/238	https://github.com/torvalds/linux/pull/238	Update from original 	ddave09	null	null	null	null	null	null	
2015-12-30 12:55:30.0	2017-05-14 07:55:44.0	2017-05-14 07:55:44.0	closed	[]	1	239	Update module-signing.txt	https://api.github.com/repos/torvalds/linux/issues/239	https://github.com/torvalds/linux/pull/239	The correct kernel parameter for enforcing the signature check should be: module.sig_enforce (not enforcemodulesig=1) 	FrankSpierings	null	null	null	null	null	null	
2015-12-30 13:19:38.0	2016-03-23 11:12:38.0	2016-03-23 12:51:48.0	closed	[]	9	240	Fix frequency range for SI2157 Tuner	https://api.github.com/repos/torvalds/linux/issues/240	https://github.com/torvalds/linux/pull/240	Si2157 supports from 42 to 870 mhz 	koshkoshka	null	null	null	null	null	null	
2016-01-08 06:23:25.0	2016-01-08 06:23:36.0	2016-01-08 06:23:36.0	closed	[]	0	241	jjj	https://api.github.com/repos/torvalds/linux/issues/241	https://github.com/torvalds/linux/pull/241	jj 	barisvelioglu	null	null	null	null	null	null	
2016-01-09 21:27:27.0	null	2016-02-27 18:05:17.0	open	[]	2	242	Decreasing the size of radix_tree_node	https://api.github.com/repos/torvalds/linux/issues/242	https://github.com/torvalds/linux/pull/242	The count in radix_tree_node does NOT need to be unsigned int but unsigned short is enough. For the disability of calculating logarithm in compile time, original authors defined RADIX_TREE_HEIGHT_SHIFT as RADIX_TREE_MAX_PATH + 1, but it should be log2(RADIX_TREE_MAX_PATH) + 1 indeed. I noticed that and, after calculating I am aware of unsigned long is not suitable for count but unsigned short. Between, I knew there is an alignment of radix_tree_node, so I cannot tell if the size of radix_tree_node will actually decrease. 	mzer0-yu	null	null	null	null	null	null	
2016-01-11 00:00:14.0	2016-07-04 17:28:47.0	2016-07-04 17:28:47.0	closed	[]	2	243	Sync with torvalds/master	https://api.github.com/repos/torvalds/linux/issues/243	https://github.com/torvalds/linux/pull/243	sync 	ghost	null	null	null	null	null	null	
2016-01-14 18:25:56.0	2016-01-16 12:44:06.0	2016-01-16 12:44:06.0	closed	[]	3	244	Dmitryc patches4	https://api.github.com/repos/torvalds/linux/issues/244	https://github.com/torvalds/linux/pull/244	@dvyukov please take a look 	ramosian-glider	null	null	null	null	null	null	
2016-01-14 19:55:08.0	null	2020-10-02 17:54:34.0	open	[]	1	245	Maxtouch v3.10	https://api.github.com/repos/torvalds/linux/issues/245	https://github.com/torvalds/linux/pull/245		wistronatmel	null	null	null	null	null	null	
2016-01-16 06:07:14.0	2016-01-16 06:08:13.0	2016-01-16 06:08:13.0	closed	[]	0	246	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/246	https://github.com/torvalds/linux/pull/246	update from origin 	willseeyou	null	null	null	null	null	null	
2016-01-16 14:19:24.0	2016-04-09 05:43:32.0	2016-04-09 05:43:32.0	closed	[]	2	247	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/247	https://github.com/torvalds/linux/pull/247	update 	wyqwxj	null	null	null	null	null	null	
2016-01-18 10:10:16.0	2016-01-18 10:10:47.0	2016-01-18 10:10:47.0	closed	[]	0	248	3.18 utf8	https://api.github.com/repos/torvalds/linux/issues/248	https://github.com/torvalds/linux/pull/248		darcyg	null	null	null	null	null	null	
2016-01-18 10:41:57.0	2016-01-18 10:43:20.0	2016-01-18 10:43:20.0	closed	[]	0	249	3.18 utf8	https://api.github.com/repos/torvalds/linux/issues/249	https://github.com/torvalds/linux/pull/249		darcyg	null	null	null	null	null	null	
2016-01-22 09:00:38.0	null	2016-01-22 09:32:25.0	open	[]	2	250	asus-nb-wmi: Add wapf4 quirk for the X550VC	https://api.github.com/repos/torvalds/linux/issues/250	https://github.com/torvalds/linux/pull/250	X550VC as many others Asus laptops need wapf4 quirk to make RFKILL switch be functional. Otherwise system boots with wireless card disabled and is only possible to enable it by suspend/resume.  Bug report: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1334230 	amazingfate	null	null	null	null	null	null	
2016-01-30 16:13:12.0	2016-01-30 16:13:20.0	2016-01-30 16:13:20.0	closed	[]	0	251	Update Copyright	https://api.github.com/repos/torvalds/linux/issues/251	https://github.com/torvalds/linux/pull/251		codepriya	null	null	null	null	null	null	
2016-01-30 20:16:22.0	2016-01-30 20:42:05.0	2016-01-30 20:42:05.0	closed	[]	0	252	4.4-rc1 broken perf tool.	https://api.github.com/repos/torvalds/linux/issues/252	https://github.com/torvalds/linux/pull/252	reproduce:  lzto@objd ~ $ ~/linux/tools/perf/perf record -I -e intel_pt/tsc=1,noretcomp=1/u /bin/ls lzto@objd ~ $ ~/linux/tools/perf/perf script  -F event,comm,pid,tid,time,addr,ip,sym,dso,iregs Segmentation fault lzto@objd ~ $  Upon further investigation, it seems commit 747a9b0a08ae300b99b8aa7861bd3609f3b3e782 breaks perf tool.  __list_del(): tools/include/linux/list.h does not check null pointer dereference 	lzto	null	null	null	null	null	null	
2016-01-30 21:13:02.0	2016-02-08 15:37:00.0	2016-02-08 15:37:00.0	closed	[]	2	253	broken perf tool on 4.5-rc1	https://api.github.com/repos/torvalds/linux/issues/253	https://github.com/torvalds/linux/pull/253	reproduce:   lzto@objd ~ $ ~/linux/tools/perf/perf record -I -e intel_pt/tsc=1,noretcomp=1/u /bin/ls   lzto@objd ~ $ ~/linux/tools/perf/perf script  -F event,comm,pid,tid,time,addr,ip,sym,dso,iregs   Segmentation fault   lzto@objd ~ $  Upon further investigation, it seems that commit 747a9b0a08ae ("Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip") breaks perf tool.  __list_del(): tools/include/linux/list.h does not check null pointer dereference 	lzto	null	null	null	null	null	null	
2016-02-05 22:26:27.0	2016-05-04 22:01:14.0	2020-05-18 17:50:05.0	closed	[]	3	254	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/254	https://github.com/torvalds/linux/pull/254	111 	DeadMetaler	null	null	null	null	null	null	
2016-02-06 06:18:26.0	2016-02-06 06:19:15.0	2016-02-06 06:19:15.0	closed	[]	0	255	同步torvalds的内核修改。	https://api.github.com/repos/torvalds/linux/issues/255	https://github.com/torvalds/linux/pull/255	同步torvalds的内核修改。 	wutiejun	null	null	null	null	null	null	
2016-02-08 22:07:31.0	2016-02-27 18:19:37.0	2016-02-27 18:19:37.0	closed	[]	2	256	Removed trailing spaces at the end of paragraphs	https://api.github.com/repos/torvalds/linux/issues/256	https://github.com/torvalds/linux/pull/256	Making a readme parser, found some trailing spaces that should be removed. 	chaityabshah	null	null	null	null	null	null	
2016-02-17 14:55:04.0	2016-02-17 14:55:48.0	2016-02-17 14:57:30.0	closed	[]	0	257	nil	https://api.github.com/repos/torvalds/linux/issues/257	https://github.com/torvalds/linux/pull/257	update 	gdalbeniz	null	null	null	null	null	null	
2016-02-21 11:17:06.0	2019-01-23 15:30:42.0	2020-05-18 17:49:36.0	closed	[]	1	258	added support for goobay Active USB 3.0 Data Link Cable 	https://api.github.com/repos/torvalds/linux/issues/258	https://github.com/torvalds/linux/pull/258	I added support for PL-27A1 just by defining new vendor/device id to current plusb driver. The chipset is identical to PL-25A1 except it support USB3.0 interface. 	danielkucera	null	null	null	null	null	null	
2016-02-22 19:52:53.0	2016-02-22 19:53:43.0	2016-02-22 19:53:43.0	closed	[]	0	259	V4.5 rc3/apq8096 wip	https://api.github.com/repos/torvalds/linux/issues/259	https://github.com/torvalds/linux/pull/259	Pull the change. 	JinLWQ	null	null	null	null	null	null	
2016-02-26 09:20:19.0	null	2020-10-02 17:54:29.0	open	[]	2	260	Fix External interrupt issue on SUN7I devices	https://api.github.com/repos/torvalds/linux/issues/260	https://github.com/torvalds/linux/pull/260		AAndranik	null	null	null	null	null	null	
2016-03-01 05:32:06.0	2017-03-02 15:08:39.0	2020-05-18 18:11:45.0	closed	[]	5	261	Added busybox as extra failsafe init	https://api.github.com/repos/torvalds/linux/issues/261	https://github.com/torvalds/linux/pull/261	Most If not all distributions include a static version of busybox in there initramfs. So I added busybox ash as a failsafe init. 	jcjordyn130	null	null	null	null	null	null	
2016-03-12 17:13:33.0	2016-03-12 17:13:49.0	2016-03-12 17:13:49.0	closed	[]	0	262	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/262	https://github.com/torvalds/linux/pull/262	keeping up to date with the main linux branch 	sidcode	null	null	null	null	null	null	
2016-03-13 12:11:26.0	2016-03-13 12:11:38.0	2016-03-13 12:11:38.0	closed	[]	0	263	Pull request for Linux	https://api.github.com/repos/torvalds/linux/issues/263	https://github.com/torvalds/linux/pull/263		irogerthat	null	null	null	null	null	null	
2016-03-14 03:57:32.0	2016-03-14 04:03:26.0	2016-03-14 04:03:26.0	closed	[]	0	264	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/264	https://github.com/torvalds/linux/pull/264	update to origion 	xxxx001	null	null	null	null	null	null	
2016-03-14 17:00:05.0	2016-03-14 17:08:07.0	2016-03-14 21:56:53.0	closed	[]	0	265	For next	https://api.github.com/repos/torvalds/linux/issues/265	https://github.com/torvalds/linux/pull/265		bgly	null	null	null	null	null	null	
2016-03-19 07:49:18.0	2016-03-19 07:49:24.0	2016-03-19 07:49:24.0	closed	[]	0	266	Ignore - just FTR	https://api.github.com/repos/torvalds/linux/issues/266	https://github.com/torvalds/linux/pull/266		arjun024	null	null	null	null	null	null	
2016-03-20 06:09:39.0	2016-03-20 06:13:02.0	2016-03-20 06:13:02.0	closed	[]	0	267	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/267	https://github.com/torvalds/linux/pull/267	Update from original 	yogeshagr	null	null	null	null	null	null	
2016-03-24 21:04:33.0	null	2020-10-02 17:54:26.0	open	[]	1	268	Credits	https://api.github.com/repos/torvalds/linux/issues/268	https://github.com/torvalds/linux/pull/268		rdcaceres	null	null	null	null	null	null	
2016-03-27 08:46:17.0	null	2020-10-02 17:54:21.0	open	[]	2	269	4.3 btrfs rename work	https://api.github.com/repos/torvalds/linux/issues/269	https://github.com/torvalds/linux/pull/269		damquangtuan	null	null	null	null	null	null	
2016-03-28 20:20:16.0	2016-03-29 13:40:49.0	2016-03-29 13:40:49.0	closed	[]	0	270	Add -lintl to Allow the Info to Compile for cpupower	https://api.github.com/repos/torvalds/linux/issues/270	https://github.com/torvalds/linux/pull/270	Without this it cannot find GNU gettext. Compilation without this errors with: "undefined reference to 'libintl_gettext'" 	niaow	null	null	null	null	null	null	
2016-04-01 19:35:33.0	2016-04-01 20:06:33.0	2016-04-01 20:06:33.0	closed	[]	0	271	Added (0x1391, 0x2000) to IdealTec	https://api.github.com/repos/torvalds/linux/issues/271	https://github.com/torvalds/linux/pull/271	I got some *nix on my Ix104c3 tablet and tried to work around the touchscreen.  And it works perfect =)  It will be awesome to see out-the box support for these tablets-because they run old WIndows XP. 	FireGrace	null	null	null	null	null	null	
2016-04-05 06:59:19.0	2016-04-05 06:59:35.0	2016-04-05 06:59:35.0	closed	[]	0	272	Merge rc3	https://api.github.com/repos/torvalds/linux/issues/272	https://github.com/torvalds/linux/pull/272		jolting	null	null	null	null	null	null	
2016-04-09 05:45:05.0	2016-04-09 05:45:16.0	2016-04-09 05:45:16.0	closed	[]	0	273	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/273	https://github.com/torvalds/linux/pull/273	update 	wyqwxj	null	null	null	null	null	null	
2016-04-09 05:57:38.0	2016-04-09 05:57:54.0	2016-04-09 05:57:54.0	closed	[]	0	274	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/274	https://github.com/torvalds/linux/pull/274	update 	wyqwxj	null	null	null	null	null	null	
2016-04-13 11:12:22.0	2016-04-13 11:12:34.0	2016-04-13 11:12:34.0	closed	[]	0	275	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/275	https://github.com/torvalds/linux/pull/275	update 	nanszy	null	null	null	null	null	null	
2016-04-18 15:28:44.0	2016-04-18 15:29:15.0	2016-04-18 15:29:15.0	closed	[]	0	276	Structure cleanup	https://api.github.com/repos/torvalds/linux/issues/276	https://github.com/torvalds/linux/pull/276		bgly	null	null	null	null	null	null	
2016-04-20 07:55:18.0	2016-04-20 07:55:22.0	2016-04-20 07:55:59.0	closed	[]	0	277	created by mistake	https://api.github.com/repos/torvalds/linux/issues/277	https://github.com/torvalds/linux/pull/277	created by mistake 	cnd	null	null	null	null	null	null	
2016-04-25 07:46:40.0	2016-04-25 07:55:55.0	2016-04-25 07:55:55.0	closed	[]	0	278	makefile: update makefile	https://api.github.com/repos/torvalds/linux/issues/278	https://github.com/torvalds/linux/pull/278	test  Signed-off-by: Peter Pan peterpandong@micron.com 	peterpansjtu	null	null	null	null	null	null	
2016-04-29 12:32:21.0	2016-04-29 12:32:28.0	2016-04-29 12:32:48.0	closed	[]	0	279	created by mistake #2	https://api.github.com/repos/torvalds/linux/issues/279	https://github.com/torvalds/linux/pull/279		cnd	null	null	null	null	null	null	
2016-05-03 01:14:45.0	2016-05-03 01:15:09.0	2016-05-03 01:15:09.0	closed	[]	0	280	Scsi lib	https://api.github.com/repos/torvalds/linux/issues/280	https://github.com/torvalds/linux/pull/280		bgly	null	null	null	null	null	null	
2016-05-11 20:22:40.0	2016-06-06 17:59:27.0	2016-06-09 19:30:44.0	closed	[]	10	282	OCD line spacing?	https://api.github.com/repos/torvalds/linux/issues/282	https://github.com/torvalds/linux/pull/282		willzma	null	null	null	null	null	null	
2016-05-13 19:28:03.0	2016-05-13 19:28:21.0	2016-07-03 09:25:04.0	closed	[]	2	283	Sun8i emac wip	https://api.github.com/repos/torvalds/linux/issues/283	https://github.com/torvalds/linux/pull/283		philippechataignon	null	null	null	null	null	null	
2016-05-15 14:49:59.0	null	2020-10-02 17:54:16.0	open	[]	1	284	Fixed	https://api.github.com/repos/torvalds/linux/issues/284	https://github.com/torvalds/linux/pull/284	Change 288. line = Add command line. 	abdvel	null	null	null	null	null	null	
2016-05-17 01:14:44.0	2016-05-17 01:15:11.0	2018-07-06 23:50:40.0	closed	[]	0	285	A64 v1	https://api.github.com/repos/torvalds/linux/issues/285	https://github.com/torvalds/linux/pull/285		b1acknight	null	null	null	null	null	null	
2016-05-17 04:04:49.0	2016-05-19 15:31:09.0	2016-05-19 15:31:09.0	closed	[]	0	286	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/286	https://github.com/torvalds/linux/pull/286	kernel 4.6 	liangzhenduo0608	null	null	null	null	null	null	
2016-05-17 09:43:01.0	null	2020-10-02 17:54:13.0	open	[]	4	287	Serial: 8250: Add 7173 (WCH CH355 4S card)	https://api.github.com/repos/torvalds/linux/issues/287	https://github.com/torvalds/linux/pull/287	Adds support for the WCH CH355 4S card in the 8250 serial driver. 	petrenkoas83	null	null	null	null	null	null	
2016-05-18 02:00:13.0	null	2020-10-02 17:54:11.0	open	[]	0	288	X2apic	https://api.github.com/repos/torvalds/linux/issues/288	https://github.com/torvalds/linux/pull/288		lantianyu	null	null	null	null	null	null	
2016-05-19 10:09:36.0	2016-05-19 10:10:05.0	2016-05-19 10:10:05.0	closed	[]	0	289	Added code for custom file prefetching	https://api.github.com/repos/torvalds/linux/issues/289	https://github.com/torvalds/linux/pull/289	This file prefetching algorithm works on the basis of access patterns of a given file type and the cache pressure. This patch adds the code for measuring the cache pressure, identify filetype and get the access pattern of that file. This patch also sets up a sysctl variable to change the prefetching algorihtm. 	ravippandey	null	null	null	null	null	null	
2016-05-19 23:46:29.0	null	2016-05-30 04:45:22.0	open	[]	1	290	text  formatting	https://api.github.com/repos/torvalds/linux/issues/290	https://github.com/torvalds/linux/pull/290	Just a simple format correction. 	renancunha33	null	null	null	null	null	null	
2016-05-21 06:14:28.0	null	2020-10-02 17:54:06.0	open	[]	2	291	cpu/hotplug: handle unbalanced hotplug enable/disable	https://api.github.com/repos/torvalds/linux/issues/291	https://github.com/torvalds/linux/pull/291	Currently it just print a warning message but did not reset cpu_hotplug_disabled when the enable/disable is unbalanced. The unbalanced enable/disable will lead the cpu hotplug work abnormally.  Do nothing if an unablanced hotplug enable detected.  Signed-off-by: Lianwei Wang lianwei.wang@gmail.com 	lianwei	null	null	null	null	null	null	
2016-05-25 15:38:35.0	2016-05-26 06:50:43.0	2016-05-26 06:50:43.0	closed	[]	2	292	ASoc Driver for Wolfson WM8742 DAC	https://api.github.com/repos/torvalds/linux/issues/292	https://github.com/torvalds/linux/pull/292	New driver for Wolfson WM8742 dac IC with Level adjustment  correction and internal feature options exposed to Alsa control panel. 	escalator2015	null	null	null	null	null	null	
2016-05-27 19:29:19.0	2016-05-30 15:13:39.0	2016-05-30 15:13:39.0	closed	[]	1	293	Adjust the speed on the TUN/TAP interface	https://api.github.com/repos/torvalds/linux/issues/293	https://github.com/torvalds/linux/pull/293	SPEED_10 is almost unheard of in modern Networking. Since the TUN/TAP interface can exceed this value it breaks tools like sar that use the port's speed to calculate interface utilization. SPEED_100 is a more realistic number that you might see on a modern network, though SPEED_1000 is becoming more common now. 	aetaric	null	null	null	null	null	null	
2016-05-30 22:29:54.0	2016-05-31 22:31:40.0	2016-05-31 22:31:40.0	closed	[]	2	294	Update Kconfig	https://api.github.com/repos/torvalds/linux/issues/294	https://github.com/torvalds/linux/pull/294	typo: missing verb. 	iambrosie	null	null	null	null	null	null	
2016-06-01 20:01:21.0	2016-09-02 19:01:33.0	2016-09-02 19:01:33.0	closed	[]	3	295	more efficient code,  c_can.c	https://api.github.com/repos/torvalds/linux/issues/295	https://github.com/torvalds/linux/pull/295		ghost	null	null	null	null	null	null	
2016-06-11 21:26:47.0	null	2016-06-12 15:50:28.0	open	[]	3	296	The description shouldn't contain a example, when the example is directly below.	https://api.github.com/repos/torvalds/linux/issues/296	https://github.com/torvalds/linux/pull/296	Nothing big, but seems more consistent to me this way. 	tigoesnumb3rs	null	null	null	null	null	null	
2016-06-22 12:46:52.0	2016-06-22 13:17:14.0	2016-06-22 13:17:14.0	closed	[]	0	299	usb gadgetfs EFAULT error  bugfix	https://api.github.com/repos/torvalds/linux/issues/299	https://github.com/torvalds/linux/pull/299	copy_to_iter() returns number of bytes copied 	oandrew	null	null	null	null	null	null	
2016-06-28 04:33:53.0	2019-10-22 12:41:01.0	2019-10-22 12:41:01.0	closed	[]	3	300	Update ahash.c	https://api.github.com/repos/torvalds/linux/issues/300	https://github.com/torvalds/linux/pull/300	Look at it. 	nishankbhati	null	null	null	null	null	null	
2016-06-28 07:03:40.0	null	2020-10-02 17:53:57.0	open	[]	2	301	might bug in file_system or bash	https://api.github.com/repos/torvalds/linux/issues/301	https://github.com/torvalds/linux/pull/301	might a bug but this might can't be a bug 	YangAndWang	null	null	null	null	null	null	
2016-07-10 13:31:51.0	null	2020-10-02 17:53:54.0	open	[]	1	302	simplified getting previous and next node in red-black tree for vmalloc	https://api.github.com/repos/torvalds/linux/issues/302	https://github.com/torvalds/linux/pull/302	In the red-black tree, when looking for the insertion point for a new node, we can get the previous and next nodes to the new one, before color adjustment(rb_insert_color ). No need  to retraverse the red-black tree again. 	SemanShen	null	null	null	null	null	null	
2016-07-12 12:52:17.0	2016-07-12 12:52:31.0	2016-07-12 12:52:31.0	closed	[]	0	303	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/303	https://github.com/torvalds/linux/pull/303	PR 	SilentFlyBy	null	null	null	null	null	null	
2016-07-12 14:43:02.0	2016-07-12 14:43:14.0	2016-07-12 14:43:14.0	closed	[]	0	304	Create Kernel Build	https://api.github.com/repos/torvalds/linux/issues/304	https://github.com/torvalds/linux/pull/304		ghost	null	null	null	null	null	null	
2016-07-16 18:39:55.0	null	2016-07-16 19:41:09.0	open	[]	1	305	fixed error message to use decimal instead of hex	https://api.github.com/repos/torvalds/linux/issues/305	https://github.com/torvalds/linux/pull/305		fmhess	null	null	null	null	null	null	
2016-07-21 21:23:24.0	null	2016-07-22 01:18:31.0	open	[]	2	306	u8pdating	https://api.github.com/repos/torvalds/linux/issues/306	https://github.com/torvalds/linux/pull/306		notquitesane	null	null	null	null	null	null	
2016-07-23 13:35:51.0	2016-07-25 10:25:01.0	2016-07-25 10:25:01.0	closed	[]	2	307	Add --output option to perf-top	https://api.github.com/repos/torvalds/linux/issues/307	https://github.com/torvalds/linux/pull/307	Perf is a nice and efficient tool to me. I feel like --output option is missing to perf-top.  Franck 	fghoussen	null	null	null	null	null	null	
2016-07-27 21:47:09.0	null	2020-10-02 17:53:47.0	open	[]	3	308	Grammar mistake	https://api.github.com/repos/torvalds/linux/issues/308	https://github.com/torvalds/linux/pull/308		Jonatino	null	null	null	null	null	null	
2016-08-05 06:00:39.0	2016-08-06 12:03:30.0	2016-08-06 12:03:30.0	closed	[]	3	310	Create trialusr	https://api.github.com/repos/torvalds/linux/issues/310	https://github.com/torvalds/linux/pull/310	Can be deleted 	jayeshgharat	null	null	null	null	null	null	
2016-08-05 16:22:34.0	2016-08-05 16:24:06.0	2016-08-05 16:24:06.0	closed	[]	0	311	up	https://api.github.com/repos/torvalds/linux/issues/311	https://github.com/torvalds/linux/pull/311	up 	shanmin	null	null	null	null	null	null	
2016-08-05 19:45:56.0	2016-08-12 19:54:35.0	2016-08-12 19:54:35.0	closed	[]	3	312	Fixed typo (suspeneded -> suspended).	https://api.github.com/repos/torvalds/linux/issues/312	https://github.com/torvalds/linux/pull/312		cyberplant	null	null	null	null	null	null	
2016-08-07 21:05:48.0	2016-08-07 21:24:35.0	2016-08-07 21:26:04.0	closed	[]	0	313	joystick: xpad.c, new pad id	https://api.github.com/repos/torvalds/linux/issues/313	https://github.com/torvalds/linux/pull/313	I added a joystick ID to the xbox controller driver (Hori Real Arcade Pro.V).  PR closed because it won't be taken into account, this needs to be sent on the linux kernel ML. 	KaneRoot	null	null	null	null	null	null	
2016-08-17 04:52:20.0	2016-08-17 04:53:24.0	2016-08-17 04:53:24.0	closed	[]	0	314	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/314	https://github.com/torvalds/linux/pull/314	sync with upstream. 	weener	null	null	null	null	null	null	
2016-08-18 11:11:58.0	null	2020-10-02 17:53:38.0	open	[]	1	315	Added usb-device desriptor for Sagem USB-Serial Controller	https://api.github.com/repos/torvalds/linux/issues/315	https://github.com/torvalds/linux/pull/315	Changes to be committed:     modified:   drivers/usb/class/cdc-acm.c 	krajcovic	null	null	null	null	null	null	
2016-08-31 13:59:08.0	2016-09-13 13:31:51.0	2016-09-13 13:31:51.0	closed	[]	3	316	fixed return value	https://api.github.com/repos/torvalds/linux/issues/316	https://github.com/torvalds/linux/pull/316	Fixed return value... selinux_enabled to "selinux_is_enabled" 	RichVillage	null	null	null	null	null	null	
2016-09-02 09:35:37.0	2016-09-02 09:36:20.0	2016-09-02 09:36:20.0	closed	[]	0	317	Blk.vhost blk	https://api.github.com/repos/torvalds/linux/issues/317	https://github.com/torvalds/linux/pull/317		Peter--wang	null	null	null	null	null	null	
2016-09-03 02:52:48.0	null	2016-11-28 19:20:40.0	open	[]	6	318	Change "M" to "N"	https://api.github.com/repos/torvalds/linux/issues/318	https://github.com/torvalds/linux/pull/318	Someone accidentally hit M I think 	appins	null	null	null	null	null	null	
2016-09-06 07:06:23.0	null	2020-10-02 17:53:28.0	open	[]	1	319	Update bcm4709-netgear-r8000.dts	https://api.github.com/repos/torvalds/linux/issues/319	https://github.com/torvalds/linux/pull/319	Including missing WAN GPIO and LED Switch. 	adityaxavier	null	null	null	null	null	null	
2016-09-07 23:15:00.0	null	2020-10-02 17:53:26.0	open	[]	9	320	Quantum Computing and Biological Neural Network Implementations	https://api.github.com/repos/torvalds/linux/issues/320	https://github.com/torvalds/linux/pull/320	Due to advancing computing paradigm this must become part of Linux Road Map 	jobs-git	null	null	null	null	null	null	
2016-09-13 07:20:27.0	2016-09-13 07:21:28.0	2016-09-13 07:21:28.0	closed	[]	0	321	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/321	https://github.com/torvalds/linux/pull/321	pull 	w01230	null	null	null	null	null	null	
2016-09-14 16:28:50.0	null	2016-09-14 16:28:50.0	open	[]	0	322	Ath6kl Baytrail SDIO support	https://api.github.com/repos/torvalds/linux/issues/322	https://github.com/torvalds/linux/pull/322	Added baytrail ID to sdio.c 	guylamar2006	null	null	null	null	null	null	
2016-09-23 02:38:42.0	null	2020-10-02 17:53:18.0	open	[]	1	323	Add rtc-pcf2127 as a module in the kernel config	https://api.github.com/repos/torvalds/linux/issues/323	https://github.com/torvalds/linux/pull/323	I, and I assume many others, are using the pcf2127 chip as an rtc on the odroid c2. To use this hardware on the i2c network requires that rtc-pcf2127 be available as a module, which it is not presently. I have tested its inclusion as a module in a custom build of the kernel and it works fine. Adding it as a module in the regularly updated kernel will make upgrades much easier for all those using this chip (shield). 	paulcrawford	null	null	null	null	null	null	
2016-09-25 16:54:00.0	null	2020-10-02 17:53:15.0	open	[]	0	324	Remove unresolved cache limit of 10	https://api.github.com/repos/torvalds/linux/issues/324	https://github.com/torvalds/linux/pull/324	The maximum number of unresolved multicast groups in the Multicast Routing Table (MRT) is limited to 10 or less within the ipmr_cache_unresolved function. The unresolved cache is flushed and what seems to be a statically random set of 10 or less unresolved multicast groups are rebuilt in the MRT every jiffies+HZ/10.  In an environment where there are a great deal more than 10 multicast source streams and only a few are actually joined a great deal more than 10 possible unresolved entries may exist and many cache_misses are encountered.  A recompiled Linux kernel, using this patch quickly creates multicast routes from a complete cache of unresolved entries.  The 10 unresolved cache limit results in a denial of service, if a host sends 20 or greater streams to an interface serviced by pimd (ie if a host sends 100 multicast streams, there is a 1 in 10 chance that a cache hit would be encountered with the existing code.) 	kopren	null	null	null	null	null	null	
2016-09-26 09:35:58.0	null	2016-09-26 09:35:58.0	open	[]	0	325	Update kvm_main.c	https://api.github.com/repos/torvalds/linux/issues/325	https://github.com/torvalds/linux/pull/325		gautam1858	null	null	null	null	null	null	
2016-09-26 09:46:16.0	null	2020-10-02 17:53:11.0	open	[]	0	326	add ra8871 ra8873 ra8876 ra8877 support to fbtft	https://api.github.com/repos/torvalds/linux/issues/326	https://github.com/torvalds/linux/pull/326	add ra8871 ra8873 ra8876 ra8877 driver to fbtft 	mountainH	null	null	null	null	null	null	
2016-09-26 12:17:30.0	2016-09-26 12:21:46.0	2016-09-26 12:21:46.0	closed	[]	0	327	Remove 0x0c control character	https://api.github.com/repos/torvalds/linux/issues/327	https://github.com/torvalds/linux/pull/327	There is two 0x0c(form feed, new page) control characters around function apecs_pci_tbi. Don't know why, not a problem for compiler, just not feel good. 	yingzm	null	null	null	null	null	null	
2016-09-27 13:30:41.0	null	2016-09-27 13:30:41.0	open	[]	0	328	Debug Message show fps allways 0 in fbtft_update_display	https://api.github.com/repos/torvalds/linux/issues/328	https://github.com/torvalds/linux/pull/328	Switching on Debug=32 (DEBUG_TIME_EACH_UPDATE) shows allways 0 FPS. Compared to earlier Version shows, that the if statement in 394 has been negated and the assigment in 397 (par->update_time = ts_start;) has to be moved (now 408) after the usage in 398 (now 397). Now the value of fps is correctly calculated. 	gdampf	null	null	null	null	null	null	
2016-09-29 19:05:37.0	2016-09-29 19:09:16.0	2016-09-29 19:09:16.0	closed	[]	0	329	Update intel_opregion.c	https://api.github.com/repos/torvalds/linux/issues/329	https://github.com/torvalds/linux/pull/329		ghost	null	null	null	null	null	null	
2016-10-07 23:05:00.0	null	2020-10-02 17:53:08.0	open	[]	0	330	Nanopi2	https://api.github.com/repos/torvalds/linux/issues/330	https://github.com/torvalds/linux/pull/330		andrewcollis	null	null	null	null	null	null	
2016-10-08 15:19:28.0	null	2020-10-02 17:53:06.0	open	[]	0	331	FSM Client and Server	https://api.github.com/repos/torvalds/linux/issues/331	https://github.com/torvalds/linux/pull/331	FSM Subsystem for linux kernel.   http://fsmos.ru/en 	gusenkovs	null	null	null	null	null	null	
2016-10-09 15:54:27.0	null	2019-10-01 21:55:12.0	open	[]	84	332	Added support for Apple Magic Trackpad 2 in bcm5974 driver	https://api.github.com/repos/torvalds/linux/issues/332	https://github.com/torvalds/linux/pull/332	Incorporated the driver for the Apple Magic Trackpad 2 into the bcm5974 (MacBook Tochpad) driver. The Magic Trackpad 2 needs to be switched into the finger-reporting-mode, just like the other MacBook-Touchpads as well. But the format is different to the ones before. The Header is 12 Bytes long and each reported finger is additional 9 Bytes. The data order is as well different.  This is my first contribution. Please let me know if i have to change anything or submit the patch to someone else.  Kind regards Marek 	mwyborski	null	null	null	null	null	null	
2016-10-13 05:47:16.0	2016-10-18 01:39:42.0	2016-10-18 01:39:42.0	closed	[]	2	333	Syntax Integration (__FUNCTION__ ==> __func__)	https://api.github.com/repos/torvalds/linux/issues/333	https://github.com/torvalds/linux/pull/333	Align the other codes and formats. change `__FUNCTION__` to `__func__` 	jybaek	null	null	null	null	null	null	
2016-10-14 05:14:48.0	null	2020-02-17 20:53:43.0	open	[]	2	334	Minor comment typo change	https://api.github.com/repos/torvalds/linux/issues/334	https://github.com/torvalds/linux/pull/334		BDHU	null	null	null	null	null	null	
2016-10-15 15:25:33.0	2016-11-28 17:27:57.0	2020-02-09 15:41:52.0	closed	[]	90	335	Delete duplicate word "long long" in Introduction	https://api.github.com/repos/torvalds/linux/issues/335	https://github.com/torvalds/linux/pull/335	Hi friend, I delete a duplicate word. 	AlonsoIbarra	null	null	null	null	null	null	
2016-10-17 07:49:20.0	2016-10-17 07:54:04.0	2016-10-17 07:54:04.0	closed	[]	0	336	4.8 muqss	https://api.github.com/repos/torvalds/linux/issues/336	https://github.com/torvalds/linux/pull/336		thunderrd	null	null	null	null	null	null	
2016-10-18 08:49:45.0	2016-10-20 09:10:50.0	2016-10-20 09:10:50.0	closed	[]	1	337	platform/x86:asus-nb-wmi: Add ASUSTeK COMPUTER INC. E200HA	https://api.github.com/repos/torvalds/linux/issues/337	https://github.com/torvalds/linux/pull/337		shlemisto	null	null	null	null	null	null	
2016-10-18 15:21:39.0	2016-10-19 18:32:58.0	2016-10-19 18:32:58.0	closed	[]	2	338	Disable hw TSO for atl1e atheros card	https://api.github.com/repos/torvalds/linux/issues/338	https://github.com/torvalds/linux/pull/338	So maybe i'm the only one that is still using this Ethernet card in the world but after opening a bug a lot time ago my patch was not merged: this card has a broken hardware as described [here](https://bugzilla.kernel.org/show_bug.cgi?id=113501) it causes a lot of speed problem. 	anthonytex	null	null	null	null	null	null	
2016-10-19 05:52:03.0	2016-10-19 13:38:59.0	2016-10-19 13:39:00.0	closed	[]	0	339	fixed a bug that rrpc abandon current block	https://api.github.com/repos/torvalds/linux/issues/339	https://github.com/torvalds/linux/pull/339	when write big files or use fio to test rrpc,then kernel panic and the bio hung.  [] dump_stack+0x51/0x78 [] __warn+0xfd/0x120 [] warn_slowpath_null+0x1d/0x20 [] rrpc_set_lun_cur+0x6d/0x80 [rrpc] [] rrpc_map_page+0xb9/0x2b0 [rrpc] [] rrpc_write_ppalist_rq+0x98/0x180 [rrpc] [] rrpc_setup_rq+0x106/0x1e0 [rrpc] [] ? mempool_alloc+0x68/0x180 [] rrpc_submit_io+0x76/0x150 [rrpc] [] rrpc_make_rq+0x6b/0x170 [rrpc] [] generic_make_request+0xfc/0x1d0 [] submit_bio+0x65/0x130 [] do_blockdev_direct_IO+0x7a9/0x820 [] ? get_page_from_freelist+0x573/0x8a0 [] ? I_BDEV+0x20/0x20 [] ? I_BDEV+0x20/0x20 [] __blockdev_direct_IO+0x3a/0x40 [] blkdev_direct_IO+0x43/0x50 [] generic_file_direct_write+0xac/0x160 [] __generic_file_write_iter+0xd1/0x1f0 [] blkdev_write_iter+0x9f/0xf0 [] __vfs_write+0xff/0x120 [] vfs_write+0xc1/0x130 [] ? __fdget+0x13/0x20 [] SyS_pwrite64+0x9f/0xb0 [] ? posix_get_monotonic_raw+0x11/0x20 [] do_syscall_64+0x6c/0x160 [] ? prepare_exit_to_usermode+0xa0/0xd0 [] entry_SYSCALL64_slow_path+0x25/0x25  The problem is that rrpc abandon the current block which is gc 	HuiHuangShi	null	null	null	null	null	null	
2016-10-19 13:44:30.0	null	2020-10-02 17:52:53.0	open	[]	0	340	resolve the bug that race condition in rrpc cur_rblk	https://api.github.com/repos/torvalds/linux/issues/340	https://github.com/torvalds/linux/pull/340	The issue problem is here https://github.com/OpenChannelSSD/linux/issues/9 	HuiHuangShi	null	null	null	null	null	null	
2016-10-21 17:25:03.0	2016-10-21 17:25:44.0	2016-10-21 17:25:44.0	closed	[]	0	341	Odroidc 3.10.y	https://api.github.com/repos/torvalds/linux/issues/341	https://github.com/torvalds/linux/pull/341		ducthinhqn	null	null	null	null	null	null	
2016-10-26 08:03:32.0	2016-10-26 08:10:46.0	2016-10-26 08:10:46.0	closed	[]	1	342	Try something new	https://api.github.com/repos/torvalds/linux/issues/342	https://github.com/torvalds/linux/pull/342	I meant no offense. 	githubwyf	null	null	null	null	null	null	
2016-10-26 13:27:20.0	2016-10-26 13:29:21.0	2016-10-26 13:29:21.0	closed	[]	0	343	doing a pre	https://api.github.com/repos/torvalds/linux/issues/343	https://github.com/torvalds/linux/pull/343	I meant no offense 	githubwyf	null	null	null	null	null	null	
2016-10-26 13:29:05.0	2016-10-26 13:29:31.0	2016-10-26 13:29:31.0	closed	[]	0	344	A branch for pre	https://api.github.com/repos/torvalds/linux/issues/344	https://github.com/torvalds/linux/pull/344		githubwyf	null	null	null	null	null	null	
2016-10-27 05:30:06.0	null	2020-10-02 17:52:50.0	open	[]	1	345	Numerous Grammatical and Syntactic Errors (includes proposed changes)	https://api.github.com/repos/torvalds/linux/issues/345	https://github.com/torvalds/linux/pull/345	Fixes:  (+) Several typos; (+) Grammatical errors; (+) Syntactic issues...  Examples: (+) "in-order", not "in order" (see context) (+) "currently", not "currented" (+) "PowerPC", not "powerpc" (+) "Linux", not "linux" (see context) 	itmoba	null	null	null	null	null	null	
2016-10-27 07:23:12.0	2016-10-27 07:23:40.0	2016-10-27 07:23:40.0	closed	[]	0	346	I meant no offense	https://api.github.com/repos/torvalds/linux/issues/346	https://github.com/torvalds/linux/pull/346	OKay 	githubwyf	null	null	null	null	null	null	
2016-10-29 03:54:37.0	null	2020-10-02 17:52:47.0	open	[]	1	347	Update 	https://api.github.com/repos/torvalds/linux/issues/347	https://github.com/torvalds/linux/pull/347		irogerthat	null	null	null	null	null	null	
2016-10-31 06:49:37.0	2016-10-31 06:49:42.0	2016-10-31 06:49:42.0	closed	[]	0	349	Update Copyright	https://api.github.com/repos/torvalds/linux/issues/349	https://github.com/torvalds/linux/pull/349		codepriya	null	null	null	null	null	null	
2016-11-01 03:56:58.0	2017-04-14 16:52:50.0	2017-04-14 16:52:50.0	closed	[]	0	350	Sun8i H3: i2c2 uses regs for i2c1	https://api.github.com/repos/torvalds/linux/issues/350	https://github.com/torvalds/linux/pull/350	At line 539  reg = <0x01c2b000 0x400>;  should be  reg = <0x01c2b400 0x400>;	WereCatf	null	null	null	null	null	null	
2016-11-03 07:07:30.0	2016-11-03 08:06:02.0	2016-11-03 08:06:02.0	closed	[]	0	351	typo teh --> the	https://api.github.com/repos/torvalds/linux/issues/351	https://github.com/torvalds/linux/pull/351	I think it's misspelled	byung-u	null	null	null	null	null	null	
2016-11-03 10:36:58.0	2016-11-03 10:41:43.0	2016-11-03 10:41:43.0	closed	[]	1	352	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/352	https://github.com/torvalds/linux/pull/352	Hello,world!	ippotim	null	null	null	null	null	null	
2016-11-03 10:42:39.0	2016-11-03 10:42:57.0	2016-11-03 10:42:57.0	closed	[]	0	353	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/353	https://github.com/torvalds/linux/pull/353	Hello,world!	ippotim	null	null	null	null	null	null	
2016-11-03 10:47:19.0	2016-11-03 10:49:40.0	2016-11-03 10:49:40.0	closed	[]	0	354	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/354	https://github.com/torvalds/linux/pull/354	Hello,world!	ippotim	null	null	null	null	null	null	
2016-11-03 10:54:07.0	2016-11-03 10:57:32.0	2016-11-03 10:57:32.0	closed	[]	0	355	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/355	https://github.com/torvalds/linux/pull/355	Hello,world!	ippotim	null	null	null	null	null	null	
2016-11-06 17:07:21.0	2016-11-06 20:55:26.0	2016-11-06 20:55:26.0	closed	[]	1	356	Add Microsoft Surface Pro 4 Type Cover support	https://api.github.com/repos/torvalds/linux/issues/356	https://github.com/torvalds/linux/pull/356		jfarthing84	null	null	null	null	null	null	
2016-11-11 08:20:07.0	2017-07-07 15:32:41.0	2017-07-07 15:32:41.0	closed	[]	5	357	Improve README formatting	https://api.github.com/repos/torvalds/linux/issues/357	https://github.com/torvalds/linux/pull/357	I renamed README file as README.md to make Github able to format it and make it more visual.	pierre42100	null	null	null	null	null	null	
2016-11-14 18:06:41.0	null	2016-12-09 22:32:23.0	open	[]	4	358	device_cgroup:  added a new control file, devices.info	https://api.github.com/repos/torvalds/linux/issues/358	https://github.com/torvalds/linux/pull/358	device_cgroup:  added a new control file, devices.info, to show full state and not just the backward-compatible "whitelist of devices."  This maintains the backward compatibility that seems to be desired for devices.list but also makes a full description of the cgroup available.    Format follows:            [default behavior]          {+|-} [type] [major]:[minor] [access mode]    Examples:            ALLOW ALL          - c 195:* rwm          - c 244:0 rwm    or            DENY ALL          + c 8:* rw  	jtfrey	null	null	null	null	null	null	
2016-11-17 10:49:37.0	2016-11-17 10:51:08.0	2016-11-17 10:51:08.0	closed	[]	0	359	Speculative page fault	https://api.github.com/repos/torvalds/linux/issues/359	https://github.com/torvalds/linux/pull/359	This series is a port on 4.8 kernel of the speculative fault series proposed by Peter Zijlstra in 2014:  http://linux-kernel.2935.n7.nabble.com/RFC-PATCH-0-6-Another-go-at-speculative-page-faults-tt965642.html    Note that the first patch of the series is out of scope and is just there to allow building kernel on Ubuntu 16.10.	ldu4	null	null	null	null	null	null	
2016-11-18 16:27:43.0	2016-11-18 16:28:41.0	2016-11-18 16:28:41.0	closed	[]	0	360	kkk	https://api.github.com/repos/torvalds/linux/issues/360	https://github.com/torvalds/linux/pull/360		moyue	null	null	null	null	null	null	
2016-11-21 16:51:07.0	2016-11-21 16:52:59.0	2016-11-21 16:52:59.0	closed	[]	0	361	isdnctrl 2>&1|grep version	https://api.github.com/repos/torvalds/linux/issues/361	https://github.com/torvalds/linux/pull/361	isdnctrl 2>&1|grep version changed to isdnctrl 2>&1|grep --version 	deveshmehra	null	null	null	null	null	null	
2016-12-03 18:57:43.0	2016-12-03 18:57:58.0	2016-12-03 18:58:17.0	closed	[]	1	363	Update README	https://api.github.com/repos/torvalds/linux/issues/363	https://github.com/torvalds/linux/pull/363		ghost	null	null	null	null	null	null	
2016-12-07 14:37:21.0	2016-12-08 02:18:51.0	2016-12-08 02:57:08.0	closed	[]	3	364	Corrected a Comment	https://api.github.com/repos/torvalds/linux/issues/364	https://github.com/torvalds/linux/pull/364	Changed the misspelled word "behaviour" to "behavior" on line 339 of the core.c file.	WesCourtney44	null	null	null	null	null	null	
2016-12-11 08:24:13.0	null	2018-11-29 23:16:22.0	open	[]	23	365	first commit test	https://api.github.com/repos/torvalds/linux/issues/365	https://github.com/torvalds/linux/pull/365		Zhangyida183	null	null	null	null	null	null	
2016-12-15 14:55:12.0	2016-12-15 15:14:00.0	2016-12-15 15:14:00.0	closed	[]	0	366	Merge pull request #2 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/366	https://github.com/torvalds/linux/pull/366	merge with torvalds/linux	bzolnier	null	null	null	null	null	null	
2016-12-19 05:41:53.0	null	2016-12-19 05:41:53.0	open	[]	0	367	update	https://api.github.com/repos/torvalds/linux/issues/367	https://github.com/torvalds/linux/pull/367		Zaryob	null	null	null	null	null	null	
2016-12-30 02:17:35.0	2017-01-05 23:51:20.0	2020-02-17 16:05:31.0	closed	[]	6	368	Update rt2800usb.c	https://api.github.com/repos/torvalds/linux/issues/368	https://github.com/torvalds/linux/pull/368	added support for D-Link DWA-160 rev c1.	schlerp	null	null	null	null	null	null	
2016-12-30 02:54:10.0	2016-12-30 02:54:21.0	2016-12-30 02:54:54.0	closed	[]	1	369	Pull upstream	https://api.github.com/repos/torvalds/linux/issues/369	https://github.com/torvalds/linux/pull/369		mdshw5	null	null	null	null	null	null	
2016-12-30 13:15:23.0	2017-01-10 08:39:01.0	2017-01-10 08:39:01.0	closed	[]	1	370	net/bridge: fix dropping packets that moving through bridge interface	https://api.github.com/repos/torvalds/linux/issues/370	https://github.com/torvalds/linux/pull/370	Fix regression introduced by commit c5136b1.  br_nf_pre_routing_finish() calls itself instead of  br_nf_pre_routing_finish_bridge().    Due to this bug reverse path filter drops packets that moving through bridge interface.	Hexta	null	null	null	null	null	null	
2017-01-06 00:24:52.0	2017-01-06 00:25:19.0	2017-01-06 00:25:19.0	closed	[]	0	371	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/371	https://github.com/torvalds/linux/pull/371	Test	psarvesh	null	null	null	null	null	null	
2017-01-08 07:22:55.0	null	2020-10-02 17:52:15.0	open	[]	2	372	R40	https://api.github.com/repos/torvalds/linux/issues/372	https://github.com/torvalds/linux/pull/372		devSignux	null	null	null	null	null	null	
2017-01-09 19:50:30.0	2017-01-09 20:30:32.0	2017-01-09 20:30:32.0	closed	[]	0	373	Update README	https://api.github.com/repos/torvalds/linux/issues/373	https://github.com/torvalds/linux/pull/373		ghost	null	null	null	null	null	null	
2017-01-09 21:44:56.0	2017-01-11 17:16:25.0	2017-01-11 17:16:25.0	closed	[]	0	374	iommu/intel catch null domain before de-referencing it	https://api.github.com/repos/torvalds/linux/issues/374	https://github.com/torvalds/linux/pull/374		SpencerSharkey	null	null	null	null	null	null	
2017-01-10 07:43:28.0	null	2020-10-02 17:52:13.0	open	[]	0	375	Patches 3.18	https://api.github.com/repos/torvalds/linux/issues/375	https://github.com/torvalds/linux/pull/375		ljyha	null	null	null	null	null	null	
2017-01-11 03:22:59.0	null	2020-02-17 16:05:28.0	open	[]	0	376	4.8/wb buf throttle	https://api.github.com/repos/torvalds/linux/issues/376	https://github.com/torvalds/linux/pull/376	testing	bm16ton	null	null	null	null	null	null	
2017-01-11 11:33:45.0	2017-01-11 11:34:44.0	2017-01-11 11:34:44.0	closed	[]	0	377	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/377	https://github.com/torvalds/linux/pull/377	make changes	Zaryob	null	null	null	null	null	null	
2017-01-15 08:50:47.0	2017-04-01 11:54:58.0	2017-04-01 11:55:14.0	closed	[]	0	378	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/378	https://github.com/torvalds/linux/pull/378	sync	anlaneg	null	null	null	null	null	null	
2017-01-18 17:54:38.0	2020-06-25 14:39:36.0	2020-06-25 14:39:36.0	closed	[]	1	379	dell-wmi: Found location of 'auto brightness' key in Dell dmi table	https://api.github.com/repos/torvalds/linux/issues/379	https://github.com/torvalds/linux/pull/379	Tested on Dell Lattitude E6500.    Signed-off-by: Henk Vergonet <henk.vergonet@gmail.com>	hvegh	null	null	null	null	null	null	
2017-01-23 03:26:23.0	2017-01-23 03:26:40.0	2017-01-23 03:26:40.0	closed	[]	0	380	4.4 utf8	https://api.github.com/repos/torvalds/linux/issues/380	https://github.com/torvalds/linux/pull/380		deepdetail	null	null	null	null	null	null	
2017-01-23 09:57:35.0	null	2020-10-02 17:52:09.0	open	[]	0	381	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/381	https://github.com/torvalds/linux/pull/381	merge torvalds/linux	liangxiaoju	null	null	null	null	null	null	
2017-01-24 01:56:50.0	null	2017-01-24 01:56:50.0	open	[]	0	383	add testgit file which is meaningless	https://api.github.com/repos/torvalds/linux/issues/383	https://github.com/torvalds/linux/pull/383		zhuxiaofenga	null	null	null	null	null	null	
2017-01-24 15:20:15.0	2017-01-25 14:06:16.0	2017-01-25 14:06:16.0	closed	[]	0	384	Timgad lsm v1 test	https://api.github.com/repos/torvalds/linux/issues/384	https://github.com/torvalds/linux/pull/384		tixxdz	null	null	null	null	null	null	
2017-01-25 03:21:35.0	null	2020-10-02 17:52:04.0	open	[]	1	385	mips checksum error -- csum_tcpudp_nofold	https://api.github.com/repos/torvalds/linux/issues/385	https://github.com/torvalds/linux/pull/385	If the input parameters as saddr = 0xc0a8fd60,daddr = 0xc0a8fda1,len = 80, proto = 17, sum =0x7eae049d.  The correct result should be 1, but original function return 0.	bombhero	null	null	null	null	null	null	
2017-01-30 22:20:48.0	null	2020-10-02 17:52:02.0	open	[]	5	386	Update typo	https://api.github.com/repos/torvalds/linux/issues/386	https://github.com/torvalds/linux/pull/386	Updating typo of help verbiage	colossus9	null	null	null	null	null	null	
2017-01-30 22:35:48.0	2017-01-30 22:35:57.0	2020-02-17 16:05:22.0	closed	[]	1	387	bump EXT4_LINK_MAX	https://api.github.com/repos/torvalds/linux/issues/387	https://github.com/torvalds/linux/pull/387		erikbern	null	null	null	null	null	null	
2017-02-02 12:48:28.0	null	2020-10-02 17:51:57.0	open	[]	2	388	Fix tmp reusage in net2280 driver	https://api.github.com/repos/torvalds/linux/issues/388	https://github.com/torvalds/linux/pull/388	There was a discussion in the mailing list about the reuse of tmp in scan_dma_completions().  I made the changes as linus suggested, according to my original patch.  The changes works for me, hope that others will be able to test them, and merge them.    This was my logic for the patch:  1. The req->td->dmadesc equals to 0 iff:       -- There was a transaction ending with a short packet, and       -- The read() to read it was shorter than the transaction length, and       -- The read() to complete it is longer than the residue.       I believe this is true from the printouts of various cases, but I can't be positive it is correct.    2. Entering this if, there should be no more data in the endpoint (a short packet terminated the transaction). If there is, the transaction wasn't really done and we should exit and wait for it to finish entirely. That is the inner if.      That inner if should never happen, but it is there to be on the safe side. That is why it is marked with the comment /* paranoia */.       The size of the data available in the endpoint is ep->dma->dmacount and it is read to tmp.       This entire clause is based on my own educated guesses.    3. If we passed that inner if without breaking in the original code, than tmp & DMA_BYTE_MASK_COUNT== 0.      That means we will always pass dma bytes count of 0 to dma_done(), meaning all the requested bytes were read.    4. dma_done() reports back to the upper layer that the request (read()) was done and how many bytes were read. In the original code that would always be the request size, regardless of the actual size of the data.      That did not make sense to me at all.    5. However, the original value of tmp is req->td->dmacount, which is the dmacount value when the request's dma transaction was finished. And that is a much more reasonable value to report back to the caller.    As you can see, this is based a lot on educated guesses and debug printouts of various cases. That is why I would like to get your input on this, to make sure I'm on the right track.    To recreate the problem., try reading from a bulk out endpoint in a loop, 1024 * n bytes in each iteration. Connect the PLX to a host you can control, and send to that endpoint 1024 * n +x bytes such that  0 < x < 1024 * n and (x % 1024) != 0 You would expect the first read() to return 1024 * n and the second read to return x, but you will get the first read to return 1024 *n and the second one to return 1024 * n.  That is true for every positive integer n.    My patch solves the problem, and does not break any of the other cases I've tried.  	RazManor	null	null	null	null	null	null	
2017-02-05 18:39:27.0	2017-04-01 11:25:30.0	2017-04-01 11:25:30.0	closed	[]	1	389	Pedantic update	https://api.github.com/repos/torvalds/linux/issues/389	https://github.com/torvalds/linux/pull/389		dciug	null	null	null	null	null	null	
2017-02-17 06:43:51.0	null	2020-10-02 17:51:55.0	open	[]	1	390	Replace iattr with attr.	https://api.github.com/repos/torvalds/linux/issues/390	https://github.com/torvalds/linux/pull/390	"attr" is the real parameter in notify_change().    signed-off-by:Kun Yan <samyankun@gmail.com>	yankunsam	null	null	null	null	null	null	
2017-02-17 15:35:19.0	null	2017-03-18 08:21:15.0	open	[]	2	391	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/391	https://github.com/torvalds/linux/pull/391	20170217sync	zhouhanjiang	null	null	null	null	null	null	
2017-02-23 10:45:00.0	2017-02-23 10:45:30.0	2017-03-13 09:46:36.0	closed	[]	1	392	Stmmac sun8i wip next 20170216	https://api.github.com/repos/torvalds/linux/issues/392	https://github.com/torvalds/linux/pull/392		mozesslackware	null	null	null	null	null	null	
2017-02-23 18:28:36.0	2017-02-23 18:29:49.0	2018-11-07 17:22:40.0	closed	[]	0	393	Added README.md specific for this effort (2MB default allocation in Linux)	https://api.github.com/repos/torvalds/linux/issues/393	https://github.com/torvalds/linux/pull/393		roscheer	null	null	null	null	null	null	
2017-03-16 05:57:36.0	2017-03-16 06:04:59.0	2017-03-16 06:04:59.0	closed	[]	1	394	Imx 4.1.15 2.0.0 ga	https://api.github.com/repos/torvalds/linux/issues/394	https://github.com/torvalds/linux/pull/394		Sureshraomr	null	null	null	null	null	null	
2017-03-18 14:41:28.0	null	2020-10-02 17:51:50.0	open	[]	5	395	Fixed typos (for outreachy 2017)	https://api.github.com/repos/torvalds/linux/issues/395	https://github.com/torvalds/linux/pull/395		Sholes	null	null	null	null	null	null	
2017-03-20 08:37:15.0	2019-04-23 03:56:46.0	2019-04-23 03:58:31.0	closed	[]	2	396	remark header.S	https://api.github.com/repos/torvalds/linux/issues/396	https://github.com/torvalds/linux/pull/396		AnanSN	null	null	null	null	null	null	
2017-03-24 19:00:32.0	null	2017-03-24 19:05:07.0	open	[]	1	397	Fixed punctuation	https://api.github.com/repos/torvalds/linux/issues/397	https://github.com/torvalds/linux/pull/397	Made the first letter of the first sentence (the 'b' in "builds") capital.    Added missing commas.	tran-simon	null	null	null	null	null	null	
2017-03-29 17:28:36.0	2017-03-29 17:32:59.0	2017-03-29 23:54:37.0	closed	[]	2	398	asus-nb-wmi: Add wapf4 quirk for the X302UA	https://api.github.com/repos/torvalds/linux/issues/398	https://github.com/torvalds/linux/pull/398	Asus laptop X302UA starts up with wifi hard-blocked without any meaningful way to enable it.  The same issue occurs on some other ASUS notebooks as well.    Setting wapf=4 fixes the problem.	ArktinenKarpalo	null	null	null	null	null	null	
2017-03-29 20:45:08.0	2018-09-20 19:39:44.0	2018-09-20 19:39:44.0	closed	[]	1	399	Added more documentation	https://api.github.com/repos/torvalds/linux/issues/399	https://github.com/torvalds/linux/pull/399	For use with Doxygen. I am just a wee lad, so if someone else would like to swoop in, there is a ton more that could be added	pixelrazor	null	null	null	null	null	null	
2017-04-01 14:52:34.0	2017-04-01 14:53:50.0	2017-04-01 14:53:50.0	closed	[]	0	400	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/400	https://github.com/torvalds/linux/pull/400	up2date	gspu	null	null	null	null	null	null	
2017-04-04 13:30:24.0	2018-01-13 12:16:47.0	2018-01-13 12:16:47.0	closed	[]	1	401	Update relocs.c	https://api.github.com/repos/torvalds/linux/issues/401	https://github.com/torvalds/linux/pull/401	I can't compile kernel, because R_X86_64_JMP_SLOT is not defined, but R_X86_64_JMP_SLOT is defined. I see it with tracing makefile and using "-dM" option for C preprocessor.	aristarh2704	null	null	null	null	null	null	
2017-04-12 12:06:51.0	null	2020-10-02 17:51:42.0	open	[]	1	403	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/403	https://github.com/torvalds/linux/pull/403	update from origin0412	hustmsell	null	null	null	null	null	null	
2017-04-17 17:28:06.0	null	2020-10-02 17:51:40.0	open	[]	1	404	Golden cats love to play in the sun. Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/404	https://github.com/torvalds/linux/pull/404	 Files changed 272	Kittybangers	null	null	null	null	null	null	
2017-04-18 23:29:31.0	null	2020-10-02 17:51:37.0	open	[]	1	405	Socfpga 3.10 ltsi de0 nano with tft	https://api.github.com/repos/torvalds/linux/issues/405	https://github.com/torvalds/linux/pull/405		ngalbo	null	null	null	null	null	null	
2017-04-21 09:18:27.0	null	2020-10-02 17:51:35.0	open	[]	1	406	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/406	https://github.com/torvalds/linux/pull/406	Update from origin	RealMG	null	null	null	null	null	null	
2017-04-23 04:54:40.0	2017-04-23 20:15:27.0	2017-04-23 20:15:27.0	closed	[]	6	407	Keyboard backlight on Dell E7470 not adjustable from /sys entry	https://api.github.com/repos/torvalds/linux/issues/407	https://github.com/torvalds/linux/pull/407	https://bugzilla.kernel.org/show_bug.cgi?id=191731  https://bugzilla.redhat.com/show_bug.cgi?id=1436686    Also fixes  `dell_laptop: Setting old previous keyboard state failed`  https://bugzilla.kernel.org/show_bug.cgi?id=194081    The issue is actually quite trivial. Byte 3 of kbd_state  on some machines contains "timeout_ac". If this byte is simply  set to 0 the result is failed state set. The "timeout_ac" is not  interpreted in any way, but it is now preserved in order to ensure  the LED state changes go through.	arcivanov	null	null	null	null	null	null	
2017-05-03 21:22:41.0	null	2020-10-02 17:51:31.0	open	[]	1	408	4.4.x	https://api.github.com/repos/torvalds/linux/issues/408	https://github.com/torvalds/linux/pull/408		jangraczyk	null	null	null	null	null	null	
2017-05-07 04:30:03.0	2017-05-07 18:40:30.0	2017-05-09 01:46:57.0	closed	[]	3	411	Input: psxpad-spi - Add PlayStation 1/2 joypads via SPI interface Driver	https://api.github.com/repos/torvalds/linux/issues/411	https://github.com/torvalds/linux/pull/411	PlayStation 1/2 joypads can be connected directly to the SPI interface.    Signed-off-by: Tomohiro Yoshidomi <sylph23k@gmail.com>  Reviewed-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>  Acked-by: David Herrmann <dh.herrmann@gmail.com>	AZO234	null	null	null	null	null	null	
2017-05-15 15:25:11.0	null	2020-10-02 17:51:25.0	open	[]	1	412	atmel-maxtouch	https://api.github.com/repos/torvalds/linux/issues/412	https://github.com/torvalds/linux/pull/412		dhruvka	null	null	null	null	null	null	
2017-05-16 09:56:49.0	2017-05-16 10:05:59.0	2017-05-16 10:06:08.0	closed	[]	1	413	Testing -Please ignore	https://api.github.com/repos/torvalds/linux/issues/413	https://github.com/torvalds/linux/pull/413		malcolmcrossley	null	null	null	null	null	null	
2017-05-16 13:23:57.0	2017-05-16 13:24:22.0	2017-06-23 16:53:18.0	closed	[]	1	414	Tracking: allow CAP_SYS_RESOURCE override of quotas	https://api.github.com/repos/torvalds/linux/issues/414	https://github.com/torvalds/linux/pull/414	V2, https://marc.info/?l=linux-btrfs&m=149453743102171  "This patchset makes it so that on a per-filesystem basis one can disable  quota enforcement for users with cap_sys_resource. This patchset can  likely later be extended to per-qgroup, or a per-volume basis. I'm  thinking of extending the sysfs interface to list the qgroups and  this same interface for the qgroups themselves."    Target: 4.13	kdave	null	null	null	null	null	null	
2017-05-16 18:41:27.0	2017-05-17 07:06:57.0	2017-05-18 01:37:27.0	closed	[]	10	415	grammar and spelling for mm/huge_memory.c	https://api.github.com/repos/torvalds/linux/issues/415	https://github.com/torvalds/linux/pull/415		mdeguzis	null	null	null	null	null	null	
2017-05-17 05:09:18.0	2017-10-03 05:15:42.0	2018-05-08 08:14:35.0	closed	[]	3	416	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/416	https://github.com/torvalds/linux/pull/416	17-5-17	keller0	null	null	null	null	null	null	
2017-05-27 10:53:11.0	null	2020-10-02 17:51:22.0	open	[]	1	417	Adding the Vendor and ProductID of ELV ALC 8xxx	https://api.github.com/repos/torvalds/linux/issues/417	https://github.com/torvalds/linux/pull/417	This device is a charger from ELV and identifies itself as 18ef:e030    dmesg:  usb 3-2: New USB device found, idVendor=18ef, idProduct=e030  usb 3-2: New USB device strings: Mfr=1, Product=2, SerialNumber=3  usb 3-2: Product: ALC 8500 Expert  usb 3-2: Manufacturer: Silicon Labs    I tested that modification with the manufacturers device and its java software - seems to work fine.	cyborg-x1	null	null	null	null	null	null	
2017-06-02 18:31:39.0	2017-06-02 18:31:46.0	2017-06-02 18:31:46.0	closed	[]	0	418	Whitelist LSM	https://api.github.com/repos/torvalds/linux/issues/418	https://github.com/torvalds/linux/pull/418	This is the whitelist LSM, extracted as a pull-request for easy understanding.    I have no particular desire to post it to lkml, but if people are interested in how it works here it is.    	skx	null	null	null	null	null	null	
2017-06-03 17:46:11.0	2017-06-03 17:46:24.0	2017-06-03 17:46:24.0	closed	[]	0	419	foo	https://api.github.com/repos/torvalds/linux/issues/419	https://github.com/torvalds/linux/pull/419		xerpi	null	null	null	null	null	null	
2017-06-07 14:13:17.0	null	2017-06-08 09:22:49.0	open	[]	1	420	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/420	https://github.com/torvalds/linux/pull/420	update	wyqwxj	null	null	null	null	null	null	
2017-06-08 21:43:28.0	2017-06-19 20:25:45.0	2017-06-19 20:25:45.0	closed	[]	1	421	Documentation/RCU: Fix logic conflict	https://api.github.com/repos/torvalds/linux/issues/421	https://github.com/torvalds/linux/pull/421	According to the logic of the following paragraph, call_rcu() should not be used a lot, or "should be used lightly."	lnyng	null	null	null	null	null	null	
2017-06-09 19:56:39.0	2017-06-09 20:03:39.0	2017-06-09 20:03:39.0	closed	[]	1	422	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/422	https://github.com/torvalds/linux/pull/422	rebase from torvalds/linux	JiangbiaoDeng	null	null	null	null	null	null	
2017-06-09 20:16:22.0	2017-06-09 20:23:58.0	2017-06-09 20:23:58.0	closed	[]	2	423	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/423	https://github.com/torvalds/linux/pull/423	rebase from torvalds/linux	JiangbiaoDeng	null	null	null	null	null	null	
2017-06-09 20:36:52.0	2017-06-09 21:02:09.0	2017-06-09 21:02:09.0	closed	[]	3	424	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/424	https://github.com/torvalds/linux/pull/424	rebase from torvalds/linux	JiangbiaoDeng	null	null	null	null	null	null	
2017-06-11 08:14:11.0	2017-08-17 18:45:16.0	2017-08-17 18:45:16.0	closed	[]	1	425	TerraTec Cinergy Hybrid T USB XS with demodulator MT352 use EM2880_BOARD_TERRATEC_HYBRID_XS not EM2882_BOARD_TERRATEC_HYBRID_XS	https://api.github.com/repos/torvalds/linux/issues/425	https://github.com/torvalds/linux/pull/425	I have a Terratec Cinergy Hybrid T USB XS 00cd:0042 which stop to work with kernel 3.xx and newer,  because from tree 2.6 to 3.0 someone change the driver info from EM2880_BOARD_TERRATEC_HYBRID_XS to EM2882_BOARD_TERRATEC_HYBRID_XS  With EM2882 I have this error:        [  671.082716] em2882/3 #0: Binding DVB extension      [  671.140861] em2882/3 #0: /2: dvb frontend not attached. Can't attach xc3028    while with EM2880 this work properly        [   78.959513] em2882/3 #0: Binding DVB extension      [   78.997430] xc2028 7-0061: creating new instance      [   78.997435] xc2028 7-0061: type set to XCeive xc2028/xc3028 tuner    I hope you can accept my patch	etmatrix	null	null	null	null	null	null	
2017-06-16 05:09:51.0	null	2020-10-02 17:51:19.0	open	[]	1	426	[Docs] Update path to coding-style.rst file.	https://api.github.com/repos/torvalds/linux/issues/426	https://github.com/torvalds/linux/pull/426	Trivial change but I did look in the wrong place when I read this page.	AmirAbrams	null	null	null	null	null	null	
2017-06-16 13:06:14.0	2017-06-16 13:07:57.0	2017-06-16 13:07:57.0	closed	[]	0	427	selftests: fix memory-hotplug test	https://api.github.com/repos/torvalds/linux/issues/427	https://github.com/torvalds/linux/pull/427	Typo correction for hotpluggable_offline_memory() function.  Check for hot-pluggable memory availability in prerequisite().  Check for precentage range for -r flag.    Fix the memory offline test, the $ratio was used with RANDOM as the  possibility to get it offlined, correct it to become the portion of  available removable memory blocks.  Also ask the tool to try to offline the next available memory block  if the attempt is unsuccessful. It will only fail if all removable  memory blocks are busy.    An nice example:  k@Latitude:~$ sudo ./test.sh  Test scope: 10% hotplug memory    online all hot-pluggable memory in offline state:    SKIPPED - no hot-pluggable memory in offline state    offline 10% hot-pluggable memory in online state    trying to offline 3 out of 28 memory block(s):  online->offline memory1  online->offline memory10  ./test.sh: line 74: echo: write error: Resource temporarily unavailable  offline_memory_expect_success 10: unexpected fail  online->offline memory100  online->offline memory101    online all hot-pluggable memory in offline state:  offline->online memory1  offline->online memory100  offline->online memory101  skip extra tests: debugfs is not mounted  k@Latitude:~$ echo $?  0    Signed-off-by: Po-Hsu Lin <po-hsu.lin@canonical.com>	Cypresslin	null	null	null	null	null	null	
2017-06-17 11:29:15.0	null	2020-10-02 17:51:17.0	open	[]	1	428	Add 4good touchscreen support to silead driver	https://api.github.com/repos/torvalds/linux/issues/428	https://github.com/torvalds/linux/pull/428		DrShadow34	null	null	null	null	null	null	
2017-06-22 14:22:25.0	null	2020-10-02 17:51:15.0	open	[]	2	429	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/429	https://github.com/torvalds/linux/pull/429	from Linux 4.11-rc1	davidzhang0o0	null	null	null	null	null	null	
2017-06-30 08:44:36.0	null	2020-10-02 17:51:13.0	open	[]	1	430	Add support for Qivicon USB ZigBee dongle	https://api.github.com/repos/torvalds/linux/issues/430	https://github.com/torvalds/linux/pull/430	The german Telekom offers a ZigBee USB Stick under the brand name Qivicon for their SmartHome Home Base in its 1. Generation. The productId is not known by the according kernel module, this patch adds support for it.    You can buy the stick [here](https://www.smarthome.de/geraete/telekom-smart-home-erweiterung-zigbee)    Signed-off-by: Stefan Triller <github@stefantriller.de>	t2000	null	null	null	null	null	null	
2017-07-02 13:29:59.0	2017-07-02 13:33:36.0	2017-07-02 13:34:16.0	closed	[]	2	431	For learning purposes	https://api.github.com/repos/torvalds/linux/issues/431	https://github.com/torvalds/linux/pull/431		kwote	null	null	null	null	null	null	
2017-07-12 08:35:06.0	null	2020-10-02 17:51:10.0	open	[]	2	432	Add support for ELDAT USB EasyWave dongle	https://api.github.com/repos/torvalds/linux/issues/432	https://github.com/torvalds/linux/pull/432	Add support for the ELDAT USB EasyWave protocol dongle RX09.  You can use the ELDAT devices to build some smart home applications.    more info about this dongle: [http://www.eldat.de/produkte/schnittstellen/rx09e_en.html](url).	DaanDW	null	null	null	null	null	null	
2017-07-13 09:46:50.0	2017-07-13 10:01:07.0	2017-07-13 10:01:07.0	closed	[]	1	433	update	https://api.github.com/repos/torvalds/linux/issues/433	https://github.com/torvalds/linux/pull/433		czlc	null	null	null	null	null	null	
2017-07-17 11:21:09.0	null	2020-10-02 17:51:09.0	open	[]	1	434	tcp_agilesd.c	https://api.github.com/repos/torvalds/linux/issues/434	https://github.com/torvalds/linux/pull/434	agilesd is a Loss-Based Congestion Control Algorithm for TCP v1.0.   agilesd is designed for high-speed and short-distance networks such as data center networks and LANs.   agilesd has been created by Mohamed A. Alrshah, Department of Communication Technology and Networks,   Faculty of Computer Science and Information Technology, Universiti Putra Malaysia.      agilesd is based on the article, which is published in 2015 as below:      Alrshah, M.A., Othman, M., Ali, B. and Hanapi, Z.M., 2015.    Agile-SD: a Linux-based TCP congestion control algorithm for supporting high-speed and short-distance networks.    Journal of Network and Computer Applications, 55, pp.181-190.	mohamedalrshah	null	null	null	null	null	null	
2017-07-17 11:32:37.0	null	2020-10-02 17:51:07.0	open	[]	1	435	Update Kconfig	https://api.github.com/repos/torvalds/linux/issues/435	https://github.com/torvalds/linux/pull/435	It is only to configure the proposed Agile-SD TCP congestion control algorithm.	mohamedalrshah	null	null	null	null	null	null	
2017-07-17 11:34:25.0	null	2020-10-02 17:51:06.0	open	[]	1	436	Update Makefile	https://api.github.com/repos/torvalds/linux/issues/436	https://github.com/torvalds/linux/pull/436	It is only to configure the proposed Agile-SD TCP congestion control algorithm.	mohamedalrshah	null	null	null	null	null	null	
2017-07-17 16:03:21.0	null	2020-10-02 17:51:03.0	open	[]	230	437	this code very fast	https://api.github.com/repos/torvalds/linux/issues/437	https://github.com/torvalds/linux/pull/437	remove empty characters	ahmetilgin	null	null	null	null	null	null	
2017-07-24 14:47:08.0	2017-07-24 14:49:49.0	2017-07-24 14:49:49.0	closed	[]	0	438	Make "attempted to kill init" message more clear	https://api.github.com/repos/torvalds/linux/issues/438	https://github.com/torvalds/linux/pull/438	The kernel panic occurs as a result of init being successfully killed. I believe this is a clearer message, as it describes that the process has been killed, not merely that there was an attempt. `kill -9 1` is an example of an attempt to kill init, that does not succeed. Thus, I believe changing the message to "init was killed" or similar helps to differentiate between attempts, and successful attempts that cause kernel panics.    The exact message may of course be amended, but I believe it is important that the successful nature of the process kill is noted, in order for better debugging.	jameslacey	null	null	null	null	null	null	
2017-07-24 20:56:15.0	2017-07-26 20:09:04.0	2017-07-26 20:09:04.0	closed	[]	1	439	Speed up build process	https://api.github.com/repos/torvalds/linux/issues/439	https://github.com/torvalds/linux/pull/439	Remove unnecessary files	kylelamse	null	null	null	null	null	null	
2017-07-30 03:52:33.0	null	2020-10-02 17:48:56.0	open	[]	1	440	Update af_irda.c	https://api.github.com/repos/torvalds/linux/issues/440	https://github.com/torvalds/linux/pull/440	Sometimes irda_getsockopt() doesn't initialize all members of list field of irda_device_list struct.  This structure is then copied to  userland.  It leads to leaking of contents of kernel stack memory.  We have to initialize them to zero , or it will allows local users to obtain potentially sensitive information from kernel stack memory by reading a copy of this structure	sohu0106	null	null	null	null	null	null	
2017-07-30 04:06:02.0	null	2020-10-02 17:48:55.0	open	[]	1	441	Update atyfb_base.c	https://api.github.com/repos/torvalds/linux/issues/441	https://github.com/torvalds/linux/pull/441	Structure atyclk is copied to userland with padding bytes after  "vclk_post_div" field unitialized.  It leads to leaking of  contents of kernel stack memory.  We have to initialize them to zero. or it will allows local users to obtain potentially sensitive information from kernel stack memory by reading a copy of this structure	sohu0106	null	null	null	null	null	null	
2017-07-31 10:17:47.0	null	2020-10-02 17:48:51.0	open	[]	2	443	testing	https://api.github.com/repos/torvalds/linux/issues/443	https://github.com/torvalds/linux/pull/443		mohamedalrshah	null	null	null	null	null	null	
2017-07-31 18:50:14.0	2017-09-26 12:08:13.0	2017-09-26 12:11:13.0	closed	[]	33	444	Fix missing PCI ID (thanks to CoolStar); Necessary for Lenovo Yoga 720-15 Touchpad	https://api.github.com/repos/torvalds/linux/issues/444	https://github.com/torvalds/linux/pull/444	This patch fixes a missing PCI ID which is necessary for the Lenovo Yoga 720-15 Touchpad to work.  See this bug report on Launchpad:  https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1700657    Many thanks to CoolStar, who found this solution!	Hoeze	null	null	null	null	null	null	
2017-08-04 17:37:48.0	null	2020-10-02 17:48:49.0	open	[]	2	445	append Qualcomm GOBI 2K chipset ID for Panasonic CF-U1 Toughbook	https://api.github.com/repos/torvalds/linux/issues/445	https://github.com/torvalds/linux/pull/445	just adding VID/PID for the item being verified as working Gobi 2K chipset	Ole2mail	null	null	null	null	null	null	
2017-08-10 03:39:59.0	null	2017-08-10 03:40:07.0	open	[]	1	446	merge (#1)	https://api.github.com/repos/torvalds/linux/issues/446	https://github.com/torvalds/linux/pull/446	* i2c: designware: Print clock freq on invalid clock freq error    When we refuse to probe due to an invalid clock frequency, log  the frequency which is causing this error.    Signed-off-by: Hans de Goede <hdegoede@redhat.com>  Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>  Signed-off-by: Wolfram Sang <wsa@the-dreams.de>    * i2c: designware: Some broken DSTDs use 1MiHz instead of 1MHz    At least the Acer Iconia Tab8 / aka W1-810 uses 1MiHz instead of  1MHz for one of its busses, fix this up to 1MHz instead of failing  the probe of that bus.    This fixes the accelerometer on the Acer Iconia Tab8 not working.    Cc: stable@vger.kernel.org  Signed-off-by: Hans de Goede <hdegoede@redhat.com>  Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>  Signed-off-by: Wolfram Sang <wsa@the-dreams.de>    * parisc: pdc_stable: Fix locking when creating sysfs links    There's no need to take the write lock when creating sysfs links.    This patch fixes the following BUG:   BUG: sleeping function called from invalid context at mm/slab.h:416   in_atomic(): 1, irqs_disabled(): 0, pid: 1, name: swapper/0   CPU: 2 PID: 1 Comm: swapper/0 Not tainted 4.13.0-rc2-00110-g0b5477d9dabd #111   Backtrace:   [<0000000040217ac8>] show_stack+0x20/0x38   [<00000000406fbbb0>] dump_stack+0xb0/0x128   [<0000000040274090>] ___might_sleep+0x180/0x1b8   [<0000000040274144>] __might_sleep+0x7c/0xe8   [<0000000040373874>] kmem_cache_alloc+0x14c/0x1e0   [<0000000040419514>] __kernfs_new_node+0x84/0x1b8   [<000000004041b09c>] kernfs_new_node+0x3c/0x78   [<000000004041e040>] kernfs_create_link+0x40/0xd8   [<000000004041f320>] sysfs_do_create_link_sd.isra.0+0xb0/0x130   [<000000004041f3d4>] sysfs_create_link+0x34/0x58   [<000000004011b4a4>] pdc_stable_init+0x2c4/0x458   [<0000000040200250>] do_one_initcall+0x70/0x1d8   [<0000000040101644>] kernel_init_freeable+0x27c/0x390   [<000000004020be44>] kernel_init+0x24/0x1c0    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>  Reported-by: Meelis Roos <mroos@linux.ee>  Signed-off-by: Helge Deller <deller@gmx.de>    * libata: fix a couple of doc build warnings    The kerneldoc comments for a couple of functions in drivers/ata/libata-eh.c  had fallen behind the current implementation, resulting in these doc build  warnings:      ./drivers/ata/libata-eh.c:1449: warning: No description found for parameter 'link'    ./drivers/ata/libata-eh.c:1449: warning: Excess function parameter 'ap' description in 'ata_eh_done'    ./drivers/ata/libata-eh.c:1590: warning: No description found for parameter 'qc'    ./drivers/ata/libata-eh.c:1590: warning: Excess function parameter 'dev' description in 'ata_eh_request_sense'    Update the comments and make the warnings go away.    Signed-off-by: Jonathan Corbet <corbet@lwn.net>  Signed-off-by: Tejun Heo <tj@kernel.org>    * i2c: allow i2c-versatile for ARM MPS platforms    Allow i2c-versatile to be enabled for ARM MPS platforms.    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>  Signed-off-by: Wolfram Sang <wsa@the-dreams.de>    * i2c: rephrase explanation of I2C_CLASS_DEPRECATED    Hopefully making clear that it is not needed for new drivers.    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>    * parisc: Define CONFIG_CPU_BIG_ENDIAN    While working on enabling queued rwlock on SPARC, found this following  code in include/asm-generic/qrwlock.h which uses CONFIG_CPU_BIG_ENDIAN  to clear a byte.    static inline u8 *__qrwlock_write_byte(struct qrwlock *lock)   {   return (u8 *)lock + 3 * IS_BUILTIN(CONFIG_CPU_BIG_ENDIAN);   }    Problem is many of the fixed big endian architectures don't define  CPU_BIG_ENDIAN and clears the wrong byte.    Define CPU_BIG_ENDIAN for parisc architecture to fix it.    Signed-off-by: Babu Moger <babu.moger@oracle.com>  Signed-off-by: Helge Deller <deller@gmx.de>    * clk: samsung: exynos5420: The EPLL rate table corrections    This patch fixes values of the EPLL K coefficient and changes  the EPLL output frequency values to match exactly what is  possible to achieve with given M, P, S, K coefficients.  This allows to avoid rounding errors and unexpected frequency  being set with clk_set_rate(), due to recalc_rate returning  different values than the PLL rate specified in the  exynos5420_epll_24mhz_tbl table. E.g. this prevents a case  where two consecutive clk_set_rate() calls with same argument  result in different PLL output frequency.    The PLL output frequencies have been calculated with formula:    f = fxtal * (M * 2^16 + K) / (P * 2^S) / 2^16    where fxtal = 24000000.    Fixes: 9842452acd ("clk: samsung: exynos542x: Add EPLL rate table")  Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>  Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>    * sunhme: fix up GREG_STAT and GREG_IMASK register offsets    Update the values to match those from the STP2002QFP documentation.    Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: phy: Correctly process PHY_HALTED in phy_stop_machine()    Marc reported that he was not getting the PHY library adjust_link()  callback function to run when calling phy_stop() + phy_disconnect()  which does not indeed happen because we set the state machine to  PHY_HALTED but we don't get to run it to process this state past that  point.    Fix this with a synchronous call to phy_state_machine() in order to have  the state machine actually act on PHY_HALTED, set the PHY device's link  down, turn the network device's carrier off and finally call the  adjust_link() function.    Reported-by: Marc Gonzalez <marc_gonzalez@sigmadesigns.com>  Fixes: a390d1f379cf ("phylib: convert state_queue work to delayed_work")  Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>  Signed-off-by: Marc Gonzalez <marc_gonzalez@sigmadesigns.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * ipv4: fib: Fix NULL pointer deref during fib_sync_down_dev()    Michał reported a NULL pointer deref during fib_sync_down_dev() when  unregistering a netdevice. The problem is that we don't check for  'in_dev' being NULL, which can happen in very specific cases.    Usually routes are flushed upon NETDEV_DOWN sent in either the netdev or  the inetaddr notification chains. However, if an interface isn't  configured with any IP address, then it's possible for host routes to be  flushed following NETDEV_UNREGISTER, after NULLing dev->ip_ptr in  inetdev_destroy().    To reproduce:  $ ip link add type dummy  $ ip route add local 1.1.1.0/24 dev dummy0  $ ip link del dev dummy0    Fix this by checking for the presence of 'in_dev' before referencing it.    Fixes: 982acb97560c ("ipv4: fib: Notify about nexthop status changes")  Signed-off-by: Ido Schimmel <idosch@mellanox.com>  Reported-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>  Tested-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>  Signed-off-by: David S. Miller <davem@davemloft.net>    * MAINTAINERS: Add more files to the PHY LIBRARY section    Include missing files that are provided by, used, or directly maintained  within the PHY LIBRARY, this include uapi header, header files used by  Device Tree code etc.    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * mv643xx_eth: fix of_irq_to_resource() error check    of_irq_to_resource() has recently been  fixed to return negative error #'s  along with 0 in case of failure,  however the Marvell MV643xx Ethernet  driver still only regards 0  as invalid IRQ -- fix it up.    Fixes: 7a4228bbff76 ("of: irq: use of_irq_get() in of_irq_to_resource()")  Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * virtio_net: fix truesize for mergeable buffers    Seth Forshee noticed a performance degradation with some workloads.  This turns out to be due to packet drops.  Euan Kemp noticed that this  is because we drop all packets where length exceeds the truesize, but  for some packets we add in extra memory without updating the truesize.  This in turn was kept around unchanged from ab7db91705e95 ("virtio-net:  auto-tune mergeable rx buffer size for improved performance").  That  commit had an internal reason not to account for the extra space: not  enough bits to do it.  No longer true so let's account for the allocated  length exactly.    Many thanks to Seth Forshee for the report and bisecting and Euan Kemp  for debugging the issue.    Fixes: 680557cf79f8 ("virtio_net: rework mergeable buffer handling")  Reported-by: Euan Kemp <euan.kemp@coreos.com>  Tested-by: Euan Kemp <euan.kemp@coreos.com>  Reported-by: Seth Forshee <seth.forshee@canonical.com>  Tested-by: Seth Forshee <seth.forshee@canonical.com>  Signed-off-by: Michael S. Tsirkin <mst@redhat.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * Revert "net: bcmgenet: Remove init parameter from bcmgenet_mii_config"    This reverts commit 28b45910ccda ("net: bcmgenet: Remove init parameter  from bcmgenet_mii_config") because in the process of moving from  dev_info() to dev_info_once() we essentially lost the helpful printed  messages once the second instance of the driver is loaded.  dev_info_once() does not actually print the message once per device  instance, but once period.    Fixes: 28b45910ccda ("net: bcmgenet: Remove init parameter from bcmgenet_mii_config")  Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>  Reviewed-by: Doug Berger <opendmb@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * ppp: Fix a scheduling-while-atomic bug in del_chan    The PPTP set the pptp_sock_destruct as the sock's sk_destruct, it would  trigger this bug when __sk_free is invoked in atomic context, because of  the call path pptp_sock_destruct->del_chan->synchronize_rcu.    Now move the synchronize_rcu to pptp_release from del_chan. This is the  only one case which would free the sock and need the synchronize_rcu.    The following is the panic I met with kernel 3.3.8, but this issue should  exist in current kernel too according to the codes.    BUG: scheduling while atomic  __schedule_bug+0x5e/0x64  __schedule+0x55/0x580  ? ppp_unregister_channel+0x1cd5/0x1de0 [ppp_generic]  ? dev_hard_start_xmit+0x423/0x530  ? sch_direct_xmit+0x73/0x170  __cond_resched+0x16/0x30  _cond_resched+0x22/0x30  wait_for_common+0x18/0x110  ? call_rcu_bh+0x10/0x10  wait_for_completion+0x12/0x20  wait_rcu_gp+0x34/0x40  ? wait_rcu_gp+0x40/0x40  synchronize_sched+0x1e/0x20  0xf8417298  0xf8417484  ? sock_queue_rcv_skb+0x109/0x130  __sk_free+0x16/0x110  ? udp_queue_rcv_skb+0x1f2/0x290  sk_free+0x16/0x20  __udp4_lib_rcv+0x3b8/0x650    Signed-off-by: Gao Feng <gfree.wind@vip.163.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * udp6: fix jumbogram reception    Since commit 67a51780aebb ("ipv6: udp: leverage scratch area  helpers") udp6_recvmsg() read the skb len from the scratch area,  to avoid a cache miss.  But the UDP6 rx path support RFC 2675 UDPv6 jumbograms, and their  length exceeds the 16 bits available in the scratch area. As a side  effect the length returned by recvmsg() is:  <ingress datagram len> % (1<<16)    This commit addresses the issue allocating one more bit in the  IP6CB flags field and setting it for incoming jumbograms.  Such field is still in the first cacheline, so at recvmsg()  time we can check it and fallback to access skb->len if  required, without a measurable overhead.    Fixes: 67a51780aebb ("ipv6: udp: leverage scratch area helpers")  Signed-off-by: Paolo Abeni <pabeni@redhat.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * samples/bpf: fix bpf tunnel cleanup    test_tunnel_bpf.sh fails to remove the vxlan11 tunnel device, causing the  next geneve tunnelling test case fails.  In addition, the geneve reserved bit  in tcbpf2_kern.c should be zero, according to the RFC.    Signed-off-by: William Tu <u9012063@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * pinctrl: stm32: select IRQ_DOMAIN_HIERARCHY instead of depends on    Drivers that need IRQ_DOMAIN_HIERARCHY should "select" it, but  drivers/pinctrl/stm32/Kconfig is the only exception that uses  "depends on" syntax.  This prevents GPIO drivers from select'ing  IRQ_DOMAIN_HIERARCHY.    For example, if I add "select IRQ_DOMAIN_HIERARCHY" to GPIO_XGENE_SB,  I get the following recursive dependency error.    drivers/gpio/Kconfig:13:error: recursive dependency detected!  For a resolution refer to Documentation/kbuild/kconfig-language.txt  subsection "Kconfig recursive dependency limitations"  drivers/gpio/Kconfig:13: symbol GPIOLIB is selected by PINCTRL_STM32  For a resolution refer to Documentation/kbuild/kconfig-language.txt  subsection "Kconfig recursive dependency limitations"  drivers/pinctrl/stm32/Kconfig:3: symbol PINCTRL_STM32 is selected by PINCTRL_STM32F429  For a resolution refer to Documentation/kbuild/kconfig-language.txt  subsection "Kconfig recursive dependency limitations"  drivers/pinctrl/stm32/Kconfig:11: symbol PINCTRL_STM32F429 depends on IRQ_DOMAIN_HIERARCHY  For a resolution refer to Documentation/kbuild/kconfig-language.txt  subsection "Kconfig recursive dependency limitations"  kernel/irq/Kconfig:67: symbol IRQ_DOMAIN_HIERARCHY is selected by GPIO_XGENE_SB  For a resolution refer to Documentation/kbuild/kconfig-language.txt  subsection "Kconfig recursive dependency limitations"  drivers/gpio/Kconfig:502: symbol GPIO_XGENE_SB depends on GPIOLIB    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>  Tested-by: Alexandre TORGUE <alexandre.torgue@st.com>  Signed-off-by: Linus Walleij <linus.walleij@linaro.org>    * gpio: xgene-sb: select IRQ_DOMAIN_HIERARCHY    This driver calls irq_domain_hierarchy() and irq_chip_*_parent().  They are available only when CONFIG_IRQ_DOMAIN_HIERARCHY is enabled.    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>  Signed-off-by: Linus Walleij <linus.walleij@linaro.org>    * gpio: gpio-mxc: Fix: higher 16 GPIOs usable as wake source    In the function gpio_set_wake_irq(), port->irq_high is only checked for  zero. As platform_get_irq() returns a value less then zero if no interrupt  was found, any gpio >= 16 was handled like an irq_high interrupt was  available. On iMX27 for example no high interrupt is available. This lead  to the problem that only some gpios (the lower 16) were useable as wake  sources.    Signed-off-by: Philipp Rosenberger <p.rosenberger@linutronix.de>  Signed-off-by: Linus Walleij <linus.walleij@linaro.org>    * x86/hpet: Cure interface abuse in the resume path    The HPET resume path abuses irq_domain_[de]activate_irq() to restore the  MSI message in the HPET chip for the boot CPU on resume and it relies on an  implementation detail of the interrupt core code, which magically makes the  HPET unmask call invoked via a irq_disable/enable pair. This worked as long  as the irq code did unconditionally invoke the unmask() callback. With the  recent changes which keep track of the masked state to avoid expensive  hardware access, this does not longer work. As a consequence the HPET timer  interrupts are not unmasked which breaks resume as the boot CPU waits  forever that a timer interrupt arrives.    Make the restore of the MSI message explicit and invoke the unmask()  function directly. While at it get rid of the pointless affinity setting as  nothing can change the affinity of the interrupt and the vector across  suspend/resume. The restore of the MSI message reestablishes the previous  affinity setting which is the correct one.    Fixes: bf22ff45bed6 ("genirq: Avoid unnecessary low level irq function calls")  Reported-and-tested-by: Tomi Sarvela <tomi.p.sarvela@intel.com>  Reported-by: Martin Peres <martin.peres@linux.intel.com>  Signed-off-by: Thomas Gleixner <tglx@linutronix.de>  Acked-by: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>  Cc: jeffy.chen@rock-chips.com  Cc: Peter Zijlstra <peterz@infradead.org>  Cc: Marc Zyngier <marc.zyngier@arm.com>  Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1707312158590.2287@nanos    * arm64: Use arch_timer_get_rate when trapping CNTFRQ_EL0    In an ideal world, CNTFRQ_EL0 always contains the timer frequency  for the kernel to use. Sadly, we get quite a few broken systems  where the firmware authors cannot be bothered to program that  register on all CPUs, and rely on DT to provide that frequency.    So when trapping CNTFRQ_EL0, make sure to return the actual rate  (as known by the kernel), and not CNTFRQ_EL0.    Acked-by: Mark Rutland <mark.rutland@arm.com>  Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>  Signed-off-by: Will Deacon <will.deacon@arm.com>    * ASoC: rt5665: fix wrong register for bclk ratio control    The register of setting back ratio should be RT5665_ADDA_CLK_2  instead of RT5665_ADDA_CLK_1.    Signed-off-by: Bard Liao <bardliao@realtek.com>  Signed-off-by: Mark Brown <broonie@kernel.org>    * gpio: exar: Use correct property prefix and document bindings    The device-specific property should be prefixed with the vendor name,  not "linux,", as Linus Walleij pointed out. Change this and document the  bindings of this platform device.    We didn't ship the old binding in a release yet. So we can still change  it without breaking an official API.    Fixes: 380b1e2f3a2f ("gpio-exar/8250-exar: Make set of exported GPIOs configurable")  Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>  Acked-by: Rob Herring <robh@kernel.org>  Signed-off-by: Linus Walleij <linus.walleij@linaro.org>    * gpiolib: skip unwanted events, don't convert them to opposite edge    The previous fix for filtering out of unwatched events was not entirely  correct. Instead of skipping the events we don't want, they are now  interpreted as events with opposing edge.    In order to fix it: always read the GPIO line value on interrupt and  only emit the event if it corresponds with the event type we requested.    Cc: stable@vger.kernel.org  Fixes: ad537b822577 ("gpiolib: fix filtering out unwanted events")  Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>  Signed-off-by: Linus Walleij <linus.walleij@linaro.org>    * clk: meson: mpll: fix mpll0 fractional part ignored    mpll0 clock is special compared to the other mplls. It needs another  bit (ssen) to be set to activate the fractional part the mpll divider    Fixes: 007e6e5c5f01 ("clk: meson: mpll: add rw operation")  Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>  Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>    * timers: Fix overflow in get_next_timer_interrupt    For e.g. HZ=100, timer being 430 jiffies in the future, and 32 bit  unsigned int, there is an overflow on unsigned int right-hand side  of the expression which results with wrong values being returned.    Type cast the multiplier to 64bit to avoid that issue.    Fixes: 46c8f0b077a8 ("timers: Fix get_next_timer_interrupt() computation")  Signed-off-by: Matija Glavinic Pecotic <matija.glavinic-pecotic.ext@nokia.com>  Signed-off-by: Thomas Gleixner <tglx@linutronix.de>  Reviewed-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>  Cc: khilman@baylibre.com  Cc: akpm@linux-foundation.org  Cc: stable@vger.kernel.org  Link: http://lkml.kernel.org/r/a7900f04-2a21-c9fd-67be-ab334d459ee5@nokia.com    * device property: Fix usecount for of_graph_get_port_parent()    Fix inconsistent use of of_graph_get_port_parent() where  asoc_simple_card_parse_graph_dai() does of_node_get() before  calling it while other callers do not. We can fix this by  not trashing the node passed to of_graph_get_port_parent().    Let's also make sure the callers have correct refcounts and remove  related incorrect of_node_put() calls for of_for_each_phandle  as that's done by of_phandle_iterator_next() except when  we break out of the loop early.    Let's fix both issues with a single patch to avoid kobject  refcounts getting messed up more if two patches are merged  separately.    Otherwise strange issues can happen caused by memory corruption  caused by too many kobject_del() calls such as:    BUG: sleeping function called from invalid context at  kernel/locking/mutex.c:747  ...  (___might_sleep)  (__mutex_lock)  (mutex_lock_nested)  (kernfs_remove)  (kobject_del)  (kobject_put)  (of_get_next_parent)  (of_graph_get_port_parent)  (asoc_simple_card_parse_graph_dai [snd_soc_simple_card_utils])  (asoc_graph_card_probe [snd_soc_audio_graph_card])    Fixes: 0ef472a973eb ("of_graph: add of_graph_get_port_parent()")  Fixes: 2692c1c63c29 ("ASoC: add audio-graph-card support")  Fixes: 1689333f8311 ("ASoC: simple-card-utils: add asoc_simple_card_parse_graph_dai()")  Signed-off-by: Tony Lindgren <tony@atomide.com>  Reviewed-by: Rob Herring <robh@kernel.org>  Tested-by: Antonio Borneo <borneo.antonio@gmail.com>  Tested-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>  Signed-off-by: Mark Brown <broonie@kernel.org>    * libceph: make encode_request_*() work with r_mempool requests    Messages allocated out of ceph_msgpool have a fixed front length  (pool->front_len).  Asserting that the entire front has been filled  while encoding is thus wrong.    Fixes: 8cb441c0545d ("libceph: MOSDOp v8 encoding (actual spgid + full hash)")  Reported-by: "Yan, Zheng" <zyan@redhat.com>  Signed-off-by: Ilya Dryomov <idryomov@gmail.com>  Reviewed-by: "Yan, Zheng" <zyan@redhat.com>    * libceph: don't call ->reencode_message() more than once per message    Reencoding an already reencoded message is a bad idea.  This could  happen on Policy::stateful_server connections (!CEPH_MSG_CONNECT_LOSSY),  such as MDS sessions.    This didn't pop up in testing because currently only OSD requests are  reencoded and OSD sessions are always lossy.    Fixes: 98ad5ebd1505 ("libceph: ceph_connection_operations::reencode_message() method")  Signed-off-by: Ilya Dryomov <idryomov@gmail.com>  Reviewed-by: "Yan, Zheng" <zyan@redhat.com>    * crush: assume weight_set != null imples weight_set_size > 0    Reflects ceph.git commit 5e8fa3e06b68fae1582c9230a3a8d1abc6146286.    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>  Reviewed-by: Sage Weil <sage@redhat.com>    * libceph: fallback for when there isn't a pool-specific choose_arg    There is now a fallback to a choose_arg index of -1 if there isn't  a pool-specific choose_arg set.  If you create a per-pool weight-set,  that works for that pool.  Otherwise we try the compat/default one.  If  that doesn't exist either, then we use the normal CRUSH weights.    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>  Reviewed-by: Sage Weil <sage@redhat.com>    * libceph: upmap semantic changes    - apply both pg_upmap and pg_upmap_items  - allow bidirectional swap of pg-upmap-items    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>  Reviewed-by: Sage Weil <sage@redhat.com>    * libceph: make RECOVERY_DELETES feature create a new interval    This is needed so that the OSDs can regenerate the missing set at the  start of a new interval where support for recovery deletes changed.    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>  Reviewed-by: Sage Weil <sage@redhat.com>    * xtensa: don't limit csum_partial export by CONFIG_NET    csum_partial and csum_partial_copy_generic are defined unconditionally  and are available even when CONFIG_NET is disabled. They are used not  only by the network drivers, but also by scsi and media.  Don't limit these functions export by CONFIG_NET.    Cc: stable@vger.kernel.org  Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>    * xtensa: mm/cache: add missing EXPORT_SYMBOLs    Functions clear_user_highpage, copy_user_highpage, flush_dcache_page,  local_flush_cache_range and local_flush_cache_page may be used from  modules. Export them.    Cc: stable@vger.kernel.org  Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>    * KVM: nVMX: do not fill vm_exit_intr_error_code in prepare_vmcs12    Do this in the caller of nested_vmx_vmexit instead.    nested_vmx_check_exception was doing a vmwrite to the vmcs02's  VM_EXIT_INTR_ERROR_CODE field, so that prepare_vmcs12 would move  the field to vmcs12->vm_exit_intr_error_code.  However that isn't  possible on pre-Haswell machines.  Moving the vmcs12 write to the  callers fixes it.    Reported-by: Jim Mattson <jmattson@google.com>  Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>  [Changed nested_vmx_reflect_vmexit() return type to (int)1 from (bool)1,   thanks to fengguang.wu@intel.com]  Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>    * KVM: nVMX: fixes to nested virt interrupt injection    There are three issues in nested_vmx_check_exception:    1) it is not taking PFEC_MATCH/PFEC_MASK into account, as reported  by Wanpeng Li;    2) it should rebuild the interruption info and exit qualification fields  from scratch, as reported by Jim Mattson, because the values from the  L2->L0 vmexit may be invalid (e.g. if an emulated instruction causes  a page fault, the EPT misconfig's exit qualification is incorrect).    3) CR2 and DR6 should not be written for exception intercept vmexits  (CR2 only for AMD).    This patch fixes the first two and adds a comment about the last,  outlining the fix.    Cc: Jim Mattson <jmattson@google.com>  Cc: Wanpeng Li <wanpeng.li@hotmail.com>  Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>    * KVM: async_pf: make rcu irq exit if not triggered from idle task     WARNING: CPU: 5 PID: 1242 at kernel/rcu/tree_plugin.h:323 rcu_note_context_switch+0x207/0x6b0   CPU: 5 PID: 1242 Comm: unity-settings- Not tainted 4.13.0-rc2+ #1   RIP: 0010:rcu_note_context_switch+0x207/0x6b0   Call Trace:    __schedule+0xda/0xba0    ? kvm_async_pf_task_wait+0x1b2/0x270    schedule+0x40/0x90    kvm_async_pf_task_wait+0x1cc/0x270    ? prepare_to_swait+0x22/0x70    do_async_page_fault+0x77/0xb0    ? do_async_page_fault+0x77/0xb0    async_page_fault+0x28/0x30   RIP: 0010:__d_lookup_rcu+0x90/0x1e0    I encounter this when trying to stress the async page fault in L1 guest w/  L2 guests running.    Commit 9b132fbe5419 (Add rcu user eqs exception hooks for async page  fault) adds rcu_irq_enter/exit() to kvm_async_pf_task_wait() to exit cpu  idle eqs when needed, to protect the code that needs use rcu.  However,  we need to call the pair even if the function calls schedule(), as seen  from the above backtrace.    This patch fixes it by informing the RCU subsystem exit/enter the irq  towards/away from idle for both n.halted and !n.halted.    Cc: Paolo Bonzini <pbonzini@redhat.com>  Cc: Radim Krčmář <rkrcmar@redhat.com>  Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>  Cc: stable@vger.kernel.org  Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>  Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>  Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>    * NFSv4: Fix EXCHANGE_ID corrupt verifier issue    The verifier is allocated on the stack, but the EXCHANGE_ID RPC call was  changed to be asynchronous by commit 8d89bd70bc939. If we interrrupt  the call to rpc_wait_for_completion_task(), we can therefore end up  transmitting random stack contents in lieu of the verifier.    Fixes: 8d89bd70bc939 ("NFS setup async exchange_id")  Cc: stable@vger.kernel.org # v4.9+  Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>  Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>    * ptp: introduce ptp auxiliary worker    Many PTP drivers required to perform some asynchronous or periodic work,  like periodically handling PHC counter overflow or handle delayed timestamp  for RX/TX network packets. In most of the cases, such work is implemented  using workqueues. Unfortunately, Kernel workqueues might introduce  significant delay in work scheduling under high system load and on -RT,  which could cause misbehavior of PTP drivers due to internal counter  overflow, for example, and there is no way to tune its execution policy and  priority manuallly.    Hence, The kthread_worker can be used insted of workqueues, as it create  separte named kthread for each worker and its its execution policy and  priority can be configured using chrt tool.    This prblem was reported for two drivers TI CPSW CPTS and dp83640, so  instead of modifying each of these driver it was proposed to add PTP  auxiliary worker to the PHC subsystem.    The patch adds PTP auxiliary worker in PHC subsystem using kthread_worker  and kthread_delayed_work and introduces two new PHC subsystem APIs:    - long (*do_aux_work)(struct ptp_clock_info *ptp) callback in  ptp_clock_info structure, which driver should assign if it require to  perform asynchronous or periodic work. Driver should return the delay of  the PTP next auxiliary work scheduling time (>=0) or negative value in case  further scheduling is not required.    - int ptp_schedule_worker(struct ptp_clock *ptp, unsigned long delay) which  allows schedule PTP auxiliary work.    The name of kthread_worker thread corresponds PTP PHC device name "ptp%d".    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: ethernet: ti: cpts: convert to use ptp auxiliary worker    There could be significant delay in CPTS work schedule under high system  load and on -RT which could cause CPTS misbehavior due to internal counter  overflow. Usage of own kthread_worker allows to avoid such kind of issues  and makes it possible to tune priority of CPTS kthread_worker thread on -RT  (thread name "cpts").    Hence, the CPTS driver is converted to use PTP auxiliary worker as PHC  subsystem implements such functionality in a generic way now.    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: ethernet: ti: cpts: fix tx timestamping timeout    With the low speed Ethernet connection CPDMA notification about packet  processing can be received before CPTS TX timestamp event, which is set  when packet actually left CPSW while cpdma notification is sent when packet  pushed in CPSW fifo.  As result, when connection is slow and CPU is fast  enough TX timestamping is not working properly.    Fix it, by introducing TX SKB queue to store PTP SKBs for which Ethernet  Transmit Event hasn't been received yet and then re-check this queue  with new Ethernet Transmit Events by scheduling CPTS overflow  work more often (every 1 jiffies) until TX SKB queue is not empty.    Side effect of this change is:   - User space tools require to take into account possible delay in TX  timestamp processing (for example ptp4l works with tx_timestamp_timeout=400  under net traffic and tx_timestamp_timeout=25 in idle).    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: ethernet: ti: cpts: fix fifo read in cpts_find_ts    Now the call chain   cpts_find_ts()    |- cpts_fifo_read(cpts, CPTS_EV_PUSH)    will stop reading CPTS FIFO if PUSH event is found. But this is not  expected and CPTS FIFI should be completely drained here. This is most  probably copy-paste error and it has no negative impact as CPTS_EV_PUSH  should not be present in FIFO without TS_PUSH request and  cpts_systim_read() and cpts_find_ts() synchronized by spin_lock.    Correct above by calling cpts_fifo_read() with -1 parameter, so it will  read all CPTS event from FIFO.    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * Cipso: cipso_v4_optptr enter infinite loop    in for(),if((optlen > 0) && (optptr[1] == 0)), enter infinite loop.    Test: receive a packet which the ip length > 20 and the first byte of ip option is 0, produce this issue    Signed-off-by: yujuan.qi <yujuan.qi@mediatek.com>  Acked-by: Paul Moore <paul@paul-moore.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * platform/x86: dell-wmi: Fix driver interface version query    When I converted dell-wmi to the new bus infrastructure, I left the  call to dell_wmi_check_descriptor_buffer() in dell_wmi_init().  This  could cause two problems:     - An error message when loading the driver on a system without     dell-wmi.  We'd try to read the event descriptor even if the WMI     GUID wasn't there.     - A possible race if dell-wmi was loaded manually before wmi was     fully initialized.    Fix it by moving the call to the probe function where it belongs.    Fixes: bff589be59c5 ("platform/x86: dell-wmi: Convert to the WMI bus infrastructure")  Signed-off-by: Andy Lutomirski <luto@kernel.org>  Reviewed-by: Pali Rohár <pali.rohar@gmail.com>  Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>    * vxlan: fix remcsum when GRO on and CHECKSUM_PARTIAL boundary is outer UDP    In the case that GRO is turned on and the original received packet is  CHECKSUM_PARTIAL, if the outer UDP header is exactly at the last  csum-unnecessary point, which for instance could occur if the packet  comes from another Linux guest on the same Linux host, we have to do  either remcsum_adjust or set up CHECKSUM_PARTIAL again with its  csum_start properly reset considering RCO.    However, since b7fe10e5ebac("gro: Fix remcsum offload to deal with frags  in GRO") that barrier in such case could be skipped if GRO turned on,  hence we pass over it and the inner L4 validation mistakenly reckons  it as a bad csum.    This patch makes remcsum_offload being reset at the same time of GRO  remcsum cleanup, so as to make it work in such case as before.    Fixes: b7fe10e5ebac ("gro: Fix remcsum offload to deal with frags in GRO")  Signed-off-by: Koichiro Den <den@klaipeden.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * gue: fix remcsum when GRO on and CHECKSUM_PARTIAL boundary is outer UDP    In the case that GRO is turned on and the original received packet is  CHECKSUM_PARTIAL, if the outer UDP header is exactly at the last  csum-unnecessary point, which for instance could occur if the packet  comes from another Linux guest on the same Linux host, we have to do  either remcsum_adjust or set up CHECKSUM_PARTIAL again with its  csum_start properly reset considering RCO.    However, since b7fe10e5ebac ("gro: Fix remcsum offload to deal with frags  in GRO") that barrier in such case could be skipped if GRO turned on,  hence we pass over it and the inner L4 validation mistakenly reckons  it as a bad csum.    This patch makes remcsum_offload being reset at the same time of GRO  remcsum cleanup, so as to make it work in such case as before.    Fixes: b7fe10e5ebac ("gro: Fix remcsum offload to deal with frags in GRO")  Signed-off-by: Koichiro Den <den@klaipeden.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * b44: Initialize 64-bit stats seqcount    On 32-bit hosts and with CONFIG_DEBUG_LOCK_ALLOC we should be seeing a  lockdep splat indicating this seqcount is not correctly initialized, fix  that.    Fixes: eeda8585522b ("b44: add 64 bit stats")  Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>  Acked-by: Michael Chan <michael.chan@broadcom.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * i40e: Initialize 64-bit statistics TX ring seqcount    On 32-bit hosts and with CONFIG_DEBUG_LOCK_ALLOC we should be seeing a  lockdep splat indicating this seqcount is not correctly initialized, fix  that.    Fixes: 980e9b118642 ("i40e: Add support for 64 bit netstats")  Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * ixgbe: Initialize 64-bit stats seqcounts    On 32-bit hosts and with CONFIG_DEBUG_LOCK_ALLOC we should be seeing a  lockdep splat indicating this seqcount is not correctly initialized, fix  that.    Fixes: 4197aa7bb818 ("ixgbevf: provide 64 bit statistics")  Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * nfp: Initialize RX and TX ring 64-bit stats seqcounts    On 32-bit hosts and with CONFIG_DEBUG_LOCK_ALLOC we should be seeing a  lockdep splat indicating this seqcount is not correctly initialized, fix  that.    Fixes: 4c3523623dc0 ("net: add driver for Netronome NFP4000/NFP6000 NIC VFs")  Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>  Reviewed-by: Simon Horman <simon.horman@netronome.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * gtp: Initialize 64-bit per-cpu stats correctly    On 32-bit hosts and with CONFIG_DEBUG_LOCK_ALLOC we should be seeing a  lockdep splat indicating this seqcount is not correctly initialized, fix  that by using netdev_alloc_pcpu_stats() instead of an open coded  allocation.    Fixes: 459aa660eb1d ("gtp: add initial driver for datapath of GPRS Tunneling Protocol (GTP-U)")  Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * netvsc: Initialize 64-bit stats seqcount    On 32-bit hosts and with CONFIG_DEBUG_LOCK_ALLOC we should be seeing a  lockdep splat indicating this seqcount is not correctly initialized, fix  that. In commit 6c80f3fc2398 ("netvsc: report per-channel stats in  ethtool statistics") netdev_alloc_pcpu_stats() was removed in favor of  open-coding the 64-bits statistics, except that u64_stats_init() was  missed.    Fixes: 6c80f3fc2398 ("netvsc: report per-channel stats in ethtool statistics")  Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>  Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * ipvlan: Fix 64-bit statistics seqcount initialization    On 32-bit hosts and with CONFIG_DEBUG_LOCK_ALLOC we should be seeing a  lockdep splat indicating this seqcount is not correctly initialized, fix  that by using the proper helper function: netdev_alloc_pcpu_stats().    Fixes: 2ad7bf363841 ("ipvlan: Initial check-in of the IPVLAN driver.")  Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * nand: fix wrong default oob layout for small pages using soft ecc    When using soft ecc, if no ooblayout is given, the core automatically  uses one of the nand_ooblayout_{sp,lp}*() functions to determine the  layout inside the out of band data.    Until kernel version 4.6, struct nand_ecclayout was used for that  purpose. During the migration from 4.6 to 4.7, an error shown up in the  small page layout, in the case oob section is only 8 bytes long.    The layout was using three bytes (0, 1, 2) for ecc, two bytes (3, 4)  as free bytes, one byte (5) for bad block marker and finally  two bytes (6, 7) as free bytes, as shown there:    [linux-4.6] drivers/mtd/nand/nand_base.c:52  static struct nand_ecclayout nand_oob_8 = {   .eccbytes = 3,   .eccpos = {0, 1, 2},   .oobfree = {    {.offset = 3,     .length = 2},    {.offset = 6,     .length = 2} }  };    This fixes the current implementation which is incoherent. It  references bit 3 at the same time as an ecc byte and a free byte.    Furthermore, it is clear with the previous implementation that there  is only one ecc section with 8 bytes oob sections. We shall return  -ERANGE in the nand_ooblayout_ecc_sp() function when asked for the  second section.    Signed-off-by: Miquel Raynal <miquel.raynal@free-electrons.com>  Fixes: 41b207a70d3a ("mtd: nand: implement the default mtd_ooblayout_ops")  Cc: <stable@vger.kernel.org>  Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>    * mtd: nand: sunxi: fix potential divide-by-zero error    clk_round_rate() can return <= 0. Currently the value returned by  clk_round_rate() is used directly for a division. This patch introduces a  guard to ensure a divide-by-zero or a divide by a negative number for that  matter can't happen by bugging out returning -EINVAL if clk_round_rate()  returns <= 0.    Fixes: 2d43457f79e4 ("mtd: nand: sunxi: fix EDO mode selection")  Signed-off-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>  Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>    * mtd: nand: Fix a docs build warning    Commit 0b4773fd1649 (mtd: nand: Drop unused cached programming support)  removed the "cached" parameter from nand_write_page(), but did not update  the kerneldoc comments, creating this docs build warning:      ./drivers/mtd/nand/nand_base.c:2751: warning: Excess function parameter 'cached' description in 'nand_write_page'    Remove the offending line so we can have a little peace and quiet.    Signed-off-by: Jonathan Corbet <corbet@lwn.net>  Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>    * mtd: nand: Fix timing setup for NANDs that do not support SET FEATURES    Some ONFI NANDs do not support the SET/GET FEATURES commands, which,  according to the spec, is perfectly valid.    On these NANDs we can't set a specific timing mode using the "timing  mode" feature, and we should assume the NAND does not require any setup  to enter a specific timing mode.    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>  Fixes: d8e725dd8311 ("mtd: nand: automate NAND timings selection")  Reported-by: Alexander Dahl <ada@thorsis.com>  Cc: <stable@vger.kernel.org>  Tested-by: Alexander Dahl <ada@thorsis.com>  Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>    * mtd: nand: Declare tBERS, tR and tPROG as u64 to avoid integer overflow    All timings in nand_sdr_timings are expressed in picoseconds but some  of them may not fit in an u32.    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>  Fixes: 204e7ecd47e2 ("mtd: nand: Add a few more timings to nand_sdr_timings")  Reported-by: Alexander Dahl <ada@thorsis.com>  Cc: <stable@vger.kernel.org>  Reviewed-by: Alexander Dahl <ada@thorsis.com>  Tested-by: Alexander Dahl <ada@thorsis.com>  Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>    * mtd: nand: atmel: Fix EDO mode check    EDO mode should be used when tRC is less than 30ns, but timings are  expressed in picoseconds in the nand_sdr_timings struct.    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>  Fixes: f9ce2eddf176 ("mtd: nand: atmel: Add ->setup_data_interface() hooks")  Reported-by: Alexander Dahl <ada@thorsis.com>  Tested-by: Alexander Dahl <ada@thorsis.com>  Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>    * gpio: tegra: fix unbalanced chained_irq_enter/exit    When more than one GPIO IRQs are triggered simultaneously,  tegra_gpio_irq_handler() called chained_irq_exit() multiple  times for one chained_irq_enter().    Fixes: 3c92db9ac0ca3eee8e46e2424b6c074e2e394ad9  Signed-off-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>  [Also changed the variable to a bool]  Signed-off-by: Linus Walleij <linus.walleij@linaro.org>    * powerpc/83xx/mpc832x_rdb: fix of_irq_to_resource() error check    of_irq_to_resource() has recently been fixed to return negative error #'s  along with 0 in case of failure, however the Freescale MPC832x RDB board  code still only regards 0 as a failure indication -- fix it up.    Fixes: 7a4228bbff76 ("of: irq: use of_irq_get() in of_irq_to_resource()")  Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>  Acked-by: Scott Wood <oss@buserror.net>  Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>    * ALSA: hda - Fix speaker output from VAIO VPCL14M1R    Sony VAIO VPCL14M1R needs the quirk to make the speaker working properly.    Tested-by: Dmitriy <mexx400@yandex.ru>  Cc: <stable@vger.kernel.org>  Signed-off-by: Sergei A. Trusov <sergei.a.trusov@ya.ru>  Signed-off-by: Takashi Iwai <tiwai@suse.de>    * NFSv4: Fix double frees in nfs4_test_session_trunk()    rpc_clnt_add_xprt() expects the callback function to be synchronous, and  expects to release the transport and switch references itself.    Fixes: 04fa2c6bb51b1 ("NFS pnfs data server multipath session trunking")  Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>  Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>    * ARM64: dts: marvell: armada-37xx: Fix the number of GPIO on south bridge    The number of pins in South Bridge is 30 and not 29. There is a fix for  the driver for the pinctrl, but a fix is also need at device tree level  for the GPIO.    Fixes: afda007feda5 ("ARM64: dts: marvell: Add pinctrl nodes for Armada  3700")  Cc: <stable@vger.kernel.org>  Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>    * blk-mq: don't leak preempt counter/q_usage_counter when allocating rq failed    When blk_mq_get_request() failed, preempt counter isn't  released, and blk_mq_make_request() doesn't release the counter  too.    This patch fixes the issue, and makes sure that preempt counter  is only held if rq is allocated successfully. The same policy is  applied on .q_usage_counter too.    Signed-off-by: Ming Lei <minlei@redhat.com>  Signed-off-by: Jens Axboe <axboe@kernel.dk>    * lan78xx: USB fast connect/disconnect crash fix    USB fast connect/disconnect crash fix    When USB plugged/unplugged at fast rate,  lan78xx_mdio_init() in lan78xx_bind() failing case is not handled.  Whenever  lan78xx_mdio_init() failed, dev->mdiobus will be freed, however  since lan78xx_bind() not consider as error and try to proceed for  further initialization in lan78xx_probe() which leads system hung/crash.  Also when register_netdev() failed, netdev is freed without calling lan78xx_unbind().  Hence halting the failed cases right manner fixes the system crash/hung issue.    Signed-off-by: Nisar Sayed <Nisar.Sayed@microchip.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * lan78xx: Fix to handle hard_header_len update    Fix to handle hard_header_len update    When ifconfig up/down sequence is initiated hard_header_len  get updated incrementally for each ifconfig up /down sequence,  this leads invalid hard_header_len, moving to lan78xx_bind  to have one time update of hard_header_len addresses the issue.    Signed-off-by: Nisar Sayed <Nisar.Sayed@microchip.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net/mlx4_en: Fix wrong indication of Wake-on-LAN (WoL) support    Currently when WoL is supported but disabled, ethtool reports:  "Supports Wake-on: d".  Fix the indication of Wol support, so that the indication  remains "g" all the time if the NIC supports WoL.    Tested:  As accepted, when NIC supports WoL- ethtool reports:   Supports Wake-on: g   Wake-on: d  when NIC doesn't support WoL- ethtool reports:          Supports Wake-on: d          Wake-on: d    Fixes: 14c07b1358ed ("mlx4: Wake on LAN support")  Signed-off-by: Inbar Karmy <inbark@mellanox.com>  Signed-off-by: Tariq Toukan <tariqt@mellanox.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net/mlx4_core: Fix sl_to_vl_change bit offset in flags2 dump    The index value in function dump_dev_cap_flags2() for outputting  "sl to vl mapping table change event support" needs to be  consistent with the value of the enumerated constant  MLX4_DEV_CAP_FLAG2_SL_TO_VL_CHANGE_EVENT defined in file  include/linux/mlx4_device.h    The change here restores that consistency.    Fixes: fd10ed8e6f42 ("IB/mlx4: Fix possible vl/sl field mismatch in LRH header in QP1 packets")  Reported-by: Mukesh Kacker <mukesh.kacker@oracle.com>  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>  Signed-off-by: Tariq Toukan <tariqt@mellanox.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net/mlx4_core: Fix namespace misalignment in QinQ VST support commit    The cited commit introduced the following new enum value in file  include/linux/mlx4/device.h:        MLX4_DEV_CAP_FLAG2_SVLAN_BY_QP    However the value of MLX4_DEV_CAP_FLAG2_SVLAN_BY_QP needs to stay  consistent with the value used in another namespace in  function dump_dev_cap_flags2(), which is manually kept in sync.  The change here restores that consistency.    Fixes: 7c3d21c8153c ("net/mlx4_core: Preparation for VF vlan protocol 802.1ad")  Reported-by: Mukesh Kacker <mukesh.kacker@oracle.com>  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>  Signed-off-by: Tariq Toukan <tariqt@mellanox.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net/mlx4_core: Fixes missing capability bit in flags2 capability dump    The cited commit introduced the following new enum value in file  include/linux/mlx4/device.h:        QUERY_DEV_CAP_DIAG_RPRT_PER_PORT    However, it failed to introduce a corresponding entry in function  dump_dev_cap_flags2() for outputting a line in the message log  when this capability bit is set.    The change here fixes that omission.    Fixes: c7c122ed67e4 ("net/mlx4: Add diagnostic counters capability bit")  Reported-by: Mukesh Kacker <mukesh.kacker@oracle.com>  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>  Signed-off-by: Tariq Toukan <tariqt@mellanox.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * usb: qmi_wwan: add D-Link DWM-222 device ID    Signed-off-by: Hector Martin <marcan@marcan.st>  Signed-off-by: David S. Miller <davem@davemloft.net>    * ibmvnic: Initialize SCRQ's during login renegotiation    SCRQ resources are freed during renegotiation, but they are not  re-allocated afterwards due to some changes in the initialization  process. Fix that by re-allocating the memory after renegotation.    SCRQ's can also be freed if a server capabilities request fails.  If this were encountered during a device reset for example,  SCRQ's may not be re-allocated. This operation is not necessary  anymore so remove it.    Signed-off-by: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * tcp: avoid setting cwnd to invalid ssthresh after cwnd reduction states    If the sender switches the congestion control during ECN-triggered  cwnd-reduction state (CA_CWR), upon exiting recovery cwnd is set to  the ssthresh value calculated by the previous congestion control. If  the previous congestion control is BBR that always keep ssthresh  to TCP_INIFINITE_SSTHRESH, cwnd ends up being infinite. The safe  step is to avoid assigning invalid ssthresh value when recovery ends.    Signed-off-by: Yuchung Cheng <ycheng@google.com>  Signed-off-by: Neal Cardwell <ncardwell@google.com>  Acked-by: Eric Dumazet <edumazet@google.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * drm/amdgpu: Fix undue fallthroughs in golden registers initialization    As I was staring at the si_init_golden_registers code, I noticed that  the Pitcairn initialization silently falls through the Cape Verde  initialization, and the Oland initialization falls through the Hainan  initialization. However there is no comment stating that this is  intentional, and the radeon driver doesn't have any such fallthrough,  so I suspect this is not supposed to happen.    Signed-off-by: Jean Delvare <jdelvare@suse.de>  Fixes: 62a37553414a ("drm/amdgpu: add si implementation v10")  Cc: Ken Wang <Qingqing.Wang@amd.com>  Cc: Alex Deucher <alexander.deucher@amd.com>  Cc: "Marek Olšák" <maraeo@gmail.com>  Cc: "Christian König" <christian.koenig@amd.com>  Cc: Flora Cui <Flora.Cui@amd.com>  Reviewed-by: Marek Olšák <marek.olsak@amd.com>  Signed-off-by: Alex Deucher <alexander.deucher@amd.com>  Cc: stable@vger.kernel.org    * drm/amdgpu: Use list_del_init in amdgpu_mn_unregister    Otherwise bo->shadow_list (which is aliased by bo->mn_list) will not  appear empty in amdgpu_ttm_bo_destroy and cause an oops when freeing  former userptr BOs.    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>  Reviewed-by: Christian König <christian.koenig@amd.com>  Signed-off-by: Alex Deucher <alexander.deucher@amd.com>    * KVM: X86: Fix loss of pending INIT due to race    When SMP VM start, AP may lost INIT because of receiving INIT between  kvm_vcpu_ioctl_x86_get/set_vcpu_events.           vcpu 0                             vcpu 1                                     kvm_vcpu_ioctl_x86_get_vcpu_events                                       events->smi.latched_init = 0    send INIT to vcpu1      set vcpu1's pending_events                                     kvm_vcpu_ioctl_x86_set_vcpu_events                                        if (events->smi.latched_init == 0)                                          clear INIT in pending_events    This patch fixes it by just update SMM related flags if we are in SMM.    Thanks Peng Hao for the report and original commit message.    Reported-by: Peng Hao <peng.hao2@zte.com.cn>  Cc: Paolo Bonzini <pbonzini@redhat.com>  Cc: Radim Krčmář <rkrcmar@redhat.com>  Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>  Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>  Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>    * KVM: X86: init irq->level in kvm_pv_kick_cpu_op    'lapic_irq' is a local variable and its 'level' field isn't  initialized, so 'level' is random, it doesn't matter but  makes UBSAN unhappy:    UBSAN: Undefined behaviour in .../lapic.c:...  load of value 10 is not a valid value for type '_Bool'  ...  Call Trace:   [<ffffffff81f030b6>] dump_stack+0x1e/0x20   [<ffffffff81f03173>] ubsan_epilogue+0x12/0x55   [<ffffffff81f03b96>] __ubsan_handle_load_invalid_value+0x118/0x162   [<ffffffffa1575173>] kvm_apic_set_irq+0xc3/0xf0 [kvm]   [<ffffffffa1575b20>] kvm_irq_delivery_to_apic_fast+0x450/0x910 [kvm]   [<ffffffffa15858ea>] kvm_irq_delivery_to_apic+0xfa/0x7a0 [kvm]   [<ffffffffa1517f4e>] kvm_emulate_hypercall+0x62e/0x760 [kvm]   [<ffffffffa113141a>] handle_vmcall+0x1a/0x30 [kvm_intel]   [<ffffffffa114e592>] vmx_handle_exit+0x7a2/0x1fa0 [kvm_intel]  ...    Signed-off-by: Longpeng(Mike) <longpeng2@huawei.com>  Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>    * KVM: avoid using rcu_dereference_protected    During teardown, accesses to memslots and buses are using  rcu_dereference_protected with an always-true condition because  these accesses are done outside the usual mutexes.  This  is because the last reference is gone and there cannot be any  concurrent modifications, but rcu_dereference_protected is  ugly and unobvious.    Instead, check the refcount in kvm_get_bus and __kvm_memslots.    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>  Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>    * KVM: nVMX: do not pin the VMCS12    Since the current implementation of VMCS12 does a memcpy in and out  of guest memory, we do not need current_vmcs12 and current_vmcs12_page  anymore.  current_vmptr is enough to read and write the VMCS12.    And David Matlack noted:      This patch also fixes dirty tracking (memslot->dirty_bitmap) of the    VMCS12 page by using kvm_write_guest. nested_release_page() only marks    the struct page dirty.    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>  Reviewed-by: David Hildenbrand <david@redhat.com>  [Added David Matlack's note and nested_release_page_clean() fix.]  Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>    * kvm: nVMX: don't flush VMCS12 during VMXOFF or VCPU teardown    According to the Intel SDM, software cannot rely on the current VMCS to be  coherent after a VMXOFF or shutdown. So this is a valid way to handle VMCS12  flushes.    24.11.1 Software Use of Virtual-Machine Control Structures  ...    If a logical processor leaves VMX operation, any VMCSs active on    that logical processor may be corrupted (see below). To prevent    such corruption of a VMCS that may be used either after a return    to VMX operation or on another logical processor, software should    execute VMCLEAR for that VMCS before executing the VMXOFF instruction    or removing power from the processor (e.g., as part of a transition    to the S3 and S4 power states).  ...    This fixes a "suspicious rcu_dereference_check() usage!" warning during  kvm_vm_release() because nested_release_vmcs12() calls  kvm_vcpu_write_guest_page() without holding kvm->srcu.    Signed-off-by: David Matlack <dmatlack@google.com>  Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>  Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>    * KVM: nVMX: mark vmcs12 pages dirty on L2 exit    The host physical addresses of L1's Virtual APIC Page and Posted  Interrupt descriptor are loaded into the VMCS02. The CPU may write  to these pages via their host physical address while L2 is running,  bypassing address-translation-based dirty tracking (e.g. EPT write  protection). Mark them dirty on every exit from L2 to prevent them  from getting out of sync with dirty tracking.    Also mark the virtual APIC page and the posted interrupt descriptor  dirty when KVM is virtualizing posted interrupt processing.    Signed-off-by: David Matlack <dmatlack@google.com>  Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>  Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>    * mm/hugetlb.c: __get_user_pages ignores certain follow_hugetlb_page errors    Commit 9a291a7c9428 ("mm/hugetlb: report -EHWPOISON not -EFAULT when  FOLL_HWPOISON is specified") causes __get_user_pages to ignore certain  errors from follow_hugetlb_page.  After such error, __get_user_pages  subsequently calls faultin_page on the same VMA and start address that  follow_hugetlb_page failed on instead of returning the error immediately  as it should.    In follow_hugetlb_page, when hugetlb_fault returns a value covered under  VM_FAULT_ERROR, follow_hugetlb_page returns it without setting nr_pages  to 0 as __get_user_pages expects in this case, which causes the  following to happen in __get_user_pages: the "while (nr_pages)" check  succeeds, we skip the "if (!vma..." check because we got a VMA the last  time around, we find no page with follow_page_mask, and we call  faultin_page, which calls hugetlb_fault for the second time.    This issue also slightly changes how __get_user_pages works.  Before, it  only returned error if it had made no progress (i = 0).  But now,  follow_hugetlb_page can clobber "i" with an error code since its new  return path doesn't check for progress.  So if "i" is nonzero before a  failing call to follow_hugetlb_page, that indication of progress is lost  and __get_user_pages can return error even if some pages were  successfully pinned.    To fix this, change follow_hugetlb_page so that it updates nr_pages,  allowing __get_user_pages to fail immediately and restoring the "error  only if no progress" behavior to __get_user_pages.    Tested that __get_user_pages returns when expected on error from  hugetlb_fault in follow_hugetlb_page.    Fixes: 9a291a7c9428 ("mm/hugetlb: report -EHWPOISON not -EFAULT when FOLL_HWPOISON is specified")  Link: http://lkml.kernel.org/r/1500406795-58462-1-git-send-email-daniel.m.jordan@oracle.com  Signed-off-by: Daniel Jordan <daniel.m.jordan@oracle.com>  Acked-by: Punit Agrawal <punit.agrawal@arm.com>  Cc: Andrea Arcangeli <aarcange@redhat.com>  Cc: "Aneesh Kumar K.V" <aneesh.kumar@linux.vnet.ibm.com>  Cc: Gerald Schaefer <gerald.schaefer@de.ibm.com>  Cc: James Morse <james.morse@arm.com>  Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>  Cc: Michal Hocko <mhocko@suse.com>  Cc: Mike Kravetz <mike.kravetz@oracle.com>  Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>  Cc: zhong jiang <zhongjiang@huawei.com>  Cc: <stable@vger.kernel.org> [4.12.x]  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * pid: kill pidhash_size in pidhash_init()    After commit 3d375d78593c ("mm: update callers to use HASH_ZERO flag"),  drop unused pidhash_size in pidhash_init().    Link: http://lkml.kernel.org/r/1500389267-49222-1-git-send-email-wangkefeng.wang@huawei.com  Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>  Reviewed-by: Pavel Tatashin <Pasha.Tatashin@Oracle.com>  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * mm, mprotect: flush TLB if potentially racing with a parallel reclaim leaving stale TLB entries    Nadav Amit identified a theoritical race between page reclaim and  mprotect due to TLB flushes being batched outside of the PTL being held.    He described the race as follows:            CPU0                            CPU1          ----                            ----                                          user accesses memory using RW PTE                                          [PTE now cached in TLB]          try_to_unmap_one()          ==> ptep_get_and_clear()          ==> set_tlb_ubc_flush_pending()                                          mprotect(addr, PROT_READ)                                          ==> change_pte_range()                                          ==> [ PTE non-present - no flush ]                                            user writes using cached RW PTE          ...            try_to_unmap_flush()    The same type of race exists for reads when protecting for PROT_NONE and  also exists for operations that can leave an old TLB entry behind such  as munmap, mremap and madvise.    For some operations like mprotect, it's not necessarily a data integrity  issue but it is a correctness issue as there is a window where an  mprotect that limits access still allows access.  For munmap, it's  potentially a data integrity issue although the race is massive as an  munmap, mmap and return to userspace must all complete between the  window when reclaim drops the PTL and flushes the TLB.  However, it's  theoritically possible so handle this issue by flushing the mm if  reclaim is potentially currently batching TLB flushes.    Other instances where a flush is required for a present pte should be ok  as either the page lock is held preventing parallel reclaim or a page  reference count is elevated preventing a parallel free leading to  corruption.  In the case of page_mkclean there isn't an obvious path  that userspace could take advantage of without using the operations that  are guarded by this patch.  Other users such as gup as a race with  reclaim looks just at PTEs.  huge page variants should be ok as they  don't race with reclaim.  mincore only looks at PTEs.  userfault also  should be ok as if a parallel reclaim takes place, it will either fault  the page back in or read some of the data before the flush occurs  triggering a fault.    Note that a variant of this patch was acked by Andy Lutomirski but this  was for the x86 parts on top of his PCID work which didn't make the 4.13  merge window as expected.  His ack is dropped from this version and  there will be a follow-on patch on top of PCID that will include his  ack.    [akpm@linux-foundation.org: tweak comments]  [akpm@linux-foundation.org: fix spello]  Link: http://lkml.kernel.org/r/20170717155523.emckq2esjro6hf3z@suse.de  Reported-by: Nadav Amit <nadav.amit@gmail.com>  Signed-off-by: Mel Gorman <mgorman@suse.de>  Cc: Andy Lutomirski <luto@kernel.org>  Cc: <stable@vger.kernel.org> [v4.4+]  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * userfaultfd: non-cooperative: notify about unmap of destination during mremap    When mremap is called with MREMAP_FIXED it unmaps memory at the  destination address without notifying userfaultfd monitor.    If the destination were registered with userfaultfd, the monitor has no  way to distinguish between the old and new ranges and to properly relate  the page faults that would occur in the destination region.    Fixes: 897ab3e0c49e ("userfaultfd: non-cooperative: add event for memory unmaps")  Link: http://lkml.kernel.org/r/1500276876-3350-1-git-send-email-rppt@linux.vnet.ibm.com  Signed-off-by: Mike Rapoport <rppt@linux.vnet.ibm.com>  Acked-by: Pavel Emelyanov <xemul@virtuozzo.com>  Cc: Andrea Arcangeli <aarcange@redhat.com>  Cc: <stable@vger.kernel.org>  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * kasan: avoid -Wmaybe-uninitialized warning    gcc-7 produces this warning:      mm/kasan/report.c: In function 'kasan_report':    mm/kasan/report.c:351:3: error: 'info.first_bad_addr' may be used uninitialized in this function [-Werror=maybe-uninitialized]       print_shadow_for_address(info->first_bad_addr);       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    mm/kasan/report.c:360:27: note: 'info.first_bad_addr' was declared here    The code seems fine as we only print info.first_bad_addr when there is a  shadow, and we always initialize it in that case, but this is relatively  hard for gcc to figure out after the latest rework.    Adding an intialization to the most likely value together with the other  struct members shuts up that warning.    Fixes: b235b9808664 ("kasan: unify report headers")  Link: https://patchwork.kernel.org/patch/9641417/  Link: http://lkml.kernel.org/r/20170725152739.4176967-1-arnd@arndb.de  Signed-off-by: Arnd Bergmann <arnd@arndb.de>  Suggested-by: Alexander Potapenko <glider@google.com>  Suggested-by: Andrey Ryabinin <aryabinin@virtuozzo.com>  Acked-by: Andrey Ryabinin <aryabinin@virtuozzo.com>  Cc: Dmitry Vyukov <dvyukov@google.com>  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * kthread: fix documentation build warning    The kerneldoc comment for kthread_create() had an incorrect argument  name, leading to a warning in the docs build.    Correct it, and make one more small step toward a warning-free build.    Link: http://lkml.kernel.org/r/20170724135916.7f486c6f@lwn.net  Signed-off-by: Jonathan Corbet <corbet@lwn.net>  Cc: Randy Dunlap <rdunlap@infradead.org>  Signed-off-by: Andrew Morton <akpm@linux-foundation.org>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * zram: do not free pool->size_class    Mike …	addstone	null	null	null	null	null	null	
2017-08-12 23:27:37.0	null	2020-02-15 12:33:50.0	open	[]	12	447	this code very faster	https://api.github.com/repos/torvalds/linux/issues/447	https://github.com/torvalds/linux/pull/447	prepend `//` to every line greatly improving compilation performance	alexozer	null	null	null	null	null	null	
2017-08-16 01:24:23.0	2017-08-16 01:31:07.0	2017-08-16 01:31:07.0	closed	[]	1	448	pull from origin	https://api.github.com/repos/torvalds/linux/issues/448	https://github.com/torvalds/linux/pull/448		tgexpress	null	null	null	null	null	null	
2017-08-16 03:39:13.0	2017-08-16 03:46:45.0	2017-08-16 03:46:57.0	closed	[]	2	449	test	https://api.github.com/repos/torvalds/linux/issues/449	https://github.com/torvalds/linux/pull/449		786228836	null	null	null	null	null	null	
2017-08-17 10:58:12.0	null	2020-05-26 18:31:27.0	open	[]	1	450	Asap2 direct 3.3 next	https://api.github.com/repos/torvalds/linux/issues/450	https://github.com/torvalds/linux/pull/450		mishuang2017	null	null	null	null	null	null	
2017-08-21 02:32:09.0	null	2017-08-21 03:33:01.0	open	[]	3	451	IR and Depth format of the Intel RealSense	https://api.github.com/repos/torvalds/linux/issues/451	https://github.com/torvalds/linux/pull/451	I inserted the Intel RealSense Depth and IR format to correct bug in the image preview.	cabelo	null	null	null	null	null	null	
2017-08-22 12:15:13.0	null	2017-08-22 12:20:08.0	open	[]	1	452	added rtl8812au drivers	https://api.github.com/repos/torvalds/linux/issues/452	https://github.com/torvalds/linux/pull/452	* added rtl8812au drivers to staging  	kimocoder	null	null	null	null	null	null	
2017-08-26 12:46:37.0	2017-08-26 12:47:38.0	2017-08-26 12:52:11.0	closed	[]	1	454	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/454	https://github.com/torvalds/linux/pull/454	update fork	gpfly	null	null	null	null	null	null	
2017-08-29 11:15:49.0	2017-08-29 11:16:44.0	2017-08-29 11:16:44.0	closed	[]	0	455	dd	https://api.github.com/repos/torvalds/linux/issues/455	https://github.com/torvalds/linux/pull/455	dd	gspu	null	null	null	null	null	null	
2017-09-01 16:43:29.0	2017-09-12 11:29:49.0	2017-09-12 11:29:49.0	closed	[]	1	456	Append "DEFAULT_BFQ" to the default I/O scheduler	https://api.github.com/repos/torvalds/linux/issues/456	https://github.com/torvalds/linux/pull/456	Add a *Kconfig* option to compile the BFQ I/O scheduler.	sasairc	null	null	null	null	null	null	
2017-09-03 01:44:20.0	null	2020-10-02 17:48:17.0	open	[]	4	457	Fix Octal regex...	https://api.github.com/repos/torvalds/linux/issues/457	https://github.com/torvalds/linux/pull/457	Octal is 0-7, not 0-9	marcb	null	null	null	null	null	null	
2017-09-05 18:57:20.0	2017-09-05 19:14:45.0	2017-09-05 19:14:45.0	closed	[]	1	458	Hpsa next	https://api.github.com/repos/torvalds/linux/issues/458	https://github.com/torvalds/linux/pull/458		dabrace	null	null	null	null	null	null	
2017-09-10 22:41:02.0	null	2020-10-02 17:48:13.0	open	[]	1	459	Merge pull request #1 from joe4379/4.13-rc1-mlb	https://api.github.com/repos/torvalds/linux/issues/459	https://github.com/torvalds/linux/pull/459	4.13 rc1 mlb	joe4379	null	null	null	null	null	null	
2017-09-12 11:43:13.0	null	2020-10-02 17:48:11.0	open	[]	1	460	Append "DEFAULT_BFQ" to the default I/O scheduler	https://api.github.com/repos/torvalds/linux/issues/460	https://github.com/torvalds/linux/pull/460	Add a Kconfig option to compile the BFQ I/O scheduler.	sasairc	null	null	null	null	null	null	
2017-09-17 11:37:46.0	null	2017-09-17 11:40:07.0	open	[]	1	461	Enabling WDS	https://api.github.com/repos/torvalds/linux/issues/461	https://github.com/torvalds/linux/pull/461	Sample video demonstration: https://www.youtube.com/watch?v=a27qWHO8JDM	ramonfontes	null	null	null	null	null	null	
2017-09-18 05:51:34.0	null	2020-10-02 17:48:08.0	open	[]	1	462	V3s	https://api.github.com/repos/torvalds/linux/issues/462	https://github.com/torvalds/linux/pull/462		tongjinlv	null	null	null	null	null	null	
2017-09-19 05:45:47.0	2017-09-19 05:46:20.0	2017-09-19 05:46:20.0	closed	[]	0	463	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/463	https://github.com/torvalds/linux/pull/463	update	jianguocn	null	null	null	null	null	null	
2017-09-19 05:47:10.0	null	2017-09-19 05:50:07.0	open	[]	1	464	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/464	https://github.com/torvalds/linux/pull/464	update	jianguocn	null	null	null	null	null	null	
2017-09-20 05:24:10.0	2017-09-20 05:24:30.0	2017-09-20 05:24:30.0	closed	[]	0	465	Update gen_init_cpio.c	https://api.github.com/repos/torvalds/linux/issues/465	https://github.com/torvalds/linux/pull/465	Estética para el método cpio_trailer    de esto  07070100000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000C00000000TRAILER!!!archangel@archangel:~/Escritorio$    a esto    07070100000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000C00000000TRAILER!!!  archangel@archangel:~/Escritorio$	rafaelsagastume	null	null	null	null	null	null	
2017-09-20 05:34:29.0	2017-09-20 05:35:05.0	2017-09-20 05:35:05.0	closed	[]	0	466	Update from original Repo	https://api.github.com/repos/torvalds/linux/issues/466	https://github.com/torvalds/linux/pull/466		rafaelsagastume	null	null	null	null	null	null	
2017-09-20 08:26:20.0	null	2020-10-02 17:48:05.0	open	[]	1	467	Updated dsa.txt	https://api.github.com/repos/torvalds/linux/issues/467	https://github.com/torvalds/linux/pull/467	typo fixed	mihir3445	null	null	null	null	null	null	
2017-09-21 10:56:20.0	2017-09-21 10:56:32.0	2017-09-21 10:56:32.0	closed	[]	0	468	1	https://api.github.com/repos/torvalds/linux/issues/468	https://github.com/torvalds/linux/pull/468		gs0510	null	null	null	null	null	null	
2017-09-22 18:03:02.0	2017-09-22 18:05:24.0	2017-09-22 18:05:24.0	closed	[]	1	469	pull for updata	https://api.github.com/repos/torvalds/linux/issues/469	https://github.com/torvalds/linux/pull/469	pull for updata	Axl-zhang	null	null	null	null	null	null	
2017-09-26 21:03:41.0	null	2018-09-12 06:23:32.0	open	[]	4	470	performance fix	https://api.github.com/repos/torvalds/linux/issues/470	https://github.com/torvalds/linux/pull/470	change for -> while	ghost	null	null	null	null	null	null	
2017-09-26 21:42:41.0	null	2020-10-02 17:47:53.0	open	[]	2	471	Add author's name	https://api.github.com/repos/torvalds/linux/issues/471	https://github.com/torvalds/linux/pull/471	It looks like some lines on the LICENSE hasn't been added yet.    For instance: 332, 349, 309, 310.	Mandroide	null	null	null	null	null	null	
2017-09-27 18:43:15.0	2017-09-27 18:43:21.0	2017-09-27 18:43:21.0	closed	[]	0	472	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/472	https://github.com/torvalds/linux/pull/472	Merge New	serafdev	null	null	null	null	null	null	
2017-09-29 21:23:07.0	null	2020-05-18 17:53:12.0	open	[]	1	473	Update addrlabel.c	https://api.github.com/repos/torvalds/linux/issues/473	https://github.com/torvalds/linux/pull/473	Why the logical &&?  Would like to add this will lead to problems when p->ifindex = 0.	SoundButton	null	null	null	null	null	null	
2017-10-01 06:57:09.0	2017-10-01 06:58:38.0	2017-10-01 06:58:38.0	closed	[]	2	474	Update from Source Repository	https://api.github.com/repos/torvalds/linux/issues/474	https://github.com/torvalds/linux/pull/474		CerebralMischief	null	null	null	null	null	null	
2017-10-03 10:02:13.0	2017-10-03 10:13:45.0	2017-10-03 10:13:45.0	closed	[]	1	475	linux: Merge branch from linux/master into forked repo (#1)	https://api.github.com/repos/torvalds/linux/issues/475	https://github.com/torvalds/linux/pull/475	* ext4: fix two spelling nits    Signed-off-by: Theodore Ts'o <tytso@mit.edu>    * net: hns: fix uninitialized data use    When dev_dbg() is enabled, we print uninitialized data, as gcc-7.0.1  now points out:    ethernet/hisilicon/hns/hns_dsaf_main.c: In function 'hns_dsaf_set_promisc_tcam':  ethernet/hisilicon/hns/hns_dsaf_main.c:2947:75: error: 'tbl_tcam_data.low.val' may be used uninitialized in this function [-Werror=maybe-uninitialized]  ethernet/hisilicon/hns/hns_dsaf_main.c:2947:75: error: 'tbl_tcam_data.high.val' may be used uninitialized in this function [-Werror=maybe-uninitialized]    We also pass the data into hns_dsaf_tcam_mc_cfg(), which might later  use it (not sure about that), so it seems safer to just always initialize  the tbl_tcam_data structure.    Fixes: 1f5fa2dd1cfa ("net: hns: fix for promisc mode in HNS driver")  Signed-off-by: Arnd Bergmann <arnd@arndb.de>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: hns: avoid gcc-7.0.1 warning for uninitialized data    hns_dsaf_set_mac_key() calls dsaf_set_field() on an uninitialized field,  which will then change only a few of its bits, causing a warning with  the latest gcc:    hisilicon/hns/hns_dsaf_main.c: In function 'hns_dsaf_set_mac_uc_entry':  hisilicon/hns/hns_dsaf_reg.h:1046:12: error: 'mac_key.low.bits.port_vlan' may be used uninitialized in this function [-Werror=maybe-uninitialized]     (origin) &= (~(mask)); \              ^~  hisilicon/hns/hns_dsaf_main.c: In function 'hns_dsaf_set_mac_mc_entry':  hisilicon/hns/hns_dsaf_reg.h:1046:12: error: 'mac_key.low.bits.port_vlan' may be used uninitialized in this function [-Werror=maybe-uninitialized]  hisilicon/hns/hns_dsaf_main.c: In function 'hns_dsaf_add_mac_mc_port':  hisilicon/hns/hns_dsaf_reg.h:1046:12: error: 'mac_key.low.bits.port_vlan' may be used uninitialized in this function [-Werror=maybe-uninitialized]  hisilicon/hns/hns_dsaf_main.c: In function 'hns_dsaf_del_mac_entry':  hisilicon/hns/hns_dsaf_reg.h:1046:12: error: 'mac_key.low.bits.port_vlan' may be used uninitialized in this function [-Werror=maybe-uninitialized]  hisilicon/hns/hns_dsaf_main.c: In function 'hns_dsaf_rm_mac_addr':  hisilicon/hns/hns_dsaf_reg.h:1046:12: error: 'mac_key.low.bits.port_vlan' may be used uninitialized in this function [-Werror=maybe-uninitialized]  hisilicon/hns/hns_dsaf_main.c: In function 'hns_dsaf_del_mac_mc_port':  hisilicon/hns/hns_dsaf_reg.h:1046:12: error: 'mac_key.low.bits.port_vlan' may be used uninitialized in this function [-Werror=maybe-uninitialized]  hisilicon/hns/hns_dsaf_main.c: In function 'hns_dsaf_get_mac_uc_entry':  hisilicon/hns/hns_dsaf_reg.h:1046:12: error: 'mac_key.low.bits.port_vlan' may be used uninitialized in this function [-Werror=maybe-uninitialized]  hisilicon/hns/hns_dsaf_main.c: In function 'hns_dsaf_get_mac_mc_entry':  hisilicon/hns/hns_dsaf_reg.h:1046:12: error: 'mac_key.low.bits.port_vlan' may be used uninitialized in this function [-Werror=maybe-uninitialized]    The code is actually correct since we always set all 16 bits of the  port_vlan field, but gcc correctly points out that the first  access does contain uninitialized data.    This initializes the field to zero first before setting the  individual bits.    Fixes: 5483bfcb169c ("net: hns: modify tcam table and set mac key")  Signed-off-by: Arnd Bergmann <arnd@arndb.de>  Signed-off-by: David S. Miller <davem@davemloft.net>    * irda: vlsi_ir: fix check for DMA mapping errors    vlsi_alloc_ring() checks for DMA mapping errors by comparing  returned address with zero, while pci_dma_mapping_error() should be used.    Found by Linux Driver Verification project (linuxtesting.org).    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>  Signed-off-by: David S. Miller <davem@davemloft.net>    * EDAC, pnd2_edac: Fix reported DIMM number    DIMM number passed to edac_mc_handle_error() was accidentally hardcoded  to zero. Pass in the correct daddr->dimm value.    Signed-off-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>  Signed-off-by: Borislav Petkov <bp@suse.de>    * Linux 4.11-rc4    * USB: fix linked-list corruption in rh_call_control()    Using KASAN, Dmitry found a bug in the rh_call_control() routine: If  buffer allocation fails, the routine returns immediately without  unlinking its URB from the control endpoint, eventually leading to  linked-list corruption.    This patch fixes the problem by jumping to the end of the routine  (where the URB is unlinked) when an allocation failure occurs.    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>  Reported-and-tested-by: Dmitry Vyukov <dvyukov@google.com>  CC: <stable@vger.kernel.org>  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>    * sched/clock: Fix broken stable to unstable transfer    When it is determined that the clock is actually unstable, and  we switch from stable to unstable, the __clear_sched_clock_stable()  function is eventually called.    In this function we set gtod_offset so the following holds true:      sched_clock() + raw_offset == ktime_get_ns() + gtod_offset    But instead of getting the latest timestamps, we use the last values  from scd, so instead of sched_clock() we use scd->tick_raw, and  instead of ktime_get_ns() we use scd->tick_gtod.    However, later, when we use gtod_offset sched_clock_local() we do not  add it to scd->tick_gtod to calculate the correct clock value when we  determine the boundaries for min/max clocks.    This can result in tick granularity sched_clock() values, so fix it.    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>  Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>  Cc: Linus Torvalds <torvalds@linux-foundation.org>  Cc: Peter Zijlstra <peterz@infradead.org>  Cc: Thomas Gleixner <tglx@linutronix.de>  Cc: hpa@zytor.com  Fixes: 5680d8094ffa ("sched/clock: Provide better clock continuity")  Link: http://lkml.kernel.org/r/1490214265-899964-2-git-send-email-pasha.tatashin@oracle.com  Signed-off-by: Ingo Molnar <mingo@kernel.org>    * drm/i915: Restore marking context objects as dirty on pinning    Commit e8a9c58fcd9a ("drm/i915: Unify active context tracking between  legacy/execlists/guc") converted the legacy intel_ringbuffer submission  to the same context pinning mechanism as execlists - that is to pin the  context until the subsequent request is retired. Previously it used the  vma retirement of the context object to keep itself pinned until the  next request (after i915_vma_move_to_active()). In the conversion, I  missed that the vma retirement was also responsible for marking the  object as dirty. Mark the context object as dirty when pinning  (equivalent to execlists) which ensures that if the context is swapped  out due to mempressure or suspend/hibernation, when it is loaded back in  it does so with the previous state (and not all zero).    Fixes: e8a9c58fcd9a ("drm/i915: Unify active context tracking between legacy/execlists/guc")  Reported-by: Dennis Gilmore <dennis@ausil.us>  Reported-by: Mathieu Marquer <mathieu.marquer@gmail.com>  Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=99993  Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=100181  Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>  Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>  Cc: <drm-intel-fixes@lists.freedesktop.org> # v4.11-rc1  Link: http://patchwork.freedesktop.org/patch/msgid/20170322205930.12762-1-chris@chris-wilson.co.uk  Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>  (cherry picked from commit 5d4bac5503fcc67dd7999571e243cee49371aef7)  Signed-off-by: Jani Nikula <jani.nikula@intel.com>    * netfilter: invoke synchronize_rcu after set the _hook_ to NULL    Otherwise, another CPU may access the invalid pointer. For example:      CPU0                CPU1       -              rcu_read_lock();       -              pfunc = _hook_;    _hook_ = NULL;          -    mod unload              -       -                 pfunc(); // invalid, panic       -             rcu_read_unlock();    So we must call synchronize_rcu() to wait the rcu reader to finish.    Also note, in nf_nat_snmp_basic_fini, synchronize_rcu() will be invoked  by later nf_conntrack_helper_unregister, but I'm inclined to add a  explicit synchronize_rcu after set the nf_nat_snmp_hook to NULL. Depend  on such obscure assumptions is not a good idea.    Last, in nfnetlink_cttimeout, we use kfree_rcu to free the time object,  so in cttimeout_exit, invoking rcu_barrier() is not necessary at all,  remove it too.    Signed-off-by: Liping Zhang <zlpnobody@gmail.com>  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>    * netfilter: nfnl_cthelper: fix a race when walk the nf_ct_helper_hash table    The nf_ct_helper_hash table is protected by nf_ct_helper_mutex, while  nfct_helper operation is protected by nfnl_lock(NFNL_SUBSYS_CTHELPER).  So it's possible that one CPU is walking the nf_ct_helper_hash for  cthelper add/get/del, another cpu is doing nf_conntrack_helpers_unregister  at the same time. This is dangrous, and may cause use after free error.    Note, delete operation will flush all cthelpers added via nfnetlink, so  using rcu to do protect is not easy.    Now introduce a dummy list to record all the cthelpers added via  nfnetlink, then we can walk the dummy list instead of walking the  nf_ct_helper_hash. Also, keep nfnl_cthelper_dump_table unchanged, it  may be invoked without nfnl_lock(NFNL_SUBSYS_CTHELPER) held.    Signed-off-by: Liping Zhang <zlpnobody@gmail.com>  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>    * netfilter: nf_ct_ext: fix possible panic after nf_ct_extend_unregister    If one cpu is doing nf_ct_extend_unregister while another cpu is doing  __nf_ct_ext_add_length, then we may hit BUG_ON(t == NULL). Moreover,  there's no synchronize_rcu invocation after set nf_ct_ext_types[id] to  NULL, so it's possible that we may access invalid pointer.    But actually, most of the ct extends are built-in, so the problem listed  above will not happen. However, there are two exceptions: NF_CT_EXT_NAT  and NF_CT_EXT_SYNPROXY.    For _EXT_NAT, the panic will not happen, since adding the nat extend and  unregistering the nat extend are located in the same file(nf_nat_core.c),  this means that after the nat module is removed, we cannot add the nat  extend too.    For _EXT_SYNPROXY, synproxy extend may be added by init_conntrack, while  synproxy extend unregister will be done by synproxy_core_exit. So after  nf_synproxy_core.ko is removed, we may still try to add the synproxy  extend, then kernel panic may happen.    I know it's very hard to reproduce this issue, but I can play a tricky  game to make it happen very easily :)    Step 1. Enable SYNPROXY for tcp dport 1234 at FORWARD hook:    # iptables -I FORWARD -p tcp --dport 1234 -j SYNPROXY  Step 2. Queue the syn packet to the userspace at raw table OUTPUT hook.          Also note, in the userspace we only add a 20s' delay, then          reinject the syn packet to the kernel:    # iptables -t raw -I OUTPUT -p tcp --syn -j NFQUEUE --queue-num 1  Step 3. Using "nc 2.2.2.2 1234" to connect the server.  Step 4. Now remove the nf_synproxy_core.ko quickly:    # iptables -F FORWARD    # rmmod ipt_SYNPROXY    # rmmod nf_synproxy_core  Step 5. After 20s' delay, the syn packet is reinjected to the kernel.    Now you will see the panic like this:    kernel BUG at net/netfilter/nf_conntrack_extend.c:91!    Call Trace:     ? __nf_ct_ext_add_length+0x53/0x3c0 [nf_conntrack]     init_conntrack+0x12b/0x600 [nf_conntrack]     nf_conntrack_in+0x4cc/0x580 [nf_conntrack]     ipv4_conntrack_local+0x48/0x50 [nf_conntrack_ipv4]     nf_reinject+0x104/0x270     nfqnl_recv_verdict+0x3e1/0x5f9 [nfnetlink_queue]     ? nfqnl_recv_verdict+0x5/0x5f9 [nfnetlink_queue]     ? nla_parse+0xa0/0x100     nfnetlink_rcv_msg+0x175/0x6a9 [nfnetlink]     [...]    One possible solution is to make NF_CT_EXT_SYNPROXY extend built-in, i.e.  introduce nf_conntrack_synproxy.c and only do ct extend register and  unregister in it, similar to nf_conntrack_timeout.c.    But having such a obscure restriction of nf_ct_extend_unregister is not a  good idea, so we should invoke synchronize_rcu after set nf_ct_ext_types  to NULL, and check the NULL pointer when do __nf_ct_ext_add_length. Then  it will be easier if we add new ct extend in the future.    Last, we use kfree_rcu to free nf_ct_ext, so rcu_barrier() is unnecessary  anymore, remove it too.    Signed-off-by: Liping Zhang <zlpnobody@gmail.com>  Acked-by: Florian Westphal <fw@strlen.de>  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>    * netfilter: nf_nat_snmp: Fix panic when snmp_trap_helper fails to register    In the commit 93557f53e1fb ("netfilter: nf_conntrack: nf_conntrack snmp  helper"), the snmp_helper is replaced by nf_nat_snmp_hook. So the  snmp_helper is never registered. But it still tries to unregister the  snmp_helper, it could cause the panic.    Now remove the useless snmp_helper and the unregister call in the  error handler.    Fixes: 93557f53e1fb ("netfilter: nf_conntrack: nf_conntrack snmp helper")  Signed-off-by: Gao Feng <fgao@ikuai8.com>  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>    * NFS: Fix old dentry rehash after move    Now that nfs_rename()'s d_move has moved within the RPC task's rpc_call_done  callback, rehashing new_dentry will actually rehash the old dentry's name  in nfs_rename().  d_move() is going to rehash the new dentry for us anyway,  so doing it again here is unnecessary.    Reported-by: Chuck Lever <chuck.lever@oracle.com>  Fixes: 920b4530fb80 ("NFS: nfs_rename() handle -ERESTARTSYS dentry left behind")  Signed-off-by: Benjamin Coddington <bcodding@redhat.com>  Tested-by: Chuck Lever <chuck.lever@oracle.com>  Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>    * cpufreq: Fix creation of symbolic links to policy directories    The cpufreq core only tries to create symbolic links from CPU  directories in sysfs to policy directories in cpufreq_add_dev(),  either when a given CPU is registered or when the cpufreq driver  is registered, whichever happens first.  That is not sufficient,  however, because cpufreq_add_dev() may be called for an offline CPU  whose policy object has not been created yet and, quite obviously,  the symbolic cannot be added in that case.    Fix that by making cpufreq_online() attempt to add symbolic links to  policy objects for the CPUs in the related_cpus mask of every new  policy object created by it.    The cpufreq_driver_lock locking around the for_each_cpu() loop  in cpufreq_online() is dropped, because it is not necessary and the  code is somewhat simpler without it.  Moreover, failures to create  a symbolic link will not be regarded as hard errors any more and  the CPUs without those links will not be taken offline automatically,  but that should not be problematic in practice.    Reported-and-tested-by: Prashanth Prakash <pprakash@codeaurora.org>  Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>  Cc: 4.9+ <stable@vger.kernel.org> # 4.9+    * drm/radeon: Override fpfn for all VRAM placements in radeon_evict_flags    We were accidentally only overriding the first VRAM placement. For BOs  with the RADEON_GEM_NO_CPU_ACCESS flag set,  radeon_ttm_placement_from_domain creates a second VRAM placment with  fpfn == 0. If VRAM is almost full, the first VRAM placement with  fpfn > 0 may not work, but the second one with fpfn == 0 always will  (the BO's current location trivially satisfies it). Because "moving"  the BO to its current location puts it back on the LRU list, this  results in an infinite loop.    Fixes: 2a85aedd117c ("drm/radeon: Try evicting from CPU accessible to                        inaccessible VRAM first")  Reported-by: Zachary Michaels <zmichaels@oblong.com>  Reported-and-Tested-by: Julien Isorce <jisorce@oblong.com>  Reviewed-by: Christian König <christian.koenig@amd.com>  Reviewed-by: Alex Deucher <alexander.deucher@amd.com>  Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>  Signed-off-by: Alex Deucher <alexander.deucher@amd.com>  Cc: stable@vger.kernel.org    * NFS cleanup struct nfs4_filelayout_segment    Signed-off-by: Andy Adamson <andros@netapp.com>  Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>    * MAINTAINERS: Add Andrew Lunn as co-maintainer of PHYLIB    Andrew has been contributing a lot to PHYLIB over the past months and  his feedback on patches is more than welcome.    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>  Acked-by: Andrew Lunn <andrew@lunn.ch>  Signed-off-by: David S. Miller <davem@davemloft.net>    * scsi: ufs: remove the duplicated checking for supporting clkscaling    There are same conditions for checking whether supporting clkscaling or  not. When ufshcd is supporting clkscaling, active_reqs should be  decreased by one.    [mkp: addressed comment from Bartlomiej]    Signed-off-by: Jaehoon Chung <jh80.chung@samsung.com>  Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>  Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>    * net: ipconfig: fix ic_close_devs() use-after-free    Our chosen ic_dev may be anywhere in our list of ic_devs, and we may  free it before attempting to close others. When we compare d->dev and  ic_dev->dev, we're potentially dereferencing memory returned to the  allocator. This causes KASAN to scream for each subsequent ic_dev we  check.    As there's a 1-1 mapping between ic_devs and netdevs, we can instead  compare d and ic_dev directly, which implicitly handles the !ic_dev  case, and avoids the use-after-free. The ic_dev pointer may be stale,  but we will not dereference it.    Original splat:    [    6.487446] ==================================================================  [    6.494693] BUG: KASAN: use-after-free in ic_close_devs+0xc4/0x154 at addr ffff800367efa708  [    6.503013] Read of size 8 by task swapper/0/1  [    6.507452] CPU: 5 PID: 1 Comm: swapper/0 Not tainted 4.11.0-rc3-00002-gda42158 #8  [    6.514993] Hardware name: AppliedMicro Mustang/Mustang, BIOS 3.05.05-beta_rc Jan 27 2016  [    6.523138] Call trace:  [    6.525590] [<ffff200008094778>] dump_backtrace+0x0/0x570  [    6.530976] [<ffff200008094d08>] show_stack+0x20/0x30  [    6.536017] [<ffff200008bee928>] dump_stack+0x120/0x188  [    6.541231] [<ffff20000856d5e4>] kasan_object_err+0x24/0xa0  [    6.546790] [<ffff20000856d924>] kasan_report_error+0x244/0x738  [    6.552695] [<ffff20000856dfec>] __asan_report_load8_noabort+0x54/0x80  [    6.559204] [<ffff20000aae86ac>] ic_close_devs+0xc4/0x154  [    6.564590] [<ffff20000aaedbac>] ip_auto_config+0x2ed4/0x2f1c  [    6.570321] [<ffff200008084b04>] do_one_initcall+0xcc/0x370  [    6.575882] [<ffff20000aa31de8>] kernel_init_freeable+0x5f8/0x6c4  [    6.581959] [<ffff20000a16df00>] kernel_init+0x18/0x190  [    6.587171] [<ffff200008084710>] ret_from_fork+0x10/0x40  [    6.592468] Object at ffff800367efa700, in cache kmalloc-128 size: 128  [    6.598969] Allocated:  [    6.601324] PID = 1  [    6.603427]  save_stack_trace_tsk+0x0/0x418  [    6.607603]  save_stack_trace+0x20/0x30  [    6.611430]  kasan_kmalloc+0xd8/0x188  [    6.615087]  ip_auto_config+0x8c4/0x2f1c  [    6.619002]  do_one_initcall+0xcc/0x370  [    6.622832]  kernel_init_freeable+0x5f8/0x6c4  [    6.627178]  kernel_init+0x18/0x190  [    6.630660]  ret_from_fork+0x10/0x40  [    6.634223] Freed:  [    6.636233] PID = 1  [    6.638334]  save_stack_trace_tsk+0x0/0x418  [    6.642510]  save_stack_trace+0x20/0x30  [    6.646337]  kasan_slab_free+0x88/0x178  [    6.650167]  kfree+0xb8/0x478  [    6.653131]  ic_close_devs+0x130/0x154  [    6.656875]  ip_auto_config+0x2ed4/0x2f1c  [    6.660875]  do_one_initcall+0xcc/0x370  [    6.664705]  kernel_init_freeable+0x5f8/0x6c4  [    6.669051]  kernel_init+0x18/0x190  [    6.672534]  ret_from_fork+0x10/0x40  [    6.676098] Memory state around the buggy address:  [    6.680880]  ffff800367efa600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  [    6.688078]  ffff800367efa680: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc  [    6.695276] >ffff800367efa700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb  [    6.702469]                       ^  [    6.705952]  ffff800367efa780: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc  [    6.713149]  ffff800367efa800: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb  [    6.720343] ==================================================================  [    6.727536] Disabling lock debugging due to kernel taint    Signed-off-by: Mark Rutland <mark.rutland@arm.com>  Cc: Alexey Kuznetsov <kuznet@ms2.inr.ac.ru>  Cc: David S. Miller <davem@davemloft.net>  Cc: Hideaki YOSHIFUJI <yoshfuji@linux-ipv6.org>  Cc: James Morris <jmorris@namei.org>  Cc: Patrick McHardy <kaber@trash.net>  Cc: netdev@vger.kernel.org  Signed-off-by: David S. Miller <davem@davemloft.net>    * x86/mce: Don't print MCEs when mcelog is active    Since:      cd9c57cad3fe ("x86/MCE: Dump MCE to dmesg if no consumers")    all MCEs are printed even when mcelog is running. Fix the regression to  not print to dmesg when mcelog is running as it is a consumer too.    Signed-off-by: Andi Kleen <ak@linux.intel.com>  [ Massage commit message. ]  Signed-off-by: Borislav Petkov <bp@suse.de>  Cc: Linus Torvalds <torvalds@linux-foundation.org>  Cc: Peter Zijlstra <peterz@infradead.org>  Cc: Thomas Gleixner <tglx@linutronix.de>  Cc: Tony Luck <tony.luck@intel.com>  Cc: linux-edac <linux-edac@vger.kernel.org>  Cc: stable@vger.kernel.org # 4.10..  Fixes: cd9c57cad3fe ("x86/MCE: Dump MCE to dmesg if no consumers")  Link: http://lkml.kernel.org/r/20170327093304.10683-2-bp@alien8.de  Signed-off-by: Ingo Molnar <mingo@kernel.org>    Signed-off-by: Ingo Molnar <mingo@kernel.org>    * clockevents: Fix syntax error in clkevt-of macro    The patch fix syntax errors introduced by commit 0c8893c9095d  ("clockevents: Add a clkevt-of mechanism like clksrc-of").    Fixes: 0c8893c9095d ("clockevents: Add a clkevt-of mechanism like clksrc-of")  Signed-off-by: Alexander Kochetkov <al.kochet@gmail.com>  Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>    * vmlinux.lds: Add __clkevt_of_table to kernel    The code introduced by commit 0c8893c9095d ("clockevents: Add a  clkevt-of mechanism like clksrc-of") refer to __clkevt_of_table  what doesn't exist in the vmlinux. As a result kernel build  failed with error: "clkevt-probe.c:63: undefined reference to  `__clkevt_of_table’"    Fixes: 0c8893c9095d ("clockevents: Add a clkevt-of mechanism like clksrc-of")  Signed-off-by: Alexander Kochetkov <al.kochet@gmail.com>  Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>    * sched/headers: Remove duplicate #include <linux/sched/debug.h> line    Vito Caputo reported that the sched.h split-up series  introduced a duplicate #include <linux/sched/debug.h> line  in drivers/tty/vt/keyboard.c.    Remove it.    Reported-by: Vito Caputo <vcaputo@pengaru.com>  Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>  Cc: Jiri Slaby <jslaby@suse.cz>  Cc: Alan Cox <alan@linux.intel.com>  Cc: Greg Kroah-Hartman <gregkh@suse.de>  Cc: Linus Torvalds <torvalds@linux-foundation.org>  Cc: linux-kernel@vger.kernel.org  Signed-off-by: Ingo Molnar <mingo@kernel.org>    * KVM: pci-assign: do not map smm memory slot pages in vt-d page tables    or VM memory are not put thus leaked in kvm_iommu_unmap_memslots() when  destroy VM.    This is consistent with current vfio implementation.    Signed-off-by: herongguang <herongguang.he@huawei.com>  Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>    * KVM: nVMX: fix nested EPT detection    The nested_ept_enabled flag introduced in commit 7ca29de2136 was not  computed correctly. We are interested only in L1's EPT state, not the  the combined L0+L1 value.    In particular, if L0 uses EPT but L1 does not, nested_ept_enabled must  be false to make sure that PDPSTRs are loaded based on CR3 as usual,  because the special case described in 26.3.2.4 Loading Page-Directory-  Pointer-Table Entries does not apply.    Fixes: 7ca29de21362 ("KVM: nVMX: fix CR3 load if L2 uses PAE paging and EPT")  Cc: qemu-stable@nongnu.org  Reported-by: Wanpeng Li <wanpeng.li@hotmail.com>  Reviewed-by: David Hildenbrand <david@redhat.com>  Signed-off-by: Ladi Prosek <lprosek@redhat.com>  Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>    * KVM: x86: cleanup the page tracking SRCU instance    SRCU uses a delayed work item.  Skip cleaning it up, and  the result is use-after-free in the work item callbacks.    Reported-by: Dmitry Vyukov <dvyukov@google.com>  Suggested-by: Dmitry Vyukov <dvyukov@google.com>  Cc: stable@vger.kernel.org  Fixes: 0eb05bf290cfe8610d9680b49abef37febd1c38a  Reviewed-by: Xiao Guangrong <xiaoguangrong.eric@gmail.com>  Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>    * NFS store nfs4_deviceid in struct nfs4_filelayout_segment    In preparation for moving the filelayout getdeviceinfo call from  filelayout_alloc_lseg called by pnfs_process_layout    Signed-off-by: Andy Adamson <andros@netapp.com>  Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>    * NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes    Fix a filelayout GETDEVICEINFO call hang triggered from the LAYOUTGET  pnfs_layout_process where the GETDEVICEINFO call is waiting for a  session slot, and the LAYOUGET call is waiting for pnfs_layout_process  to complete before freeing the slot GETDEVICEINFO is waiting for..    This occurs in testing against the pynfs pNFS server where the  the on-wire reply highest_slotid and slot id are zero, and the  target high slot id is 8 (negotiated in CREATE_SESSION).    The internal fore channel slot table max_slotid, the maximum allowed  table slotid value, has been reduced via nfs41_set_max_slotid_locked   from 8 to 1.  Thus there is one slot (slotid 0) available for use but  it has not been freed by LAYOUTGET  proir to the GETDEVICEINFO request.    In order to ensure that layoutrecall callbacks are processed in the  correct order, nfs4_proc_layoutget processing needs to be finished  e.g. pnfs_layout_process) before giving up the slot that identifies  the layoutget (see referring_call_exists).    Move the filelayout_check_layout nfs4_find_get_device call outside of  the pnfs_layout_process call tree.    Signed-off-by: Andy Adamson <andros@netapp.com>  Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>    * virtio_pci: fix out of bound access for msix_names    Fedora has received multiple reports of crashes when running  4.11 as a guest    https://bugzilla.redhat.com/show_bug.cgi?id=1430297  https://bugzilla.redhat.com/show_bug.cgi?id=1434462  https://bugzilla.kernel.org/show_bug.cgi?id=194911  https://bugzilla.redhat.com/show_bug.cgi?id=1433899    The crashes are not always consistent but they are generally  some flavor of oops or GPF in virtio related code. Multiple people  have done bisections (Thank you Thorsten Leemhuis and  Richard W.M. Jones) and found this commit to be at fault    07ec51480b5eb1233f8c1b0f5d7a7c8d1247c507 is the first bad commit  commit 07ec51480b5eb1233f8c1b0f5d7a7c8d1247c507  Author: Christoph Hellwig <hch@lst.de>  Date:   Sun Feb 5 18:15:19 2017 +0100        virtio_pci: use shared interrupts for virtqueues    The issue seems to be an out of bounds access to the msix_names  array corrupting kernel memory.    Fixes: 07ec51480b5e ("virtio_pci: use shared interrupts for virtqueues")  Reported-by: Laura Abbott <labbott@redhat.com>  Signed-off-by: Jason Wang <jasowang@redhat.com>  Signed-off-by: Michael S. Tsirkin <mst@redhat.com>  Reviewed-by: Christoph Hellwig <hch@lst.de>  Tested-by: Richard W.M. Jones <rjones@redhat.com>  Tested-by: Thorsten Leemhuis <linux@leemhuis.info>    * virtio_balloon: init 1st buffer in stats vq    When init_vqs runs, virtio_balloon.stats is either uninitialized or  contains stale values. The host updates its state with garbage data  because it has no way of knowing that this is just a marker buffer  used for signaling.    This patch updates the stats before pushing the initial buffer.    Alternative fixes:  * Push an empty buffer in init_vqs. Not easily done with the current    virtio implementation and violates the spec "Driver MUST supply the    same subset of statistics in all buffers submitted to the statsq".  * Push a buffer with invalid tags in init_vqs. Violates the same    spec clause, plus "invalid tag" is not really defined.    Note: the spec says:   When using the legacy interface, the device SHOULD ignore all values in   the first buffer in the statsq supplied by the driver after device   initialization. Note: Historically, drivers supplied an uninitialized   buffer in the first buffer.    Unfortunately QEMU does not seem to implement the recommendation  even for the legacy interface.    Cc: stable@vger.kernel.org  Signed-off-by: Ladi Prosek <lprosek@redhat.com>  Signed-off-by: Michael S. Tsirkin <mst@redhat.com>    * virtio-balloon: use actual number of stats for stats queue buffers    The virtio balloon driver contained a not-so-obvious invariant that  update_balloon_stats has to update exactly VIRTIO_BALLOON_S_NR counters  in order to send valid stats to the host. This commit fixes it by having  update_balloon_stats return the actual number of counters, and its  callers use it when pushing buffers to the stats virtqueue.    Note that it is still out of spec to change the number of counters  at run-time. "Driver MUST supply the same subset of statistics in all  buffers submitted to the statsq."    Suggested-by: Arnd Bergmann <arnd@arndb.de>  Signed-off-by: Ladi Prosek <lprosek@redhat.com>  Signed-off-by: Michael S. Tsirkin <mst@redhat.com>    * virtio_balloon: prevent uninitialized variable use    The latest gcc-7.0.1 snapshot reports a new warning:    virtio/virtio_balloon.c: In function 'update_balloon_stats':  virtio/virtio_balloon.c:258:26: error: 'events[2]' is used uninitialized in this function [-Werror=uninitialized]  virtio/virtio_balloon.c:260:26: error: 'events[3]' is used uninitialized in this function [-Werror=uninitialized]  virtio/virtio_balloon.c:261:56: error: 'events[18]' is used uninitialized in this function [-Werror=uninitialized]  virtio/virtio_balloon.c:262:56: error: 'events[17]' is used uninitialized in this function [-Werror=uninitialized]    This seems absolutely right, so we should add an extra check to  prevent copying uninitialized stack data into the statistics.  >From all I can tell, this has been broken since the statistics code  was originally added in 2.6.34.    Fixes: 9564e138b1f6 ("virtio: Add memory statistics reporting to the balloon driver (V4)")  Signed-off-by: Arnd Bergmann <arnd@arndb.de>  Signed-off-by: Ladi Prosek <lprosek@redhat.com>  Signed-off-by: Michael S. Tsirkin <mst@redhat.com>    * ACPI: ioapic: Clear on-stack resource before using it    The on-stack resource-window 'win' in setup_res() is not  properly initialized. This causes the pointers in the  embedded 'struct resource' to contain stale addresses.    These pointers (in my case the ->child pointer) later get  propagated to the global iomem_resources list, causing a #GP  exception when the list is traversed in  iomem_map_sanity_check().    Fixes: c183619b63ec (x86/irq, ACPI: Implement ACPI driver to support IOAPIC hotplug)  Signed-off-by: Joerg Roedel <jroedel@suse.de>  Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>    * ACPI: Do not create a platform_device for IOAPIC/IOxAPIC    No platform-device is required for IO(x)APICs, so don't even  create them.    [ rjw: This fixes a problem with leaking platform device objects    after IOAPIC/IOxAPIC hot-removal events.]    Signed-off-by: Joerg Roedel <jroedel@suse.de>  Cc: All applicable <stable@vger.kernel.org>  Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>    * ACPI / APEI: Add missing synchronize_rcu() on NOTIFY_SCI removal    When removing a GHES device notified by SCI, list_del_rcu() is used,  ghes_remove() should call synchronize_rcu() before it goes on to call  kfree(ghes), otherwise concurrent RCU readers may still hold this list  entry after it has been freed.    Signed-off-by: James Morse <james.morse@arm.com>  Reviewed-by: "Huang, Ying" <ying.huang@intel.com>  Fixes: 81e88fdc432a (ACPI, APEI, Generic Hardware Error Source POLL/IRQ/NMI notification type support)  Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>    * ACPI: Fix incompatibility with mcount-based function graph tracing    Paul Menzel reported a warning:      WARNING: CPU: 0 PID: 774 at /build/linux-ROBWaj/linux-4.9.13/kernel/trace/trace_functions_graph.c:233 ftrace_return_to_handler+0x1aa/0x1e0    Bad frame pointer: expected f6919d98, received f6919db0      from func acpi_pm_device_sleep_wake return to c43b6f9d    The warning means that function graph tracing is broken for the  acpi_pm_device_sleep_wake() function.  That's because the ACPI Makefile  unconditionally sets the '-Os' gcc flag to optimize for size.  That's an  issue because mcount-based function graph tracing is incompatible with  '-Os' on x86, thanks to the following gcc bug:      https://gcc.gnu.org/bugzilla/show_bug.cgi?id=42109    I have another patch pending which will ensure that mcount-based  function graph tracing is never used with CONFIG_CC_OPTIMIZE_FOR_SIZE on  x86.    But this patch is needed in addition to that one because the ACPI  Makefile overrides that config option for no apparent reason.  It has  had this flag since the beginning of git history, and there's no related  comment, so I don't know why it's there.  As far as I can tell, there's  no reason for it to be there.  The appropriate behavior is for it to  honor CONFIG_CC_OPTIMIZE_FOR_{SIZE,PERFORMANCE} like the rest of the  kernel.    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>  Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>  Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>  Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>  Cc: All applicable <stable@vger.kernel.org>    * sctp: change to save MSG_MORE flag into assoc    David Laight noticed the support for MSG_MORE with datamsg->force_delay  didn't really work as we expected, as the first msg with MSG_MORE set  would always block the following chunks' dequeuing.    This Patch is to rewrite it by saving the MSG_MORE flag into assoc as  David Laight suggested.    asoc->force_delay is used to save MSG_MORE flag before a msg is sent.  All chunks in queue would not be sent out if asoc->force_delay is set  by the msg with MSG_MORE flag, until a new msg without MSG_MORE flag  clears asoc->force_delay.    Note that this change would not affect the flush is generated by other  triggers, like asoc->state != ESTABLISHED, queue size > pmtu etc.    v1->v2:    Not clear asoc->force_delay after sending the msg with MSG_MORE flag.    Fixes: 4ea0c32f5f42 ("sctp: add support for MSG_MORE")  Signed-off-by: Xin Long <lucien.xin@gmail.com>  Acked-by: David Laight <david.laight@aculab.com>  Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * isdn: kcapi: avoid uninitialized data    gcc-7 points out that the AVMB1_ADDCARD ioctl results in an unintialized  value ending up in the cardnr parameter:    drivers/isdn/capi/kcapi.c: In function 'old_capi_manufacturer':  drivers/isdn/capi/kcapi.c:1042:24: error: 'cdef.cardnr' may be used uninitialized in this function [-Werror=maybe-uninitialized]     cparams.cardnr = cdef.cardnr;    This has been broken since before the start of the git history, so  either the value is not used for anything important, or the ioctl  command doesn't get called in practice.    Setting the cardnr to zero avoids the warning and makes sure  we have consistent behavior.    Signed-off-by: Arnd Bergmann <arnd@arndb.de>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: moxa: fix TX overrun memory leak    moxart_mac_start_xmit() doesn't care where tx_tail is, tx_head can  catch and pass tx_tail, which is bad because moxart_tx_finished()  isn't guaranteed to catch up on freeing resources from tx_tail.    Add a check in moxart_mac_start_xmit() stopping the queue at the  end of the circular buffer. Also add a check in moxart_tx_finished()  waking the queue if the buffer has TX_WAKE_THRESHOLD or more  free descriptors.    While we're at it, move spin_lock_irq() to happen before our  descriptor pointer is assigned in moxart_mac_start_xmit().    Addresses https://bugzilla.kernel.org/show_bug.cgi?id=99451    Signed-off-by: Jonas Jensen <jonas.jensen@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net/mlx5: Avoid dereferencing uninitialized pointer    In NETDEV_CHANGEUPPER event the upper_info field is valid  only when linking is true. Otherwise it should be ignored.    Fixes: 7907f23adc18 (net/mlx5: Implement RoCE LAG feature)  Signed-off-by: Talat Batheesh <talatb@mellanox.com>  Reviewed-by: Aviv Heller <avivh@mellanox.com>  Reviewed-by: Moni Shoua <monis@mellanox.com>  Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * svcrdma: set XPT_CONG_CTRL flag for bc xprt    Same change as Kinglong Mee's fix for the TCP backchannel service.    Fixes: 5283b03ee5cd ("nfs/nfsd/sunrpc: enforce transport...")  Signed-off-by: Chuck Lever <chuck.lever@oracle.com>  Signed-off-by: J. Bruce Fields <bfields@redhat.com>    * rocker: fix Wmaybe-uninitialized false-positive    gcc-7 reports a warning that earlier versions did not have:    drivers/net/ethernet/rocker/rocker_ofdpa.c: In function 'ofdpa_port_stp_update':  arch/x86/include/asm/string_32.h:79:22: error: '*((void *)&prev_ctrls+4)' may be used uninitialized in this function [-Werror=maybe-uninitialized]     *((short *)to + 2) = *((short *)from + 2);     ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~  drivers/net/ethernet/rocker/rocker_ofdpa.c:2218:7: note: '*((void *)&prev_ctrls+4)' was declared here    This is clearly a variation of the warning about 'prev_state' that  was shut up using uninitialized_var().    We can slightly simplify the code and get rid of the warning by unconditionally  saving the prev_state and prev_ctrls variables. The inlined memcpy is not  particularly expensive here, as it just has to read five bytes from one or  two cache lines.    Signed-off-by: Arnd Bergmann <arnd@arndb.de>  Signed-off-by: David S. Miller <davem@davemloft.net>    * openvswitch: Fix refcount leak on force commit.    The reference count held for skb needs to be released when the skb's  nfct pointer is cleared regardless of if nf_ct_delete() is called or  not.    Failing to release the skb's reference cound led to deferred conntrack  cleanup spinning forever within nf_conntrack_cleanup_net_list() when  cleaning up a network namespace:       kworker/u16:0-19025 [004] 45981067.173642: sched_switch: kworker/u16:0:19025 [120] R ==> rcu_preempt:7 [120]     kworker/u16:0-19025 [004] 45981067.173651: kernel_stack: <stack trace>  => ___preempt_schedule (ffffffffa001ed36)  => _raw_spin_unlock_bh (ffffffffa0713290)  => nf_ct_iterate_cleanup (ffffffffc00a4454)  => nf_conntrack_cleanup_net_list (ffffffffc00a5e1e)  => nf_conntrack_pernet_exit (ffffffffc00a63dd)  => ops_exit_list.isra.1 (ffffffffa06075f3)  => cleanup_net (ffffffffa0607df0)  => process_one_work (ffffffffa0084c31)  => worker_thread (ffffffffa008592b)  => kthread (ffffffffa008bee2)  => ret_from_fork (ffffffffa071b67c)    Fixes: dd41d33f0b03 ("openvswitch: Add force commit.")  Reported-by: Yang Song <yangsong@vmware.com>  Signed-off-by: Jarno Rajahalme <jarno@ovn.org>  Acked-by: Joe Stringer <joe@ovn.org>  Signed-off-by: David S. Miller <davem@davemloft.net>    * cfg80211: check rdev resume callback only for registered wiphy    We got the following use-after-free KASAN report:     BUG: KASAN: use-after-free in wiphy_resume+0x591/0x5a0 [cfg80211]    at addr ffff8803fc244090   Read of size 8 by task kworker/u16:24/2587   CPU: 6 PID: 2587 Comm: kworker/u16:24 Tainted: G    B 4.9.13-debug+   Hardware name: Dell Inc. XPS 15 9550/0N7TVV, BIOS 1.2.19 12/22/2016   Workqueue: events_unbound async_run_entry_fn    ffff880425d4f9d8 ffffffffaeedb541 ffff88042b80ef00 ffff8803fc244088    ffff880425d4fa00 ffffffffae84d7a1 ffff880425d4fa98 ffff8803fc244080    ffff88042b80ef00 ffff880425d4fa88 ffffffffae84da3a ffffffffc141f7d9   Call Trace:    [<ffffffffaeedb541>] dump_stack+0x85/0xc4    [<ffffffffae84d7a1>] kasan_object_err+0x21/0x70    [<ffffffffae84da3a>] kasan_report_error+0x1fa/0x500    [<ffffffffc141f7d9>] ? cfg80211_bss_age+0x39/0xc0 [cfg80211]    [<ffffffffc141f83a>] ? cfg80211_bss_age+0x9a/0xc0 [cfg80211]    [<ffffffffae48d46d>] ? trace_hardirqs_on+0xd/0x10    [<ffffffffc13fb1c0>] ? wiphy_suspend+0xc70/0xc70 [cfg80211]    [<ffffffffae84def1>] __asan_report_load8_noabort+0x61/0x70    [<ffffffffc13fb100>] ? wiphy_suspend+0xbb0/0xc70 [cfg80211]    [<ffffffffc13fb751>] ? wiphy_resume+0x591/0x5a0 [cfg80211]    [<ffffffffc13fb751>] wiphy_resume+0x591/0x5a0 [cfg80211]    [<ffffffffc13fb1c0>] ? wiphy_suspend+0xc70/0xc70 [cfg80211]    [<ffffffffaf3b206e>] dpm_run_callback+0x6e/0x4f0    [<ffffffffaf3b31b2>] device_resume+0x1c2/0x670    [<ffffffffaf3b367d>] async_resume+0x1d/0x50    [<ffffffffae3ee84e>] async_run_entry_fn+0xfe/0x610    [<ffffffffae3d0666>] process_one_work+0x716/0x1a50    [<ffffffffae3d05c9>] ? process_one_work+0x679/0x1a50    [<ffffffffafdd7b6d>] ? _raw_spin_unlock_irq+0x3d/0x60    [<ffffffffae3cff50>] ? pwq_dec_nr_in_flight+0x2b0/0x2b0    [<ffffffffae3d1a80>] worker_thread+0xe0/0x1460    [<ffffffffae3d19a0>] ? process_one_work+0x1a50/0x1a50    [<ffffffffae3e54c2>] kthread+0x222/0x2e0    [<ffffffffae3e52a0>] ? kthread_park+0x80/0x80    [<ffffffffae3e52a0>] ? kthread_park+0x80/0x80    [<ffffffffae3e52a0>] ? kthread_park+0x80/0x80    [<ffffffffafdd86aa>] ret_from_fork+0x2a/0x40   Object at ffff8803fc244088, in cache kmalloc-1024 size: 1024   Allocated:   PID = 71    save_stack_trace+0x1b/0x20    save_stack+0x46/0xd0    kasan_kmalloc+0xad/0xe0    kasan_slab_alloc+0x12/0x20    __kmalloc_track_caller+0x134/0x360    kmemdup+0x20/0x50    brcmf_cfg80211_attach+0x10b/0x3a90 [brcmfmac]    brcmf_bus_start+0x19a/0x9a0 [brcmfmac]    brcmf_pcie_setup+0x1f1a/0x3680 [brcmfmac]    brcmf_fw_request_nvram_done+0x44c/0x11b0 [brcmfmac]    request_firmware_work_func+0x135/0x280    process_one_work+0x716/0x1a50    worker_thread+0xe0/0x1460    kthread+0x222/0x2e0    ret_from_fork+0x2a/0x40   Freed:   PID = 2568    save_stack_trace+0x1b/0x20    save_stack+0x46/0xd0    kasan_slab_free+0x71/0xb0    kfree+0xe8/0x2e0    brcmf_cfg80211_detach+0x62/0xf0 [brcmfmac]    brcmf_detach+0x14a/0x2b0 [brcmfmac]    brcmf_pcie_remove+0x140/0x5d0 [brcmfmac]    brcmf_pcie_pm_leave_D3+0x198/0x2e0 [brcmfmac]    pci_pm_resume+0x186/0x220    dpm_run_callback+0x6e/0x4f0    device_resume+0x1c2/0x670    async_resume+0x1d/0x50    async_run_entry_fn+0xfe/0x610    process_one_work+0x716/0x1a50    worker_thread+0xe0/0x1460    kthread+0x222/0x2e0    ret_from_fork+0x2a/0x40   Memory state around the buggy address:    ffff8803fc243f80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc    ffff8803fc244000: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc   >ffff8803fc244080: fc fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb                            ^    ffff8803fc244100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb    ffff8803fc244180: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb    What is happening is that brcmf_pcie_resume() detects a device that  is no longer responsive and it decides to unbind resulting in a  wiphy_unregister() and wiphy_free() call. Now the wiphy instance  remains allocated, because PM needs to call wiphy_resume() for it.  However, brcmfmac already does a kfree() for the struct  cfg80211_registered_device::ops field. Change the checks in  wiphy_resume() to only access the struct cfg80211_registered_device::ops  if the wiphy instance is still registered at this time.    Cc: stable@vger.kernel.org # 4.10.x, 4.9.x  Reported-by: Daniel J Blueman <daniel@quora.org>  Reviewed-by: Hante Meuleman <hante.meuleman@broadcom.com>  Reviewed-by: Pieter-Paul Giesberts <pieter-paul.giesberts@broadcom.com>  Reviewed-by: Franky Lin <franky.lin@broadcom.com>  Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>  Signed-off-by: Johannes Berg <johannes.berg@intel.com>    * xhci: plat: Register shutdown for xhci_plat    Shutdown should be called for xhci_plat devices especially for  situations where kexec might be used by stopping DMA  transactions.    Signed-off-by: Adam Wallis <awallis@codeaurora.org>  Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>    * xhci: Set URB actual length for stopped control transfers    A control transfer that stopped at the status stage incorrectly  warned about a "unexpected TRB Type 4", and did not set the  transferred actual_length for the URB.    The URB actual_length for control transfers should contain the  bytes transferred in the data stage.    Bytes of a partially sent setup stage and missing bytes from  status stage should be left out.    Cc: <stable@vger.kernel.org>  Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>    * xhci: Manually give back cancelled URB if we can't queue it for cancel    xhci needs to take care of four scenarios when asked to cancel a URB.    1 URB is not queued or already given back.    usb_hcd_check_unlink_urb() will return an error, we pass the error on    2 We fail to find xhci internal structures from urb private data such as    virtual device and endpoint ring.    Give back URB immediately, can't do anything about internal structures.    3 URB private data has valid pointers to xhci internal data, but host is    not  responding.    give back URB immedately and remove the URB from the endpoint lists.    4 Everyting is working    add URB to cancel list, queue a command to stop the endpoint, after    which the URB can be turned to no-op or skipped, removed from lists,    and given back.    We failed to give back the urb in case 2 where the correct device and  endpoint pointers could not be retrieved from URB private data.    This caused a hang on Dell Inspiron 5558/0VNM2T at resume from suspend  as urb was never returned.    [  245.270505] INFO: task rtsx_usb_ms_1:254 blocked for more than 120 seconds.  [  245.272244]       Tainted: G        W       4.11.0-rc3-ARCH #2  [  245.273983] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.  [  245.275737] rtsx_usb_ms_1   D    0   254      2 0x00000000  [  245.277524] Call Trace:  [  245.279278]  __schedule+0x2d3/0x8a0  [  245.281077]  schedule+0x3d/0x90  [  245.281961]  usb_kill_urb.part.3+0x6c/0xa0 [usbcore]  [  245.282861]  ? wake_atomic_t_function+0x60/0x60  [  245.283760]  usb_kill_urb+0x21/0x30 [usbcore]  [  245.284649]  usb_start_wait_urb+0xe5/0x170 [usbcore]  [  245.285541]  ? try_to_del_timer_sync+0x53/0x80  [  245.286434]  usb_bulk_msg+0xbd/0x160 [usbcore]  [  245.287326]  rtsx_usb_send_cmd+0x63/0x90 [rtsx_usb]    Reported-by: diego.viola@gmail.com  Tested-by: diego.viola@gmail.com  Cc: stable@vger.kernel.org  Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>    * usb: phy: isp1301: Fix build warning when CONFIG_OF is disabled    Commit fd567653bdb9 ("usb: phy: isp1301: Add OF device ID table")  added an OF device ID table, but used the of_match_ptr() macro  that will lead to a build warning if CONFIG_OF symbol is disabled:    drivers/usb/phy//phy-isp1301.c:36:34: warning: ‘isp1301_of_match’ defined but not used [-Wunused-const-variable=]   static const struct of_device_id isp1301_of_match[] = {                                    ^~~~~~~~~~~~~~~~    Fixes: fd567653bdb9 ("usb: phy: isp1301: Add OF device ID table")  Reported-by: Arnd Bergmann <arnd@arndb.de>  Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>    * netfilter: nfnetlink_queue: fix secctx memory leak    We must call security_release_secctx to free the memory returned by  security_secid_to_secctx, otherwise memory may be leaked forever.    Fixes: ef493bd930ae ("netfilter: nfnetlink_queue: add security context information")  Signed-off-by: Liping Zhang <zlpnobody@gmail.com>  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>    * mac80211: unconditionally start new netdev queues with iTXQ support    When internal mac80211 TXQs aren't supported, netdev queues must  always started out started even when driver queues are stopped  while the interface is added. This is necessary because with the  internal TXQ support netdev queues are never stopped and packet  scheduling/dropping is done in mac80211.    Cc: stable@vger.kernel.org # 4.9+  Fixes: 80a83cfc434b1 ("mac80211: skip netdev queue control with software queuing")  Reported-and-tested-by: Sven Eckelmann <sven.eckelmann@openmesh.com>  Signed-off-by: Johannes Berg <johannes.berg@intel.com>    * Btrfs: bring back repair during read    Commit 20a7db8ab3f2 ("btrfs: add dummy callback for readpage_io_failed  and drop checks") made a cleanup around readpage_io_failed_hook, and  it was supposed to keep the original sematics, but it also  unexpectedly disabled repair during read for dup, raid1 and raid10.    This fixes the problem by letting data's inode call the generic  readpage_io_failed callback by returning -EAGAIN from its  readpage_io_failed_hook in order to notify end_bio_extent_readpage to  do the rest.  We don't call it directly because the generic one takes  an offset from end_bio_extent_readpage() to calculate the index in the  checksum array and inode's readpage_io_failed_hook doesn't offer that  offset.    Cc: David Sterba <dsterba@suse.cz>  Signed-off-by: Liu Bo <bo.li.liu@oracle.com>  Reviewed-by: David Sterba <dsterba@suse.com>  [ keep the const function attribute ]  Signed-off-by: David Sterba <dsterba@suse.com>    * btrfs: Change qgroup_meta_rsv to 64bit    Using an int value is causing qg->reserved to become negative and  exclusive -EDQUOT to be reached prematurely.    This affects exclusive qgroups only.    TEST CASE:    DEVICE=/dev/vdb  MOUNTPOINT=/mnt  SUBVOL=$MOUNTPOINT/tmp    umount $SUBVOL  umount $MOUNTPOINT    mkfs.btrfs -f $DEVICE  mount /dev/vdb $MOUNTPOINT  btrfs quota enable $MOUNTPOINT  btrfs subvol create $SUBVOL  umount $MOUNTPOINT  mount /dev/vdb $MOUNTPOINT  mount -o subvol=tmp $DEVICE $SUBVOL  btrfs qgroup limit -e 3G $SUBVOL    btrfs quota rescan /mnt -w    for i in `seq 1 44000`; do    dd if=/dev/zero of=/mnt/tmp/test_$i bs=10k count=1    if [[ $? > 0 ]]; then       btrfs qgroup show -pcref $SUBVOL       exit 1    fi  done    Signed-off-by: Goldwyn Rodrigues <rgoldwyn@suse.com>  [ add reproducer to changelog ]  Signed-off-by: David Sterba <dsterba@suse.com>    * Btrfs: fix an integer overflow check    This isn't super serious because you need CAP_ADMIN to run this code.    I added this integer overflow check last year but apparently I am  rubbish at writing integer overflow checks...  There are two issues.  First, access_ok() works on unsigned long type and not u64 so on 32 bit  systems the access_ok() could be checking a truncated size.  The other  issue is that we should be using a stricter limit so we don't overflow  the kzalloc() setting ctx->clone_roots later in the function after the  access_ok():     alloc_size = sizeof(struct clone_root) * (arg->clone_sources_count + 1);   sctx->clone_roots = kzalloc(alloc_size, GFP_KERNEL | __GFP_NOWARN);    Fixes: f5ecec3ce21f ("btrfs: send: silence an integer overflow warning")  Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>  Reviewed-by: David Sterba <dsterba@suse.com>  [ added comment ]  Signed-off-by: David Sterba <dsterba@suse.com>    * drm/etnaviv: (re-)protect fence allocation with GPU mutex    The fence allocation needs to be protected by the GPU mutex, otherwise  the fence seqnos of concurrent submits might not match the insertion order  of the jobs in the kernel ring. This breaks the assumption that jobs  complete with monotonically increasing fence seqnos.    Fixes: d9853490176c (drm/etnaviv: take GPU lock later in the submit process)  CC: stable@vger.kernel.org #4.9+  Signed-off-by: Lucas Stach <l.stach@pengutronix.de>    * xfrm_user: validate XFRM_MSG_NEWAE XFRMA_REPLAY_ESN_VAL replay_window    When a new xfrm state is created during an XFRM_MSG_NEWSA call we  validate the user supplied replay_esn to ensure that the size is valid  and to ensure that the replay_window size is within the allocated  buffer.  However later it is possible to update this replay_esn via a  XFRM_MSG_NEWAE call.  There we again validate the size of the supplied  buffer matches the existing state and if so inject the contents.  We do  not at this point check that the replay_window is within the allocated  memory.  This leads to out-of-bounds reads and writes triggered by  netlink packets.  This leads to memory corruption and the potential for  priviledge escalation.    We already attempt to validate the incoming replay information in  xfrm_new_ae() via xfrm_replay_verify_len().  This confirms that the user  is not trying to change the size of the replay state buffer which  includes the replay_esn.  It however does not check the replay_window  remains within that buffer.  Add validation of the contained  replay_window.    CVE-2017-7184  Signed-off-by: Andy Whitcroft <apw@canonical.com>  Acked-by: Steffen Klassert <steffen.klassert@secunet.com>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * xfrm_user: validate XFRM_MSG_NEWAE incoming ESN size harder    Kees Cook has pointed out that xfrm_replay_state_esn_len() is subject to  wrapping issues.  To ensure we are correctly ensuring that the two ESN  structures are the same size compare both the overall size as reported  by xfrm_replay_state_esn_len() and the internal length are the same.    CVE-2017-7184  Signed-off-by: Andy Whitcroft <apw@canonical.com>  Acked-by: Steffen Klassert <steffen.klassert@secunet.com>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * c6x/ptrace: Remove useless PTRACE_SETREGSET implementation    gpr_set won't work correctly and can never have been tested, and the  correct behaviour is not clear due to the endianness-dependent task  layout.    So, just remove it.  The core code will now return -EOPNOTSUPPORT when  trying to set NT_PRSTATUS on this architecture until/unless a correct  implementation is supplied.    Signed-off-by: Dave Martin <Dave.Martin@arm.com>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * h8300/ptrace: Fix incorrect register transfer count    regs_set() and regs_get() are vulnerable to an off-by-1 buffer overrun  if CONFIG_CPU_H8S is set, since this adds an extra entry to  register_offset[] but not to user_regs_struct.    So, iterate over user_regs_struct based on its actual size, not based on  the length of register_offset[].    Signed-off-by: Dave Martin <Dave.Martin@arm.com>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * metag/ptrace: Preserve previous registers for short regset write    Ensure that if userspace supplies insufficient data to PTRACE_SETREGSET  to fill all the registers, the thread's old registers are preserved.    Signed-off-by: Dave Martin <Dave.Martin@arm.com>  Acked-by: James Hogan <james.hogan@imgtec.com>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * metag/ptrace: Provide default TXSTATUS for short NT_PRSTATUS    Ensure that if userspace supplies insufficient data to PTRACE_SETREGSET  to fill TXSTATUS, a well-defined default value is used, based on the  task's current value.    Suggested-by: James Hogan <james.hogan@imgtec.com>  Signed-off-by: Dave Martin <Dave.Martin@arm.com>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * metag/ptrace: Reject partial NT_METAG_RPIPE writes    It's not clear what behaviour is sensible when doing partial write of  NT_METAG_RPIPE, so just don't bother.    This patch assumes that userspace will never rely on a partial SETREGSET  in this case, since it's not clear what should happen anyway.    Signed-off-by: Dave Martin <Dave.Martin@arm.com>  Acked-by: James Hogan <james.hogan@imgtec.com>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * mips/ptrace: Preserve previous registers for short regset write    Ensure that if userspace supplies insufficient data to PTRACE_SETREGSET  to fill all the registers, the thread's old registers are preserved.    Signed-off-by: Dave Martin <Dave.Martin@arm.com>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * sparc/ptrace: Preserve previous registers for short regset write    Ensure that if userspace supplies insufficient data to PTRACE_SETREGSET  to fill all the registers, the thread's old registers are preserved.    Signed-off-by: Dave Martin <Dave.Martin@arm.com>  Acked-by: David S. Miller <davem@davemloft.net>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * l2tp: hold tunnel socket when handling control frames in l2tp_ip and l2tp_ip6    The code following l2tp_tunnel_find() expects that a new reference is  held on sk. Either sk_receive_skb() or the discard_put error path will  drop a reference from the tunnel's socket.    This issue exists in both l2tp_ip and l2tp_ip6.    Fixes: a3c18422a4b4 ("l2tp: hold socket before dropping lock in l2tp_ip{, 6}_recv()")  Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>  Signed-off-by: David S. Miller <davem@davemloft.net>    * l2tp: purge socket queues in the .destruct() callback    The Rx path may grab the socket right before pppol2tp_release(), but  nothing guarantees that it will enqueue packets before  skb_queue_purge(). Therefore, the socket can be destroyed without its  queues fully purged.    Fix this by purging queues in pppol2tp_session_destruct() where we're  guaranteed nothing is still referencing the socket.    Fixes: 9e9cb6221aa7 ("l2tp: fix userspace reception on plain L2TP sockets")  Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>  Signed-off-by: David S. Miller <davem@davemloft.net>    * parisc: Fix access fault handling in pa_memcpy()    pa_memcpy() is the major memcpy implementation in the parisc kernel which is  used to do any kind of userspace/kernel memory copies.    Al Viro noticed various bugs in the implementation of pa_mempcy(), most notably  that in case of faults it may report back to have copied more bytes than it  actually did.    Fixing those bugs is quite hard in the C-implementation, because the compiler  is messing around with the registers and we are not guaranteed that specific  variables are always in the same processor registers. This makes proper fault  handling complicated.    This patch implements pa_memcpy() in assembler. That way we have correct fault  handling and adding a 64-bit copy routine was quite easy.    Runtime tested with 32- and 64bit kernels.    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>  Cc: <stable@vger.kernel.org> # v4.9+  Signed-off-by: John David Anglin <dave.anglin@bell.net>  Signed-off-by: Helge Deller <deller@gmx.de>    * parisc: Clean up fixup routines for get_user()/put_user()    Al Viro noticed that userspace accesses via get_user()/put_user() can be  simplified a lot with regard to usage of the exception handling.    This patch implements a fixup routine for get_user() and put_user() in such  that the exception handler will automatically load -EFAULT into the register  %r8 (the error value) in case on a fault on userspace.  Additionally the fixup  routine will zero the target register on fault in case of a get_user() call.  The target register is extracted out of the faulting assembly instruction.    This patch brings a few benefits over the old implementation:  1. Exception handling gets much cleaner, easier and smaller in size.  2. Helper functions like fixup_get_user_skip_1 (all of fixup.S) can be dropped.  3. No need to hardcode %r9 as target register for get_user() any longer. This     helps the compiler register allocator and thus creates less assembler     statements.  4. No dependency on the exception_data contents any longer.  5. Nested faults will be handled cleanly.    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>  Cc: <stable@vger.kernel.org> # v4.9+  Signed-off-by: Helge Deller <deller@gmx.de>    * parisc: Avoid stalled CPU warnings after system shutdown    Commit 73580dac7618 ("parisc: Fix system shutdown halt") introduced an endless  loop for systems which don't provide a software power off function.  But the  soft lockup detector will detect this and report stalled CPUs after some time.  Avoid those unwanted warnings by disabling the soft lockup detector.    Fixes: 73580dac7618 ("parisc: Fix system shutdown halt")  Signed-off-by: Helge Deller <deller@gmx.de>  Cc: stable@vger.kernel.org # 4.9+    * cpuidle: powernv: Pass correct drv->cpumask for registration    drv->cpumask defaults to cpu_possible_mask in __cpuidle_driver_init().  On PowerNV platform cpu_present could be less than cpu_possible in cases  where firmware detects the cpu, but it is not available to the OS.  When  CONFIG_HOTPLUG_CPU=n, such cpus are not hotplugable at runtime and hence  we skip creating cpu_device.    This breaks cpuidle on powernv where register_cpu() is not called for  cpus in cpu_possible_mask that cannot be hot-added at runtime.    Trying cpuidle_register_device() on cpu without cpu_device will cause  crash like this:    cpu 0xf: Vector: 380 (Data SLB Access) at [c000000ff1503490]      pc: c00000000022c8bc: string+0x34/0x60      lr: c00000000022ed78: vsnprintf+0x284/0x42c      sp: c000000ff1503710     msr: 9000000000009033     dar: 6000000060000000    current = 0xc000000ff1480000    paca    = 0xc00000000fe82d00   softe: 0        irq_happened: 0x01      pid   = 1, comm = swapper/8  Linux version 4.11.0-rc2 (sv@sagarika) (gcc version 4.9.4  (Buildroot 2017.02-00004-gc28573e) ) #15 SMP Fri Mar 17 19:32:02 IST 2017  enter ? for help  [link register   ] c00000000022ed78 vsnprintf+0x284/0x42c  [c000000ff1503710] c00000000022ebb8 vsnprintf+0xc4/0x42c (unreliable)  [c000000ff1503800] c00000000022ef40 vscnprintf+0x20/0x44  [c000000ff1503830] c0000000000ab61c vprintk_emit+0x94/0x2cc  [c000000ff15038a0] c0000000000acc9c vprintk_func+0x60/0x74  [c000000ff15038c0] c000000000619694 printk+0x38/0x4c  [c000000ff15038e0] c000000000224950 kobject_get+0x40/0x60  [c000000ff1503950] c00000000022507c kobject_add_internal+0x60/0x2c4  [c000000ff15039e0] c000000000225350 kobject_init_and_add+0x70/0x78  [c000000ff1503a60] c00000000053c288 cpuidle_add_sysfs+0x9c/0xe0  [c000000ff1503ae0] c00000000053aeac cpuidle_register_device+0xd4/0x12c  [c000000ff1503b30] c00000000053b108 cpuidle_register+0x98/0xcc  [c000000ff1503bc0] c00000000085eaf0 powernv_processor_idle_init+0x140/0x1e0  [c000000ff1503c60] c00000000000cd60 do_one_initcall+0xc0/0x15c  [c000000ff1503d20] c000000000833e84 kernel_init_freeable+0x1a0/0x25c  [c000000ff1503dc0] c00000000000d478 kernel_init+0x24/0x12c  [c000000ff1503e30] c00000000000b564 ret_from_kernel_thread+0x5c/0x78    This patch fixes the bug by passing correct cpumask from  powernv-cpuidle driver.    Signed-off-by: Vaidyanathan Srinivasan <svaidy@linux.vnet.ibm.com>  Reviewed-by: Gautham R. Shenoy <ego@linux.vnet.ibm.com>  Acked-by: Michael Ellerman <mpe@ellerman.id.au>  [ rjw: Comment massage ]  Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>    * bnxt_en: Fix NULL pointer dereference in reopen failure path    Net device reset can fail when the h/w or f/w is in a bad state.  Subsequent netdevice open fails in bnxt_hwrm_stat_ctx_alloc().  The cleanup invokes bnxt_hwrm_resource_free() which inturn  calls bnxt_disable_int().  In this routine, the code segment    if (ring->fw_ring_id != INVALID_HW_RING_ID)     BNXT_CP_DB(cpr->cp_doorbell, cpr->cp_raw_cons);    results in NULL pointer dereference as cpr->cp_doorbell is not yet  initialized, and fw_ring_id is zero.    The fix is to initialize cpr fw_ring_id to INVALID_HW_RING_ID before  bnxt_init_chip() is invoked.    Signed-off-by: Sankar Patchineelam <sankar.patchineelam@broadcom.com>  Signed-off-by: Michael Chan <michael.chan@broadcom.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * bnxt_en: Correct the order of arguments to netdev_err() in bnxt_set_tpa()    Signed-off-by: Sankar Patchineelam <sankar.patchineelam@broadcom.com>  Signed-off-by: Michael Chan <michael.chan@broadcom.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * bnxt_en: Fix DMA unmapping of the RX buffers in XDP mode during shutdown.    In bnxt_free_rx_skbs(), which is called to free up all RX buffers during  shutdown, we need to unmap the page if we are running in XDP mode.    Fixes: c61fb99cae51 ("bnxt_en: Add RX page mode support.")  Signed-off-by: Michael Chan <michael.chan@broadcom.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * ezchip: nps_enet: check if napi has been completed    After a new NAPI_STATE_MISSED state was added to NAPI we can get into  this state and in such case we have to reschedule NAPI as some work is  still pending and we have to process it. napi_complete_done() function  returns false if we have to reschedule something (e.g. in case we were  in MISSED state) as current polling have not been completed yet.    nps_enet driver hasn't been verifying the return value of  napi…	Progyan1997	null	null	null	null	null	null	
2017-10-05 08:39:55.0	null	2021-11-11 13:02:43.0	open	[]	12	476	Hyy there 	https://api.github.com/repos/torvalds/linux/issues/476	https://github.com/torvalds/linux/pull/476	Do you still have a mipad ????  If yes please help us  We cannot make shield tablet blobs stable on mipad  We need bootloader sources please help      Sorry for writing here	389abhaysingh	null	null	null	null	null	null	
2017-10-06 12:08:45.0	null	2020-10-02 17:47:45.0	open	[]	1	477	Small correction on method description	https://api.github.com/repos/torvalds/linux/issues/477	https://github.com/torvalds/linux/pull/477		ubbn	null	null	null	null	null	null	
2017-10-14 11:24:03.0	2018-02-27 17:18:13.0	2018-02-27 17:18:13.0	closed	[]	1	478	Update capability.txt	https://api.github.com/repos/torvalds/linux/issues/478	https://github.com/torvalds/linux/pull/478		AlvisVadaliya	null	null	null	null	null	null	
2017-10-17 09:59:15.0	2017-10-17 10:00:23.0	2017-10-17 10:00:23.0	closed	[]	1	479	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/479	https://github.com/torvalds/linux/pull/479	Update upstream	numbqq	null	null	null	null	null	null	
2017-10-22 02:01:50.0	2017-10-22 02:03:44.0	2017-10-22 02:10:20.0	closed	[]	0	480	o teste	https://api.github.com/repos/torvalds/linux/issues/480	https://github.com/torvalds/linux/pull/480		ghost	null	null	null	null	null	null	
2017-10-25 17:14:57.0	null	2020-10-02 17:47:42.0	open	[]	1	481	fixed some typos in SocketCAN documentation	https://api.github.com/repos/torvalds/linux/issues/481	https://github.com/torvalds/linux/pull/481		bdrehmer	null	null	null	null	null	null	
2017-10-25 17:29:44.0	null	2020-10-02 17:47:41.0	open	[]	1	482	xpad.c	https://api.github.com/repos/torvalds/linux/issues/482	https://github.com/torvalds/linux/pull/482	Add ID For Thrustmaster Ferrari 458 SPIDER "XBox One"  lsusb output  ID 044f:b671 ThrustMaster, Inc.	ronlaws86	null	null	null	null	null	null	
2017-10-28 12:23:00.0	null	2018-03-14 06:02:00.0	open	[]	3	483	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/483	https://github.com/torvalds/linux/pull/483	Update upstream	cyberaddicted	null	null	null	null	null	null	
2017-10-29 15:54:14.0	null	2020-10-02 17:47:37.0	open	[]	1	484	fix typos on kernel-hacking docs	https://api.github.com/repos/torvalds/linux/issues/484	https://github.com/torvalds/linux/pull/484	I realise this is not the right way to submit patches. But I'm counting this collaboration for my Hacktoberfest. I'll go through the mailing list as well.	jeanCarloMachado	null	null	null	null	null	null	
2017-10-30 12:53:31.0	null	2020-02-17 20:51:40.0	open	[]	3	485	Typo fixed	https://api.github.com/repos/torvalds/linux/issues/485	https://github.com/torvalds/linux/pull/485	small typo fixed	M1cR0xf7	null	null	null	null	null	null	
2017-11-03 21:17:17.0	null	2021-05-13 12:24:55.0	open	[]	184	486	this code very very a lot fast	https://api.github.com/repos/torvalds/linux/issues/486	https://github.com/torvalds/linux/pull/486	a lot very _**fast**_ for old computer tat kant handl _**quantum physics**_ like my calculator thxtothispull now my linux run in           calculatyr	cthpw103	null	null	null	null	null	null	
2017-11-12 18:17:37.0	null	2018-01-22 07:54:08.0	open	[]	2	487	up (#2)	https://api.github.com/repos/torvalds/linux/issues/487	https://github.com/torvalds/linux/pull/487	* objtool: Fix memory leak in decode_instructions()    When an error occurs before adding an allocated insn to the list, free  it before returning.    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>  Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>  Cc: Linus Torvalds <torvalds@linux-foundation.org>  Cc: Peter Zijlstra <peterz@infradead.org>  Cc: Thomas Gleixner <tglx@linutronix.de>  Link: http://lkml.kernel.org/r/336da800bf6070eae11f4e0a3b9ca64c27658114.1508430423.git.jpoimboe@redhat.com  Signed-off-by: Ingo Molnar <mingo@kernel.org>    * x86/mm: Limit mmap() of /dev/mem to valid physical addresses    Currently, it is possible to mmap() any offset from /dev/mem.  If a  program mmaps() /dev/mem offsets outside of the addressable limits  of a system, the page table can be corrupted by setting reserved bits.    For example if you mmap() offset 0x0001000000000000 of /dev/mem on an  x86_64 system with a 48-bit bus, the page fault handler will be called  with error_code set to RSVD.  The kernel then crashes with a page table  corruption error.    This change prevents this page table corruption on x86 by refusing  to mmap offsets higher than the highest valid address in the system.    Signed-off-by: Craig Bergstrom <craigb@google.com>  Cc: Andrew Morton <akpm@linux-foundation.org>  Cc: Andy Lutomirski <luto@kernel.org>  Cc: Borislav Petkov <bp@alien8.de>  Cc: Brian Gerst <brgerst@gmail.com>  Cc: Denys Vlasenko <dvlasenk@redhat.com>  Cc: H. Peter Anvin <hpa@zytor.com>  Cc: Josh Poimboeuf <jpoimboe@redhat.com>  Cc: Linus Torvalds <torvalds@linux-foundation.org>  Cc: Luis R. Rodriguez <mcgrof@suse.com>  Cc: Peter Zijlstra <peterz@infradead.org>  Cc: Thomas Gleixner <tglx@linutronix.de>  Cc: Toshi Kani <toshi.kani@hp.com>  Cc: dsafonov@virtuozzo.com  Cc: kirill.shutemov@linux.intel.com  Cc: mhocko@suse.com  Cc: oleg@redhat.com  Link: http://lkml.kernel.org/r/20171019192856.39672-1-craigb@google.com  Signed-off-by: Ingo Molnar <mingo@kernel.org>    * ALSA: hda/realtek - Add support for ALC236/ALC3204    Add support for ALC236/ALC3204.  Add headset mode support for ALC236/ALC3204.    Signed-off-by: Kailang Yang <kailang@realtek.com>  Cc: <stable@vger.kernel.org>  Signed-off-by: Takashi Iwai <tiwai@suse.de>    * mmc: tmio: fix swiotlb buffer is full    Since the commit de3ee99b097d ("mmc: Delete bounce buffer handling")  deletes the bounce buffer handling, a request data size will be referred  to max_{req,seg}_size instead of MMC_QUEUE_BOUNCESZ (64k bytes).    In other hand, renesas_sdhi_internal_dmac.c will set very big value of  max_{req,seg}_size because the max_blk_count is set to 0xffffffff.  And then, "swiotlb buffer is full" happens because swiotlb can handle  a memory size up to 256k bytes only (IO_TLB_SEGSIZE = 128 and  IO_TLB_SHIFT = 11).    So, as a workaround, this patch avoids the issue by setting  the max_{req,seg}_size up to 256k bytes if swiotlb is running.    Reported-by: Dirk Behme <dirk.behme@de.bosch.com>  Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>  Acked-by: Wolfram Sang <wsa+renesas@sang-engineering.com>  Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>  Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>    * mmc: renesas_sdhi: fix kernel panic in _internal_dmac.c    Since this driver checks if the return value of dma_map_sg() is minus  or not and keeps to enable the DMAC, it may cause kernel panic when  the dma_map_sg() returns 0. So, this patch fixes the issue.    Reported-by: Dirk Behme <dirk.behme@de.bosch.com>  Fixes: 2a68ea7896e3 ("mmc: renesas-sdhi: add support for R-Car Gen3 SDHI DMAC")  Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>  Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>  Acked-by: Wolfram Sang <wsa+renesas@sang-engineering.com>  Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>    * binder: call poll_wait() unconditionally.    Because we're not guaranteed that subsequent calls  to poll() will have a poll_table_struct parameter  with _qproc set. When _qproc is not set, poll_wait()  is a noop, and we won't be woken up correctly.    Signed-off-by: Martijn Coenen <maco@android.com>  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>    * clockevents/drivers/cs5535: Improve resilience to spurious interrupts    The interrupt handler mfgpt_tick() is not robust versus spurious interrupts  which happen before the clock event device is registered and fully  initialized.    The reason is that the safe guard against spurious interrupts solely checks  for the clockevents shutdown state, but lacks a check for detached  state. If the interrupt hits while the device is in detached state it  passes the safe guard and dereferences the event handler call back which is  NULL.    Add the missing state check.    Fixes: 8f9327cbb6e8 ("clockevents/drivers/cs5535: Migrate to new 'set-state' interface")  Suggested-by: Thomas Gleixner <tglx@linutronix.de>  Signed-off-by: David Kozub <zub@linux.fjfi.cvut.cz>  Signed-off-by: Thomas Gleixner <tglx@linutronix.de>  Cc: Daniel Lezcano <daniel.lezcano@linaro.org>  Cc: stable@vger.kernel.org  Link: https://lkml.kernel.org/r/20171020093103.3317F6004D@linux.fjfi.cvut.cz    * sctp: add the missing sock_owned_by_user check in sctp_icmp_redirect    Now sctp processes icmp redirect packet in sctp_icmp_redirect where  it calls sctp_transport_dst_check in which tp->dst can be released.    The problem is before calling sctp_transport_dst_check, it doesn't  check sock_owned_by_user, which means tp->dst could be freed while  a process is accessing it with owning the socket.    An use-after-free issue could be triggered by this.    This patch is to fix it by checking sock_owned_by_user before calling  sctp_transport_dst_check in sctp_icmp_redirect, so that it would not  release tp->dst if users still hold sock lock.    Besides, the same issue fixed in commit 45caeaa5ac0b ("dccp/tcp: fix  routing redirect race") on sctp also needs this check.    Fixes: 55be7a9c6074 ("ipv4: Add redirect support to all protocol icmp error handlers")  Reported-by: Eric Dumazet <edumazet@google.com>  Signed-off-by: Xin Long <lucien.xin@gmail.com>  Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>  Acked-by: Neil Horman <nhorman@tuxdriver.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * bpf: enforce TCP only support for sockmap    Only TCP sockets have been tested and at the moment the state change  callback only handles TCP sockets. This adds a check to ensure that  sockets actually being added are TCP sockets.    For net-next we can consider UDP support.    Signed-off-by: John Fastabend <john.fastabend@gmail.com>  Acked-by: Daniel Borkmann <daniel@iogearbox.net>  Acked-by: Alexei Starovoitov <ast@kernel.org>  Signed-off-by: David S. Miller <davem@davemloft.net>    * bpf: avoid preempt enable/disable in sockmap using tcp_skb_cb region    SK_SKB BPF programs are run from the socket/tcp context but early in  the stack before much of the TCP metadata is needed in tcp_skb_cb. So  we can use some unused fields to place BPF metadata needed for SK_SKB  programs when implementing the redirect function.    This allows us to drop the preempt disable logic. It does however  require an API change so sk_redirect_map() has been updated to  additionally provide ctx_ptr to skb. Note, we do however continue to  disable/enable preemption around actual BPF program running to account  for map updates.    Signed-off-by: John Fastabend <john.fastabend@gmail.com>  Acked-by: Daniel Borkmann <daniel@iogearbox.net>  Acked-by: Alexei Starovoitov <ast@kernel.org>  Signed-off-by: David S. Miller <davem@davemloft.net>    * bpf: remove mark access for SK_SKB program types    The skb->mark field is a union with reserved_tailroom which is used  in the TCP code paths from stream memory allocation. Allowing SK_SKB  programs to set this field creates a conflict with future code  optimizations, such as "gifting" the skb to the egress path instead  of creating a new skb and doing a memcpy.    Because we do not have a released version of SK_SKB yet lets just  remove it for now. A more appropriate scratch pad to use at the  socket layer is dev_scratch, but lets add that in future kernels  when needed.    Signed-off-by: John Fastabend <john.fastabend@gmail.com>  Acked-by: Daniel Borkmann <daniel@iogearbox.net>  Acked-by: Alexei Starovoitov <ast@kernel.org>  Signed-off-by: David S. Miller <davem@davemloft.net>    * bpf: require CAP_NET_ADMIN when using sockmap maps    Restrict sockmap to CAP_NET_ADMIN.    Signed-off-by: John Fastabend <john.fastabend@gmail.com>  Acked-by: Daniel Borkmann <daniel@iogearbox.net>  Acked-by: Alexei Starovoitov <ast@kernel.org>  Signed-off-by: David S. Miller <davem@davemloft.net>    * bpf: require CAP_NET_ADMIN when using devmap    Devmap is used with XDP which requires CAP_NET_ADMIN so lets also  make CAP_NET_ADMIN required to use the map.    Signed-off-by: John Fastabend <john.fastabend@gmail.com>  Acked-by: Daniel Borkmann <daniel@iogearbox.net>  Acked-by: Alexei Starovoitov <ast@kernel.org>  Signed-off-by: David S. Miller <davem@davemloft.net>    * vmbus: hvsock: add proper sync for vmbus_hvsock_device_unregister()    Without the patch, vmbus_hvsock_device_unregister() can destroy the device  prematurely when close() is called, and can cause NULl dereferencing or  potential data loss (the last portion of the data stream may be dropped  prematurely).    Signed-off-by: Dexuan Cui <decui@microsoft.com>  Cc: Haiyang Zhang <haiyangz@microsoft.com>  Cc: Stephen Hemminger <sthemmin@microsoft.com>  Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>    * waitid(): Avoid unbalanced user_access_end() on access_ok() error    As pointed out by Linus and David, the earlier waitid() fix resulted in  a (currently harmless) unbalanced user_access_end() call.  This fixes it  to just directly return EFAULT on access_ok() failure.    Fixes: 96ca579a1ecc ("waitid(): Add missing access_ok() checks")  Acked-by: David Daney <david.daney@cavium.com>  Cc: Al Viro <viro@zeniv.linux.org.uk>  Signed-off-by: Kees Cook <keescook@chromium.org>  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>    * tcp/dccp: fix ireq->opt races    syzkaller found another bug in DCCP/TCP stacks [1]    For the reasons explained in commit ce1050089c96 ("tcp/dccp: fix  ireq->pktopts race"), we need to make sure we do not access  ireq->opt unless we own the request sock.    Note the opt field is renamed to ireq_opt to ease grep games.    [1]  BUG: KASAN: use-after-free in ip_queue_xmit+0x1687/0x18e0 net/ipv4/ip_output.c:474  Read of size 1 at addr ffff8801c951039c by task syz-executor5/3295    CPU: 1 PID: 3295 Comm: syz-executor5 Not tainted 4.14.0-rc4+ #80  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011  Call Trace:   __dump_stack lib/dump_stack.c:16 [inline]   dump_stack+0x194/0x257 lib/dump_stack.c:52   print_address_description+0x73/0x250 mm/kasan/report.c:252   kasan_report_error mm/kasan/report.c:351 [inline]   kasan_report+0x25b/0x340 mm/kasan/report.c:409   __asan_report_load1_noabort+0x14/0x20 mm/kasan/report.c:427   ip_queue_xmit+0x1687/0x18e0 net/ipv4/ip_output.c:474   tcp_transmit_skb+0x1ab7/0x3840 net/ipv4/tcp_output.c:1135   tcp_send_ack.part.37+0x3bb/0x650 net/ipv4/tcp_output.c:3587   tcp_send_ack+0x49/0x60 net/ipv4/tcp_output.c:3557   __tcp_ack_snd_check+0x2c6/0x4b0 net/ipv4/tcp_input.c:5072   tcp_ack_snd_check net/ipv4/tcp_input.c:5085 [inline]   tcp_rcv_state_process+0x2eff/0x4850 net/ipv4/tcp_input.c:6071   tcp_child_process+0x342/0x990 net/ipv4/tcp_minisocks.c:816   tcp_v4_rcv+0x1827/0x2f80 net/ipv4/tcp_ipv4.c:1682   ip_local_deliver_finish+0x2e2/0xba0 net/ipv4/ip_input.c:216   NF_HOOK include/linux/netfilter.h:249 [inline]   ip_local_deliver+0x1ce/0x6e0 net/ipv4/ip_input.c:257   dst_input include/net/dst.h:464 [inline]   ip_rcv_finish+0x887/0x19a0 net/ipv4/ip_input.c:397   NF_HOOK include/linux/netfilter.h:249 [inline]   ip_rcv+0xc3f/0x1820 net/ipv4/ip_input.c:493   __netif_receive_skb_core+0x1a3e/0x34b0 net/core/dev.c:4476   __netif_receive_skb+0x2c/0x1b0 net/core/dev.c:4514   netif_receive_skb_internal+0x10b/0x670 net/core/dev.c:4587   netif_receive_skb+0xae/0x390 net/core/dev.c:4611   tun_rx_batched.isra.50+0x5ed/0x860 drivers/net/tun.c:1372   tun_get_user+0x249c/0x36d0 drivers/net/tun.c:1766   tun_chr_write_iter+0xbf/0x160 drivers/net/tun.c:1792   call_write_iter include/linux/fs.h:1770 [inline]   new_sync_write fs/read_write.c:468 [inline]   __vfs_write+0x68a/0x970 fs/read_write.c:481   vfs_write+0x18f/0x510 fs/read_write.c:543   SYSC_write fs/read_write.c:588 [inline]   SyS_write+0xef/0x220 fs/read_write.c:580   entry_SYSCALL_64_fastpath+0x1f/0xbe  RIP: 0033:0x40c341  RSP: 002b:00007f469523ec10 EFLAGS: 00000293 ORIG_RAX: 0000000000000001  RAX: ffffffffffffffda RBX: 0000000000718000 RCX: 000000000040c341  RDX: 0000000000000037 RSI: 0000000020004000 RDI: 0000000000000015  RBP: 0000000000000086 R08: 0000000000000000 R09: 0000000000000000  R10: 00000000000f4240 R11: 0000000000000293 R12: 00000000004b7fd1  R13: 00000000ffffffff R14: 0000000020000000 R15: 0000000000025000    Allocated by task 3295:   save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59   save_stack+0x43/0xd0 mm/kasan/kasan.c:447   set_track mm/kasan/kasan.c:459 [inline]   kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:551   __do_kmalloc mm/slab.c:3725 [inline]   __kmalloc+0x162/0x760 mm/slab.c:3734   kmalloc include/linux/slab.h:498 [inline]   tcp_v4_save_options include/net/tcp.h:1962 [inline]   tcp_v4_init_req+0x2d3/0x3e0 net/ipv4/tcp_ipv4.c:1271   tcp_conn_request+0xf6d/0x3410 net/ipv4/tcp_input.c:6283   tcp_v4_conn_request+0x157/0x210 net/ipv4/tcp_ipv4.c:1313   tcp_rcv_state_process+0x8ea/0x4850 net/ipv4/tcp_input.c:5857   tcp_v4_do_rcv+0x55c/0x7d0 net/ipv4/tcp_ipv4.c:1482   tcp_v4_rcv+0x2d10/0x2f80 net/ipv4/tcp_ipv4.c:1711   ip_local_deliver_finish+0x2e2/0xba0 net/ipv4/ip_input.c:216   NF_HOOK include/linux/netfilter.h:249 [inline]   ip_local_deliver+0x1ce/0x6e0 net/ipv4/ip_input.c:257   dst_input include/net/dst.h:464 [inline]   ip_rcv_finish+0x887/0x19a0 net/ipv4/ip_input.c:397   NF_HOOK include/linux/netfilter.h:249 [inline]   ip_rcv+0xc3f/0x1820 net/ipv4/ip_input.c:493   __netif_receive_skb_core+0x1a3e/0x34b0 net/core/dev.c:4476   __netif_receive_skb+0x2c/0x1b0 net/core/dev.c:4514   netif_receive_skb_internal+0x10b/0x670 net/core/dev.c:4587   netif_receive_skb+0xae/0x390 net/core/dev.c:4611   tun_rx_batched.isra.50+0x5ed/0x860 drivers/net/tun.c:1372   tun_get_user+0x249c/0x36d0 drivers/net/tun.c:1766   tun_chr_write_iter+0xbf/0x160 drivers/net/tun.c:1792   call_write_iter include/linux/fs.h:1770 [inline]   new_sync_write fs/read_write.c:468 [inline]   __vfs_write+0x68a/0x970 fs/read_write.c:481   vfs_write+0x18f/0x510 fs/read_write.c:543   SYSC_write fs/read_write.c:588 [inline]   SyS_write+0xef/0x220 fs/read_write.c:580   entry_SYSCALL_64_fastpath+0x1f/0xbe    Freed by task 3306:   save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59   save_stack+0x43/0xd0 mm/kasan/kasan.c:447   set_track mm/kasan/kasan.c:459 [inline]   kasan_slab_free+0x71/0xc0 mm/kasan/kasan.c:524   __cache_free mm/slab.c:3503 [inline]   kfree+0xca/0x250 mm/slab.c:3820   inet_sock_destruct+0x59d/0x950 net/ipv4/af_inet.c:157   __sk_destruct+0xfd/0x910 net/core/sock.c:1560   sk_destruct+0x47/0x80 net/core/sock.c:1595   __sk_free+0x57/0x230 net/core/sock.c:1603   sk_free+0x2a/0x40 net/core/sock.c:1614   sock_put include/net/sock.h:1652 [inline]   inet_csk_complete_hashdance+0xd5/0xf0 net/ipv4/inet_connection_sock.c:959   tcp_check_req+0xf4d/0x1620 net/ipv4/tcp_minisocks.c:765   tcp_v4_rcv+0x17f6/0x2f80 net/ipv4/tcp_ipv4.c:1675   ip_local_deliver_finish+0x2e2/0xba0 net/ipv4/ip_input.c:216   NF_HOOK include/linux/netfilter.h:249 [inline]   ip_local_deliver+0x1ce/0x6e0 net/ipv4/ip_input.c:257   dst_input include/net/dst.h:464 [inline]   ip_rcv_finish+0x887/0x19a0 net/ipv4/ip_input.c:397   NF_HOOK include/linux/netfilter.h:249 [inline]   ip_rcv+0xc3f/0x1820 net/ipv4/ip_input.c:493   __netif_receive_skb_core+0x1a3e/0x34b0 net/core/dev.c:4476   __netif_receive_skb+0x2c/0x1b0 net/core/dev.c:4514   netif_receive_skb_internal+0x10b/0x670 net/core/dev.c:4587   netif_receive_skb+0xae/0x390 net/core/dev.c:4611   tun_rx_batched.isra.50+0x5ed/0x860 drivers/net/tun.c:1372   tun_get_user+0x249c/0x36d0 drivers/net/tun.c:1766   tun_chr_write_iter+0xbf/0x160 drivers/net/tun.c:1792   call_write_iter include/linux/fs.h:1770 [inline]   new_sync_write fs/read_write.c:468 [inline]   __vfs_write+0x68a/0x970 fs/read_write.c:481   vfs_write+0x18f/0x510 fs/read_write.c:543   SYSC_write fs/read_write.c:588 [inline]   SyS_write+0xef/0x220 fs/read_write.c:580   entry_SYSCALL_64_fastpath+0x1f/0xbe    Fixes: e994b2f0fb92 ("tcp: do not lock listener to process SYN packets")  Fixes: 079096f103fa ("tcp/dccp: install syn_recv requests into ehash table")  Signed-off-by: Eric Dumazet <edumazet@google.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * packet: avoid panic in packet_getsockopt()    syzkaller got crashes in packet_getsockopt() processing  PACKET_ROLLOVER_STATS command while another thread was managing  to change po->rollover    Using RCU will fix this bug. We might later add proper RCU annotations  for sparse sake.    In v2: I replaced kfree(rollover) in fanout_add() to kfree_rcu()  variant, as spotted by John.    Fixes: a9b6391814d5 ("packet: rollover statistics")  Signed-off-by: Eric Dumazet <edumazet@google.com>  Cc: Willem de Bruijn <willemb@google.com>  Cc: John Sperbeck <jsperbeck@google.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net/ncsi: Fix AEN HNCDSC packet length    Correct the value of the HNCDSC AEN packet.  Fixes: 7a82ecf4cfb85 "net/ncsi: NCSI AEN packet handler"    Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net/ncsi: Stop monitor if channel times out or is inactive    ncsi_channel_monitor() misses stopping the channel monitor in several  places that it should, causing a WARN_ON_ONCE() to trigger when the  monitor is re-started later, eg:    [  459.040000] WARNING: CPU: 0 PID: 1093 at net/ncsi/ncsi-manage.c:269 ncsi_start_channel_monitor+0x7c/0x90  [  459.040000] CPU: 0 PID: 1093 Comm: kworker/0:3 Not tainted 4.10.17-gaca2fdd #140  [  459.040000] Hardware name: ASpeed SoC  [  459.040000] Workqueue: events ncsi_dev_work  [  459.040000] [<80010094>] (unwind_backtrace) from [<8000d950>] (show_stack+0x20/0x24)  [  459.040000] [<8000d950>] (show_stack) from [<801dbf70>] (dump_stack+0x20/0x28)  [  459.040000] [<801dbf70>] (dump_stack) from [<80018d7c>] (__warn+0xe0/0x108)  [  459.040000] [<80018d7c>] (__warn) from [<80018e70>] (warn_slowpath_null+0x30/0x38)  [  459.040000] [<80018e70>] (warn_slowpath_null) from [<803f6a08>] (ncsi_start_channel_monitor+0x7c/0x90)  [  459.040000] [<803f6a08>] (ncsi_start_channel_monitor) from [<803f7664>] (ncsi_configure_channel+0xdc/0x5fc)  [  459.040000] [<803f7664>] (ncsi_configure_channel) from [<803f8160>] (ncsi_dev_work+0xac/0x474)  [  459.040000] [<803f8160>] (ncsi_dev_work) from [<8002d244>] (process_one_work+0x1e0/0x450)  [  459.040000] [<8002d244>] (process_one_work) from [<8002d510>] (worker_thread+0x5c/0x570)  [  459.040000] [<8002d510>] (worker_thread) from [<80033614>] (kthread+0x124/0x164)  [  459.040000] [<80033614>] (kthread) from [<8000a5e8>] (ret_from_fork+0x14/0x2c)    This also updates the monitor instead of just returning if  ncsi_xmit_cmd() fails to send the get-link-status command so that the  monitor properly times out.    Fixes: e6f44ed6d04d3 "net/ncsi: Package and channel management"    Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net/ncsi: Disable HWA mode when no channels are found    When there are no NCSI channels probed, HWA (Hardware Arbitration)  mode is enabled. It's not correct because HWA depends on the fact:  NCSI channels exist and all of them support HWA mode. This disables  HWA when no channels are probed.    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>  Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net/ncsi: Enforce failover on link monitor timeout    The NCSI channel has been configured to provide service if its link  monitor timer is enabled, regardless of its state (inactive or active).  So the timeout event on the link monitor indicates the out-of-service  on that channel, for which a failover is needed.    This sets NCSI_DEV_RESHUFFLE flag to enforce failover on link monitor  timeout, regardless the channel's original state (inactive or active).  Also, the link is put into "down" state to give the failing channel  lowest priority when selecting for the active channel. The state of  failing channel should be set to active in order for deinitialization  and failover to be done.    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>  Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net/ncsi: Fix length of GVI response packet    The length of GVI (GetVersionInfo) response packet should be 40 instead  of 36. This issue was found from /sys/kernel/debug/ncsi/eth0/stats.     # ethtool --ncsi eth0 swstats       :   RESPONSE     OK       TIMEOUT  ERROR   =======================================   GVI          0        0        2    With this applied, no error reported on GVI response packets:     # ethtool --ncsi eth0 swstats       :   RESPONSE     OK       TIMEOUT  ERROR   =======================================   GVI          2        0        0    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>  Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * hv_sock: add locking in the open/close/release code paths    Without the patch, when hvs_open_connection() hasn't completely established  a connection (e.g. it has changed sk->sk_state to SS_CONNECTED, but hasn't  inserted the sock into the connected queue), vsock_stream_connect() may see  the sk_state change and return the connection to the userspace, and next  when the userspace closes the connection quickly, hvs_release() may not see  the connection in the connected queue; finally hvs_open_connection()  inserts the connection into the queue, but we won't be able to purge the  connection for ever.    Signed-off-by: Dexuan Cui <decui@microsoft.com>  Cc: K. Y. Srinivasan <kys@microsoft.com>  Cc: Haiyang Zhang <haiyangz@microsoft.com>  Cc: Stephen Hemminger <sthemmin@microsoft.com>  Cc: Vitaly Kuznetsov <vkuznets@redhat.com>  Cc: Cathy Avery <cavery@redhat.com>  Cc: Rolf Neugebauer <rolf.neugebauer@docker.com>  Cc: Marcelo Cerri <marcelo.cerri@canonical.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * geneve: Fix function matching VNI and tunnel ID on big-endian    On big-endian machines, functions converting between tunnel ID  and VNI use the three LSBs of tunnel ID storage to map VNI.    The comparison function eq_tun_id_and_vni(), on the other hand,  attempted to map the VNI from the three MSBs. Fix it by using  the same check implemented on LE, which maps VNI from the three  LSBs of tunnel ID.    Fixes: 2e0b26e10352 ("geneve: Optimize geneve device lookup.")  Signed-off-by: Stefano Brivio <sbrivio@redhat.com>  Reviewed-by: Jakub Sitnicki <jkbs@redhat.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * udp: make some messages more descriptive    In the UDP code there are two leftover error messages with very few meaning.  Replace them with a more descriptive error message as some users  reported them as "strange network error".    Signed-off-by: Matteo Croce <mcroce@redhat.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * android: binder: Don't get mm from task    Use binder_alloc struct's mm_struct rather than getting  a reference to the mm struct through get_task_mm to  avoid a potential deadlock between lru lock, task lock and  dentry lock, since a thread can be holding the task lock  and the dentry lock while trying to acquire the lru lock.    Acked-by: Arve Hjønnevåg <arve@android.com>  Signed-off-by: Sherry Yang <sherryy@android.com>  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>    * android: binder: Fix null ptr dereference in debug msg    Don't access next->data in kernel debug message when the  next buffer is null.    Acked-by: Arve Hjønnevåg <arve@android.com>  Signed-off-by: Sherry Yang <sherryy@android.com>  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>    * net: aquantia: Reset nic statistics on interface up/down    Internal statistics system on chip never gets reset until hardware  reboot. This is quite inconvenient in terms of ethtool statistics usage.    This patch implements incremental statistics update inside of  service callback.    Upon nic initialization, first request is done to fetch  initial stat data, current collected stat data gets cleared.  Internal statistics mailbox readout is improved to save space and  increase readability    Signed-off-by: Pavel Belous <pavel.belous@aquantia.com>  Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: aquantia: Add queue restarts stats counter    Queue stat strings are cleaned up, duplicate stat name strings removed,  queue restarts counter added    Signed-off-by: Pavel Belous <pavel.belous@aquantia.com>  Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: aquantia: Fixed transient link up/down/up notification    When doing ifconfig down/up, driver did not reported carrier_off neither  in nic_stop nor in nic_start. That caused link to be visible as "up"  during couple of seconds immediately after "ifconfig up".    Signed-off-by: Pavel Belous <pavel.belous@aquantia.com>  Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: aquantia: Limit number of MSIX irqs to the number of cpus    There is no much practical use from having MSIX vectors more that number  of cpus, thus cap this first with preconfigured limit, then with number  of cpus online.    Signed-off-by: Pavel Belous <pavel.belous@aquantia.com>  Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: aquantia: mmio unmap was not performed on driver removal    That may lead to mmio resource leakage.    Signed-off-by: Pavel Belous <pavel.belous@aquantia.com>  Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: aquantia: Enable coalescing management via ethtool interface    Aquantia NIC allows both TX and RX interrupt throttle rate (ITR)  management, but this was used in a very limited way via predefined  values. This patch allows to setup ITR default values via module  command line arguments and via standard ethtool coalescing settings.    Signed-off-by: Pavel Belous <pavel.belous@aquantia.com>  Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: aquantia: Bad udp rate on default interrupt coalescing    Default Tx rates cause very long ISR delays on Tx.  0xff is 510us delay, giving only ~ 2000 interrupts per seconds for  Tx rings cleanup. With these settings udp tx rate was never higher than  ~800Mbps on a single stream. Changing min delay to 0xF makes it  way better with ~6Gbps    TCP stream performance is almost unaffected by this change, since LSO  optimizations play important role.    CPU load is affected insignificantly by this change.    Signed-off-by: Pavel Belous <pavel.belous@aquantia.com>  Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * cpu/hotplug: Reset node state after operation    The recent rework of the cpu hotplug internals changed the usage of the per  cpu state->node field, but missed to clean it up after usage.    So subsequent hotplug operations use the stale pointer from a previous  operation and hand it into the callback functions. The callbacks then  dereference a pointer which either belongs to a different facility or  points to freed and potentially reused memory. In either case data  corruption and crashes are the obvious consequence.    Reset the node and the last pointers in the per cpu state to NULL after the  operation which set them has completed.    Fixes: 96abb968549c ("smp/hotplug: Allow external multi-instance rollback")  Reported-by: Tvrtko Ursulin <tursulin@ursulin.net>  Signed-off-by: Thomas Gleixner <tglx@linutronix.de>  Cc: Peter Zijlstra <peterz@infradead.org>  Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>  Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>  Cc: "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>  Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1710211606130.3213@nanos    * hwmon: (da9052) Increase sample rate when using TSI    The TSI channel, which is usually used for touchscreen support, but can  be used as 4 general purpose ADCs. When used as a touchscreen interface  the touchscreen driver switches the device into 1ms sampling mode (rather  than the default 10ms economy mode) as recommended by the manufacturer.  When using the TSI channels as a general purpose ADC we are currently not  doing this and testing suggests that this can result in ADC timeouts:    [ 5827.198289] da9052 spi2.0: timeout waiting for ADC conversion interrupt  [ 5827.728293] da9052 spi2.0: timeout waiting for ADC conversion interrupt  [ 5993.808335] da9052 spi2.0: timeout waiting for ADC conversion interrupt  [ 5994.328441] da9052 spi2.0: timeout waiting for ADC conversion interrupt  [ 5994.848291] da9052 spi2.0: timeout waiting for ADC conversion interrupt    Switching to the 1ms timing resolves this issue.    Fixes: 4f16cab19a3d5 ("hwmon: da9052: Add support for TSI channel")  Signed-off-by: Martyn Welch <martyn.welch@collabora.co.uk>  Acked-by: Steve Twiss <stwiss.opensource@diasemi.com>  Signed-off-by: Guenter Roeck <linux@roeck-us.net>    * drm/amd/powerplay: fix uninitialized variable    refresh_rate was not initialized when program  display gap.  this patch can fix vce ring test failed  when do S3 on Polaris10.    bug: https://bugs.freedesktop.org/show_bug.cgi?id=103102  bug: https://bugzilla.kernel.org/show_bug.cgi?id=196615  Reviewed-by: Alex Deucher <alexander.deucher@amd.com>  Signed-off-by: Rex Zhu <Rex.Zhu@amd.com>  Signed-off-by: Alex Deucher <alexander.deucher@amd.com>  Cc: stable@vger.kernel.org    * bpf: devmap fix arithmetic overflow in bitmap_size calculation    An integer overflow is possible in dev_map_bitmap_size() when  calculating the BITS_TO_LONG logic which becomes, after macro  replacement,     (((n) + (d) - 1)/ (d))    where 'n' is a __u32 and 'd' is (8 * sizeof(long)). To avoid  overflow cast to u64 before arithmetic.    Reported-by: Richard Weinberger <richard@nod.at>  Acked-by: Daniel Borkmann <daniel@iogearbox.net>  Signed-off-by: John Fastabend <john.fastabend@gmail.com>  Acked-by: Alexei Starovoitov <ast@kernel.org>  Signed-off-by: David S. Miller <davem@davemloft.net>    * bpf: fix off by one for range markings with L{T, E} patterns    During review I noticed that the current logic for direct packet  access marking in check_cond_jmp_op() has an off by one for the  upper right range border when marking in find_good_pkt_pointers()  with BPF_JLT and BPF_JLE. It's not really harmful given access  up to pkt_end is always safe, but we should nevertheless correct  the range marking before it becomes ABI. If pkt_data' denotes a  pkt_data derived pointer (pkt_data + X), then for pkt_data' < pkt_end  in the true branch as well as for pkt_end <= pkt_data' in the false  branch we mark the range with X although it should really be X - 1  in these cases. For example, X could be pkt_end - pkt_data, then  when testing for pkt_data' < pkt_end the verifier simulation cannot  deduce that a byte load of pkt_data' - 1 would succeed in this  branch.    Fixes: b4e432f1000a ("bpf: enable BPF_J{LT, LE, SLT, SLE} opcodes in verifier")  Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>  Acked-by: Alexei Starovoitov <ast@kernel.org>  Acked-by: John Fastabend <john.fastabend@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * bpf: fix pattern matches for direct packet access    Alexander had a test program with direct packet access, where  the access test was in the form of data + X > data_end. In an  unrelated change to the program LLVM decided to swap the branches  and emitted code for the test in form of data + X <= data_end.  We hadn't seen these being generated previously, thus verifier  would reject the program. Therefore, fix up the verifier to  detect all test cases, so we don't run into such issues in the  future.    Fixes: b4e432f1000a ("bpf: enable BPF_J{LT, LE, SLT, SLE} opcodes in verifier")  Reported-by: Alexander Alemayhu <alexander@alemayhu.com>  Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>  Acked-by: Alexei Starovoitov <ast@kernel.org>  Acked-by: John Fastabend <john.fastabend@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * bpf: add test cases to bpf selftests to cover all access tests    Lets add test cases to cover really all possible direct packet  access tests for good/bad access cases so we keep tracking them.    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>  Acked-by: Alexei Starovoitov <ast@kernel.org>  Acked-by: John Fastabend <john.fastabend@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * sock: correct sk_wmem_queued accounting on efault in tcp zerocopy    Syzkaller hits WARN_ON(sk->sk_wmem_queued) in sk_stream_kill_queues  after triggering an EFAULT in __zerocopy_sg_from_iter.    On this error, skb_zerocopy_stream_iter resets the skb to its state  before the operation with __pskb_trim. It cannot kfree_skb like  datagram callers, as the skb may have data from a previous send call.    __pskb_trim calls skb_condense for unowned skbs, which adjusts their  truesize. These tcp skbuffs are owned and their truesize must add up  to sk_wmem_queued. But they match because their skb->sk is NULL until  tcp_transmit_skb.    Temporarily set skb->sk when calling __pskb_trim to signal that the  skbuffs are owned and avoid the skb_condense path.    Fixes: 52267790ef52 ("sock: add MSG_ZEROCOPY")  Signed-off-by: Willem de Bruijn <willemb@google.com>  Reviewed-by: Eric Dumazet <edumazet@google.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: bridge: fix returning of vlan range op errors    When vlan tunnels were introduced, vlan range errors got silently  dropped and instead 0 was returned always. Restore the previous  behaviour and return errors to user-space.    Fixes: efa5356b0d97 ("bridge: per vlan dst_metadata netlink support")  Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>  Acked-by: Roopa Prabhu <roopa@cumulusnetworks.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * soreuseport: fix initialization race    Syzkaller stumbled upon a way to trigger  WARNING: CPU: 1 PID: 13881 at net/core/sock_reuseport.c:41  reuseport_alloc+0x306/0x3b0 net/core/sock_reuseport.c:39    There are two initialization paths for the sock_reuseport structure in a  socket: Through the udp/tcp bind paths of SO_REUSEPORT sockets or through  SO_ATTACH_REUSEPORT_[CE]BPF before bind.  The existing implementation  assumedthat the socket lock protected both of these paths when it actually  only protects the SO_ATTACH_REUSEPORT path.  Syzkaller triggered this  double allocation by running these paths concurrently.    This patch moves the check for double allocation into the reuseport_alloc  function which is protected by a global spin lock.    Fixes: e32ea7e74727 ("soreuseport: fast reuseport UDP socket selection")  Fixes: c125e80b8868 ("soreuseport: fast reuseport TCP socket selection")  Signed-off-by: Craig Gallek <kraig@google.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: ethtool: remove error check for legacy setting transceiver type    Commit 9cab88726929605 ("net: ethtool: Add back transceiver type")  restores the transceiver type to struct ethtool_link_settings and  convert_link_ksettings_to_legacy_settings() but forgets to remove the  error check for the same in convert_legacy_settings_to_link_ksettings().  This prevents older versions of ethtool to change link settings.        # ethtool --version      ethtool version 3.16        # ethtool -s eth0 autoneg on speed 100 duplex full      Cannot set new settings: Invalid argument        not setting speed        not setting duplex        not setting autoneg    While newer versions of ethtool works.        # ethtool --version      ethtool version 4.10        # ethtool -s eth0 autoneg on speed 100 duplex full      [   57.703268] sh-eth ee700000.ethernet eth0: Link is Down      [   59.618227] sh-eth ee700000.ethernet eth0: Link is Up - 100Mbps/Full - flow control rx/tx    Fixes: 19cab88726929605 ("net: ethtool: Add back transceiver type")  Signed-off-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>  Reported-by: Renjith R V <renjith.rv@quest-global.com>  Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>  Signed-off-by: David S. Miller <davem@davemloft.net>    * mlxsw: reg: Add Tunneling IPinIP General Configuration Register    The TIGCR register is used for setting up the IPinIP Tunnel  configuration.    Fixes: ee954d1a91b2 ("mlxsw: spectrum_router: Support GRE tunnels")  Signed-off-by: Petr Machata <petrm@mellanox.com>  Reviewed-by: Ido Schimmel <idosch@mellanox.com>  Signed-off-by: Jiri Pirko <jiri@mellanox.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * mlxsw: spectrum_router: Configure TIGCR on init    Spectrum tunnels do not default to ttl of "inherit" like the Linux ones  do. Configure TIGCR on router init so that the TTL of tunnel packets is  copied from the overlay packets.    Fixes: ee954d1a91b2 ("mlxsw: spectrum_router: Support GRE tunnels")  Signed-off-by: Petr Machata <petrm@mellanox.com>  Reviewed-by: Ido Schimmel <idosch@mellanox.com>  Signed-off-by: Jiri Pirko <jiri@mellanox.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: stmmac: Add missing call to dev_kfree_skb()    When RX HW timestamp is enabled and a frame is discarded we are  not freeing the skb but instead only setting to NULL the entry.    Add a call to dev_kfree_skb_any() so that skb entry is correctly  freed.    Signed-off-by: Jose Abreu <joabreu@synopsys.com>  Cc: David S. Miller <davem@davemloft.net>  Cc: Joao Pinto <jpinto@synopsys.com>  Cc: Giuseppe Cavallaro <peppe.cavallaro@st.com>  Cc: Alexandre Torgue <alexandre.torgue@st.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: stmmac: Fix stmmac_get_rx_hwtstamp()    When using GMAC4 the valid timestamp is from CTX next desc but  we are passing the previous desc to get_rx_timestamp_status()  callback.    Fix this and while at it rework a little bit the function logic.    Signed-off-by: Jose Abreu <joabreu@synopsys.com>  Cc: David S. Miller <davem@davemloft.net>  Cc: Joao Pinto <jpinto@synopsys.com>  Cc: Giuseppe Cavallaro <peppe.cavallaro@st.com>  Cc: Alexandre Torgue <alexandre.torgue@st.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: stmmac: Prevent infinite loop in get_rx_timestamp_status()    Prevent infinite loop by correctly setting the loop condition to  break when i == 10.    Signed-off-by: Jose Abreu <joabreu@synopsys.com>  Cc: David S. Miller <davem@davemloft.net>  Cc: Joao Pinto <jpinto@synopsys.com>  Cc: Giuseppe Cavallaro <peppe.cavallaro@st.com>  Cc: Alexandre Torgue <alexandre.torgue@st.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * rxrpc: Don't release call mutex on error pointer    Don't release call mutex at the end of rxrpc_kernel_begin_call() if the  call pointer actually holds an error value.    Fixes: 540b1c48c37a ("rxrpc: Fix deadlock between call creation and sendmsg/recvmsg")  Reported-by: Marc Dionne <marc.dionne@auristor.com>  Signed-off-by: David Howells <dhowells@redhat.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * textsearch: fix typos in library helpers    Fix spellos (typos) in textsearch library helpers.    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>  Signed-off-by: David S. Miller <davem@davemloft.net>    * of_mdio: Fix broken PHY IRQ in case of probe deferral    If an Ethernet PHY is initialized before the interrupt controller it is  connected to, a message like the following is printed:        irq: no irq domain found for /interrupt-controller@e61c0000 !    However, the actual error is ignored, leading to a non-functional (POLL)  PHY interrupt later:        Micrel KSZ8041RNLI ee700000.ethernet-ffffffff:01: attached PHY driver [Micrel KSZ8041RNLI] (mii_bus:phy_addr=ee700000.ethernet-ffffffff:01, irq=POLL)    Depending on whether the PHY driver will fall back to polling, Ethernet  may or may not work.    To fix this:    1. Switch of_mdiobus_register_phy() from irq_of_parse_and_map() to       of_irq_get().       Unlike the former, the latter returns -EPROBE_DEFER if the       interrupt controller is not yet available, so this condition can be       detected.       Other errors are handled the same as before, i.e. use the passed       mdio->irq[addr] as interrupt.    2. Propagate and handle errors from of_mdiobus_register_phy() and       of_mdiobus_register_device().    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>  Signed-off-by: David S. Miller <davem@davemloft.net>    * ipv6: flowlabel: do not leave opt->tot_len with garbage    When syzkaller team brought us a C repro for the crash [1] that  had been reported many times in the past, I finally could find  the root cause.    If FlowLabel info is merged by fl6_merge_options(), we leave  part of the opt_space storage provided by udp/raw/l2tp with random value  in opt_space.tot_len, unless a control message was provided at sendmsg()  time.    Then ip6_setup_cork() would use this random value to perform a kzalloc()  call. Undefined behavior and crashes.    Fix is to properly set tot_len in fl6_merge_options()    At the same time, we can also avoid consuming memory and cpu cycles  to clear it, if every option is copied via a kmemdup(). This is the  change in ip6_setup_cork().    [1]  kasan: CONFIG_KASAN_INLINE enabled  kasan: GPF could be caused by NULL-ptr deref or user memory access  general protection fault: 0000 [#1] SMP KASAN  Dumping ftrace buffer:     (ftrace buffer empty)  Modules linked in:  CPU: 0 PID: 6613 Comm: syz-executor0 Not tainted 4.14.0-rc4+ #127  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011  task: ffff8801cb64a100 task.stack: ffff8801cc350000  RIP: 0010:ip6_setup_cork+0x274/0x15c0 net/ipv6/ip6_output.c:1168  RSP: 0018:ffff8801cc357550 EFLAGS: 00010203  RAX: dffffc0000000000 RBX: ffff8801cc357748 RCX: 0000000000000010  RDX: 0000000000000002 RSI: ffffffff842bd1d9 RDI: 0000000000000014  RBP: ffff8801cc357620 R08: ffff8801cb17f380 R09: ffff8801cc357b10  R10: ffff8801cb64a100 R11: 0000000000000000 R12: ffff8801cc357ab0  R13: ffff8801cc357b10 R14: 0000000000000000 R15: ffff8801c3bbf0c0  FS:  00007f9c5c459700(0000) GS:ffff8801db200000(0000) knlGS:0000000000000000  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033  CR2: 0000000020324000 CR3: 00000001d1cf2000 CR4: 00000000001406f0  DR0: 0000000020001010 DR1: 0000000000000000 DR2: 0000000000000000  DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000600  Call Trace:   ip6_make_skb+0x282/0x530 net/ipv6/ip6_output.c:1729   udpv6_sendmsg+0x2769/0x3380 net/ipv6/udp.c:1340   inet_sendmsg+0x11f/0x5e0 net/ipv4/af_inet.c:762   sock_sendmsg_nosec net/socket.c:633 [inline]   sock_sendmsg+0xca/0x110 net/socket.c:643   SYSC_sendto+0x358/0x5a0 net/socket.c:1750   SyS_sendto+0x40/0x50 net/socket.c:1718   entry_SYSCALL_64_fastpath+0x1f/0xbe  RIP: 0033:0x4520a9  RSP: 002b:00007f9c5c458c08 EFLAGS: 00000216 ORIG_RAX: 000000000000002c  RAX: ffffffffffffffda RBX: 0000000000718000 RCX: 00000000004520a9  RDX: 0000000000000001 RSI: 0000000020fd1000 RDI: 0000000000000016  RBP: 0000000000000086 R08: 0000000020e0afe4 R09: 000000000000001c  R10: 0000000000000000 R11: 0000000000000216 R12: 00000000004bb1ee  R13: 00000000ffffffff R14: 0000000000000016 R15: 0000000000000029  Code: e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 ea 0f 00 00 48 8d 79 04 48 b8 00 00 00 00 00 fc ff df 45 8b 74 24 04 48 89 fa 48 c1 ea 03 <0f> b6 14 02 48 89 f8 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85  RIP: ip6_setup_cork+0x274/0x15c0 net/ipv6/ip6_output.c:1168 RSP: ffff8801cc357550    Signed-off-by: Eric Dumazet <edumazet@google.com>  Reported-by: Dmitry Vyukov <dvyukov@google.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * stmmac: Don't access tx_q->dirty_tx before netif_tx_lock    This is the possible reason for different hard to reproduce  problems on my ARMv7-SMP test system.    The symptoms are in recent kernels imprecise external aborts,  and in older kernels various kinds of network stalls and  unexpected page allocation failures.    My testing indicates that the trouble started between v4.5 and v4.6  and prevails up to v4.14.    Using the dirty_tx before acquiring the spin lock is clearly  wrong and was first introduced with v4.6.    Fixes: e3ad57c96715 ("stmmac: review RX/TX ring management")    Signed-off-by: Bernd Edlinger <bernd.edlinger@hotmail.de>  Signed-off-by: David S. Miller <davem@davemloft.net>    * x86/cpu/AMD: Apply the Erratum 688 fix when the BIOS doesn't    Some F14h machines have an erratum which, "under a highly specific  and detailed set of internal timing conditions" can lead to skipping  instructions and RIP corruption.    Add the fix for those machines when their BIOS doesn't apply it or  there simply isn't BIOS update for them.    Tested-by: <mirh@protonmail.ch>  Signed-off-by: Borislav Petkov <bp@suse.de>  Cc: <stable@vger.kernel.org>  Cc: Linus Torvalds <torvalds@linux-foundation.org>  Cc: Peter Zijlstra <peterz@infradead.org>  Cc: Sherry Hurwitz <sherry.hurwitz@amd.com>  Cc: Thomas Gleixner <tglx@linutronix.de>  Cc: Yazen Ghannam <Yazen.Ghannam@amd.com>  Link: http://lkml.kernel.org/r/20171022104731.28249-1-bp@alien8.de  Link: https://bugzilla.kernel.org/show_bug.cgi?id=197285  [ Added pr_info() that we activated the workaround. ]  Signed-off-by: Ingo Molnar <mingo@kernel.org>    * Input: do not use property bits when generating module alias    The commit 8724ecb07229 ("Input: allow matching device IDs on property  bits") started using property bits when generating module aliases for input  handlers, but did not adjust the generation of MODALIAS attribute on input  device uevents, breaking automatic module loading. Given that no handler  currently uses property bits in their module tables, let's revert this part  of the commit for now.    Reported-by: Damien Wyart <damien.wyart@gmail.com>  Tested-by: Damien Wyart <damien.wyart@gmail.com>  Fixes: 8724ecb07229 ("Input: allow matching device IDs on property bits")  Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>    * tcp: do tcp_mstamp_refresh before retransmits on TSQ handler    When retransmission on TSQ handler was introduced in the commit  f9616c35a0d7 ("tcp: implement TSQ for retransmits"), the retransmitted  skbs' timestamps were updated on the actual transmission. In the later  commit 385e20706fac ("tcp: use tp->tcp_mstamp in output path"), it stops  being done so. In the commit, the comment says "We try to refresh  tp->tcp_mstamp only when necessary", and at present tcp_tsq_handler and  tcp_v4_mtu_reduced applies to this. About the latter, it's okay since  it's rare enough.    About the former, even though possible retransmissions on the tasklet  comes just after the destructor run in NET_RX softirq handling, the time  between them could be nonnegligibly large to the extent that  tcp_rack_advance or rto rearming be affected if other (remaining) RX,  BLOCK and (preceding) TASKLET sofirq handlings are unexpectedly heavy.    So in the same way as tcp_write_timer_handler does, doing tcp_mstamp_refresh  ensures the accuracy of algorithms relying on it.    Fixes: 385e20706fac ("tcp: use tp->tcp_mstamp in output path")  Signed-off-by: Koichiro Den <den@klaipeden.com>  Reviewed-by: Eric Dumazet <edumazet@google.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * tcp/dccp: fix lockdep splat in inet_csk_route_req()    This patch fixes the following lockdep splat in inet_csk_route_req()      lockdep_rcu_suspicious    inet_csk_route_req    tcp_v4_send_synack    tcp_rtx_synack    inet_rtx_syn_ack    tcp_fastopen_synack_time    tcp_retransmit_timer    tcp_write_timer_handler    tcp_write_timer    call_timer_fn    Thread running inet_csk_route_req() owns a reference on the request  socket, so we have the guarantee ireq->ireq_opt wont be changed or  freed.    lockdep can enforce this invariant for us.    Fixes: c92e8c02fe66 ("tcp/dccp: fix ireq->opt races")  Signed-off-by: Eric Dumazet <edumazet@google.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * ipsec: Fix aborted xfrm policy dump crash    An independent security researcher, Mohamed Ghannam, has reported  this vulnerability to Beyond Security's SecuriTeam Secure Disclosure  program.    The xfrm_dump_policy_done function expects xfrm_dump_policy to  have been called at least once or it will crash.  This can be  triggered if a dump fails because the target socket's receive  buffer is full.    This patch fixes it by using the cb->start mechanism to ensure that  the initialisation is always done regardless of the buffer situation.    Fixes: 12a169e7d8f4 ("ipsec: Put dumpers on the dump list")  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>    * scsi: Suppress a kernel warning in case the prep function returns BLKPREP_DEFER    The legacy block layer handles requests as follows:  - If the prep function returns BLKPREP_OK, let blk_peek_request()    return the pointer to that request.  - If the prep function returns BLKPREP_DEFER, keep the RQF_STARTED    flag and retry calling the prep function later.  - If the prep function returns BLKPREP_KILL or BLKPREP_INVALID, end    the request.    In none of these cases it is correct to clear the SCMD_INITIALIZED  flag from inside scsi_prep_fn(). Since scsi_prep_fn() already  guarantees that scsi_init_command() will be called once even if  scsi_prep_fn() is called multiple times, remove the code that clears  SCMD_INITIALIZED from scsi_prep_fn().    The scsi-mq code handles requests as follows:  - If scsi_mq_prep_fn() returns BLKPREP_OK, set the RQF_DONTPREP flag    and submit the request to the SCSI LLD.  - If scsi_mq_prep_fn() returns BLKPREP_DEFER, call    blk_mq_delay_run_hw_queue() and return BLK_STS_RESOURCE.  - If the prep function returns BLKPREP_KILL or BLKPREP_INVALID, call    scsi_mq_uninit_cmd() and let the blk-mq core end the request.    In none of these cases scsi_mq_prep_fn() should clear the  SCMD_INITIALIZED flag. Hence remove the code from scsi_mq_prep_fn()  function that clears that flag.    This patch avoids that the following warning is triggered when using  the legacy block layer:    ------------[ cut here ]------------  WARNING: CPU: 1 PID: 4198 at drivers/scsi/scsi_lib.c:654 scsi_end_request+0x1de/0x220  CPU: 1 PID: 4198 Comm: mkfs.f2fs Not tainted 4.14.0-rc5+ #1  task: ffff91c147a4b800 task.stack: ffffb282c37b8000  RIP: 0010:scsi_end_request+0x1de/0x220  Call Trace:  <IRQ>  scsi_io_completion+0x204/0x5e0  scsi_finish_command+0xce/0xe0  scsi_softirq_done+0x126/0x130  blk_done_softirq+0x6e/0x80  __do_softirq+0xcf/0x2a8  irq_exit+0xab/0xb0  do_IRQ+0x7b/0xc0  common_interrupt+0x90/0x90  </IRQ>  RIP: 0010:_raw_spin_unlock_irqrestore+0x9/0x10  __test_set_page_writeback+0xc7/0x2c0  __block_write_full_page+0x158/0x3b0  block_write_full_page+0xc4/0xd0  blkdev_writepage+0x13/0x20  __writepage+0x12/0x40  write_cache_pages+0x204/0x500  generic_writepages+0x48/0x70  blkdev_writepages+0x9/0x10  do_writepages+0x34/0xc0  __filemap_fdatawrite_range+0x6c/0x90  file_write_and_wait_range+0x31/0x90  blkdev_fsync+0x16/0x40  vfs_fsync_range+0x44/0xa0  do_fsync+0x38/0x60  SyS_fsync+0xb/0x10  entry_SYSCALL_64_fastpath+0x13/0x94  ---[ end trace 86e8ef85a4a6c1d1 ]---    Fixes: commit 64104f703212 ("scsi: Call scsi_initialize_rq() for filesystem requests")  Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>  Cc: Damien Le Moal <damien.lemoal@wdc.com>  Cc: Christoph Hellwig <hch@lst.de>  Cc: Hannes Reinecke <hare@suse.com>  Cc: Johannes Thumshirn <jthumshirn@suse.de>  Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>  Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>  Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>    * Linux 4.14-rc6    * x86/entry: Fix idtentry unwind hint    This fixes the following ORC warning in the 'int3' entry code:      WARNING: can't dereference iret registers at ffff8801c5f17fe0 for ip ffffffff95f0d94b    The ORC metadata had the wrong stack offset for the iret registers.    Their location on the stack is dependent on whether the exception has an  error code.    Reported-and-tested-by: Andrei Vagin <avagin@virtuozzo.com>  Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>  Cc: Andy Lutomirski <luto@kernel.org>  Cc: Linus Torvalds <torvalds@linux-foundation.org>  Cc: Peter Zijlstra <peterz@infradead.org>  Cc: Thomas Gleixner <tglx@linutronix.de>  Fixes: 8c1f75587a18 ("x86/entry/64: Add unwind hint annotations")  Link: http://lkml.kernel.org/r/931d57f0551ed7979d5e7e05370d445c8e5137f8.1508516398.git.jpoimboe@redhat.com  Signed-off-by: Ingo Molnar <mingo@kernel.org>    * x86/unwind: Show function name+offset in ORC error messages    Improve the warning messages to show the relevant function name+offset.  This makes it much easier to diagnose problems with the ORC metadata.    Before:      WARNING: can't dereference iret registers at ffff8801c5f17fe0 for ip ffffffff95f0d94b    After:      WARNING: can't dereference iret registers at ffff880178f5ffe0 for ip int3+0x5b/0x60    Reported-by: Andrei Vagin <avagin@virtuozzo.com>  Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>  Cc: Andy Lutomirski <luto@kernel.org>  Cc: Linus Torvalds <torvalds@linux-foundation.org>  Cc: Peter Zijlstra <peterz@infradead.org>  Cc: Thomas Gleixner <tglx@linutronix.de>  Fixes: ee9f8fce9964 ("x86/unwind: Add the ORC unwinder")  Link: http://lkml.kernel.org/r/6bada6b9eac86017e16bd79e1e77877935cb50bb.1508516398.git.jpoimboe@redhat.com  Signed-off-by: Ingo Molnar <mingo@kernel.org>    * sched/swait: Document it clearly that the swait facilities are special and shouldn't be used    We currently welcome using swait over wait whenever possible because  it is a slimmer data structure. However, Linus has made it very clear  that he does not want this used, unless under very specific RT scenarios  (such as current users).    Update the comments before kernel hipsters start thinking swait is the  cool thing to do.    Signed-off-by: Davidlohr Bueso <dbueso@suse.de>  Acked-by: Luis R. Rodriguez <mcgrof@kernel.org>  Cc: Andrew Morton <akpm@linux-foundation.org>  Cc: Linus Torvalds <torvalds@linux-foundation.org>  Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>  Cc: Peter Zijlstra <peterz@infradead.org>  Cc: Thomas Gleixner <tglx@linutronix.de>  Cc: dave@stgolabs.net  Cc: wagi@monom.org  Link: http://lkml.kernel.org/r/20171020171346.24445-1-dave@stgolabs.net  Signed-off-by: Ingo Molnar <mingo@kernel.org>    * platform/x86: intel_pmc_ipc: Use devm_* calls in driver probe function    This patch cleans up unnecessary free/alloc calls in ipc_plat_probe(),  ipc_pci_probe() and ipc_plat_get_res() functions by using devm_*  calls.    This patch also adds proper error handling for failure cases in  ipc_pci_probe() function.    Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>  [andy: fixed style issues, missed devm_free_irq(), removed unnecessary log message]  Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>    * platform/x86: intel_pmc_ipc: Use spin_lock to protect GCR updates    Currently, update_no_reboot_bit() function implemented in this driver  uses mutex_lock() to protect its register updates. But this function is  called with in atomic context in iTCO_wdt_start() and iTCO_wdt_stop()  functions in iTCO_wdt.c driver, which in turn causes "sleeping into  atomic context" issue. This patch fixes this issue by replacing the  mutex_lock() with spin_lock() to protect the GCR read/write/update APIs.    Fixes: 9d855d4 ("platform/x86: intel_pmc_ipc: Fix iTCO_wdt GCS memory mapping failure")  Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kupuswamy@linux.intel.com>  Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>    * kbuild doc: a bundle of fixes on makefiles.txt    It does several fixes:  1. move the displaced ld example to its reasonable place.  2. add new example for command gzip.  3. fix 2 number errors.  4. fix format of chapter 7.x, make it looks the same as other chapters.    Signed-off-by: Cao jin <caoj.fnst@cn.fujitsu.com>  Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>    * kbuild: clang: fix build failures with sparse check    We should avoid using the space character when passing arguments to  clang, because static code analysis check tool such as sparse may  misinterpret the arguments followed by spaces as build targets hence  cause the build to fail.    Signed-off-by: David Lin <dtwlin@google.com>  Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>    * xfs: fix AIM7 regression    Apparently our current rwsem code doesn't like doing the trylock, then  lock for real scheme.  So change our read/write methods to just do the  trylock for the RWF_NOWAIT case.  This fixes a ~25% regression in  AIM7.    Fixes: 91f9943e ("fs: support RWF_NOWAIT for buffered reads")  Reported-by: kernel test robot <xiaolong.ye@intel.com>  Signed-off-by: Christoph Hellwig <hch@lst.de>  Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>  Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>    * drivers/net/usb: add device id for TP-LINK UE300 USB 3.0 Ethernet    This product is named 'TP-LINK USB 3.0 Gigabit Ethernet Network  Adapter (Model No.is UE300)'. It uses chip RTL8153 and works with  driver drivers/net/usb/r8152.c    Signed-off-by: Ran Wang <ran.wang_1@nxp.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * cdc_ether: flag the Huawei ME906/ME909 as WWAN    The Huawei ME906 (12d1:15c1) comes with a standard ECM interface that  requires management via AT commands sent over one of the control TTYs  (e.g. connected with AT^NDISDUP).    Signed-off-by: Aleksander Morgado <aleksander@aleksander.es>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: mvpp2: fix TSO headers allocation and management    TSO headers are managed with txq index and therefore should be aligned  with the txq size, not with the aggregated txq size.    Fixes: 186cd4d4e414 ("net: mvpp2: software tso support")  Reported-by: Marc Zyngier <marc.zyngier@arm.com>  Signed-off-by: Yan Markman <ymarkman@marvell.com>  Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: mvpp2: do not unmap TSO headers buffers    The TSO header buffers are coming from a per cpu pool and should not  be unmapped as they are reused. The PPv2 driver was unmapping all  descriptors buffers unconditionally. This patch fixes this by checking  the buffers dma addresses before unmapping them, and by not unmapping  those who are located in the TSO header pool.    Fixes: 186cd4d4e414 ("net: mvpp2: software tso support")  Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * net: mvpp2: do not call txq_done from the Tx path when Tx irqs are used    When Tx IRQs are used, txq_bufs_free() can be called from both the Tx  path and from NAPI poll(). This led to CPU stalls as if these two tasks  (Tx and Poll) are scheduled on two CPUs at the same time, DMA unmapping  operations are done on the same txq buffers.    This patch adds a check not to call txq_done() from the Tx path if Tx  interrupts are used as it does not make sense to do so.    Fixes: edc660fa09e2 ("net: mvpp2: replace TX coalescing interrupts with hrtimer")  Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * sctp: full support for ipv6 ip_nonlocal_bind & IP_FREEBIND    Commit 9b9742022888 ("sctp: support ipv6 nonlocal bind")  introduced support for the above options as v4 sctp did,  so patched sctp_v6_available().    In the v4 implementation it's enough, because  sctp_inet_bind_verify() just returns with sctp_v4_available().  However sctp_inet6_bind_verify() has an extra check before that  for link-local scope_id, which won't respect the above options.    Added the checks before calling ipv6_chk_addr(), but  not before the validation of scope_id.    before (w/ both options):   ./v6test fe80::10 sctp   bind failed, errno: 99 (Cannot assign requested address)   ./v6test fe80::10 tcp   bind success, errno: 0 (Success)    after (w/ both options):   ./v6test fe80::10 sctp   bind success, errno: 0 (Success)    Signed-off-by: Laszlo Toth <laszlth@gmail.com>  Reviewed-by: Xin Long <lucien.xin@gmail.com>  Signed-off-by: David S. Miller <davem@davemloft.net>    * can: sun4i: fix loopback mode    Fix loopback mode by setting the right flag and remove presume mode.    Signed-off-by: Gerhard Bertelsmann <info@gerhard-bertelsmann.de>  Cc: linux-stable <stable@vger.kernel.org>  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>    * can: kvaser_usb: Correct return value in printout    If the return value from kvaser_usb_send_simple_msg() was non-zero, the  return value from kvaser_usb_flush_queue() was printed in the kernel  warning.    Signed-off-by: Jimmy Assarsson <jimmyassarsson@gmail.com>  Cc: linux-stable <stable@vger.kernel.org>  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>    * can: kvaser_usb: Ignore CMD_FLUSH_QUEUE_REPLY messages    To avoid kernel warning "Unhandled message (68)", ignore the  CMD_FLUSH_QUEUE_REPLY message for now.    As of Leaf v2 firmware version v4.1.844 (2017-02-15), flush tx queue is  synchronous. There is a capability bit indicating whether flushing tx  queue is synchronous or asynchronous.    A proper solution would be to query the device for capabilities. If the  synchronous tx flush capability bit is set, we should wait for  CMD_FLUSH_QUEUE_REPLY message, while flushing the tx queue.    Signed-off-by: Jimmy Assarsson <jimmyassarsson@gmail.com>  Cc: linux-stable <stable@vger.kernel.org>  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>    * perf/x86/intel/bts: Fix exclusive event reference leak    Commit:      d2878d642a4ed ("perf/x86/intel/bts: Disallow use by unprivileged users on paranoid systems")    ... adds a privilege check in the exactly wrong place in the event init path:  after the 'LBR exclusive' reference has been taken, and doesn't release it  in the case of insufficient privileges. After this, nobody in the system  gets to use PT or LBR afterwards.    This patch moves the privilege check to where it should have been in the  first place.    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>  Cc: Linus Torvalds <torvalds@linux-foundation.org>  Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>  Cc: Peter Zijlstra <peterz@infradead.org>  Cc: Thomas Gleixner <tglx@linutronix.de>  Fixes: d2878d642a4ed ("perf/x86/intel/bts: Disallow use by unprivileged users on paranoid systems")  Link: http://lkml.kernel.org/r/20171023123533.16973-1-alexander.shishkin@linux.intel.com  Signed-off-by: Ingo Molnar <mingo@kernel.org>    * ALSA: hda - fix headset mic problem for Dell machines with alc236    We have several Dell laptops which use the codec alc236, the headset  mic can't work on these machines. Following the commit 736f20a70, we  add the pin cfg table to make the headset mic work.    Cc: <stable@vger.kernel.org>  Signed-off-by: Hui Wang <hui.wang@canonical.com>  Signed-off-by: Takashi Iwai <tiwai@suse.de>    * hwmon: (tmp102) Fix first temperature reading    Commit 3d8f7a89a197 ("hwmon: (tmp102) Improve handling of initial read  delay") reduced the initial temperature read delay and made it dependent  on the chip's shutdown mode. If the chip was not in shutdown mode at probe,  the read delay no longer applies.    This ignores the fact that the chip initialization changes the temperature  sensor resolution, and that the temperature register values change when  the resolution is changed. As a result, the reported temperature is twice  as high as the real temperature until the first temperature conversion  after the configuration change is complete. This can result in unexpected  behavior and, worst case, in a system shutdown. To fix the problem,  let's just always wait for a conversion to complete before reporting  a temperatu…	addstone	null	null	null	null	null	null	
2017-11-15 12:56:24.0	2017-11-28 21:12:07.0	2017-11-29 05:27:33.0	closed	[]	12	488	Fixed Incompatibility with Windows 10	https://api.github.com/repos/torvalds/linux/issues/488	https://github.com/torvalds/linux/pull/488	I was trying to compile the Linux kernel source code on Windows, using this command:    ```  C:\Users\Arnav> python init/main.c # And all other sources  ```    However, I would get an error on the 1st line. Thus, I decided to fix the bugs. Now when I run the code, it works properly. You can thank me now. Now all the Windows 10 users can enjoy the beautiful OS called Linux.    You may think there are indentation issues, but I need them so that MSVC can accept the code.	arnavb	null	null	null	null	null	null	
2017-11-18 19:28:15.0	null	2020-10-02 17:47:00.0	open	[]	2	489	Suggestion for code style fix.	https://api.github.com/repos/torvalds/linux/issues/489	https://github.com/torvalds/linux/pull/489	Adding brackets to show explicitly which else belongs to which if statement.	fmmedeiros	null	null	null	null	null	null	
2017-11-21 14:40:04.0	null	2017-12-22 20:49:12.0	open	[]	3	490	Remove gotos	https://api.github.com/repos/torvalds/linux/issues/490	https://github.com/torvalds/linux/pull/490	I have remove some gotos in functions:    - cap_ptrace_access_check    - cap_ptrace_traceme    This is my first open source project. I would be pleased over feedback.  	christianbender	null	null	null	null	null	null	
2017-11-25 11:51:39.0	2017-11-25 12:08:16.0	2017-11-25 12:08:16.0	closed	[]	1	491	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/491	https://github.com/torvalds/linux/pull/491	Merge	ghost	null	null	null	null	null	null	
2017-11-25 12:10:21.0	2017-11-25 12:10:34.0	2017-11-25 12:10:34.0	closed	[]	0	492	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/492	https://github.com/torvalds/linux/pull/492	Merge	ghost	null	null	null	null	null	null	
2017-11-27 13:17:44.0	2018-01-19 14:34:52.0	2018-01-19 14:34:52.0	closed	[]	1	493	x86/tsc: Add kernel parameter to override TSC frequency	https://api.github.com/repos/torvalds/linux/issues/493	https://github.com/torvalds/linux/pull/493	Add kernel parameter tsc_freq= (in KHz) to override TSC frequency returned by native_calibrate_tsc()	Nekotekina	null	null	null	null	null	null	
2017-11-28 15:52:14.0	null	2018-02-16 19:56:19.0	open	[]	1	494	Cleaned Python file to match PEP8 guidelines	https://api.github.com/repos/torvalds/linux/issues/494	https://github.com/torvalds/linux/pull/494	Now, all lines are no longer larger than 78 characters.  Moreover, I moved all comments over a function to their proper docstring.  Finally, I added space between some operators where it was needed.	NicolasBizzozzero	null	null	null	null	null	null	
2017-11-28 18:57:27.0	2018-02-19 12:49:22.0	2018-02-19 12:49:30.0	closed	[]	14	495	this code a lot whole better and verry faster	https://api.github.com/repos/torvalds/linux/issues/495	https://github.com/torvalds/linux/pull/495	It so fast now can run vinux on my shoess, should try put it good, and I got A+++++ on my project in school cuz this very fastly	ghost	null	null	null	null	null	null	
2017-11-30 04:52:45.0	null	2017-11-30 04:58:27.0	open	[]	2	496	Add new QCA Rome Device (04ca:3015)	https://api.github.com/repos/torvalds/linux/issues/496	https://github.com/torvalds/linux/pull/496	Add new QCA Rome Device (04ca:3015), that will allow 04ca:3015 from Lite-on technologies to work properly.	ghost	null	null	null	null	null	null	
2017-12-02 11:04:50.0	null	2020-10-02 17:46:49.0	open	[]	3	497	Adding HID_QUIRK_MULTI_INPUT to a BT HID	https://api.github.com/repos/torvalds/linux/issues/497	https://github.com/torvalds/linux/pull/497	I'm developing a Bluetooth HID emulator (dubbed "across"; http://www.acrosscenter.com) working in a PC or Mac. Across works well with most of client devices whose OS is Windows, macOS, Windows Phone, Android, iOS. Until now I have been thinking Linux would work well like most of other OS's, but it doesn't.  Across packs keyboard, relative coordinate mice, absolute coordinate mice and absolute coordinate touch device into the single interface. However the absolute coordinate touch device prevents input devices enumerator from loading the whole other devices, and it can work around by adding HID_QUIRK_MULTI_INPUT.    PS: I'm developing Across for Linux. :)	SweatingEgg	null	null	null	null	null	null	
2017-12-04 10:54:11.0	2017-12-04 11:17:45.0	2017-12-04 11:32:13.0	closed	[]	1	498	Merge pull request #6 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/498	https://github.com/torvalds/linux/pull/498	update to rev 4.15-rc1	tmaimon	null	null	null	null	null	null	
2017-12-04 19:29:56.0	null	2020-10-02 17:46:47.0	open	[]	2	499	Added Dell 1537	https://api.github.com/repos/torvalds/linux/issues/499	https://github.com/torvalds/linux/pull/499	Added Dell 1537 Vendor ID 0x19	guylamar2006	null	null	null	null	null	null	
2017-12-12 08:06:19.0	null	2020-10-02 17:46:43.0	open	[]	1	500	Fix description error	https://api.github.com/repos/torvalds/linux/issues/500	https://github.com/torvalds/linux/pull/500	After add support for ds2786 battery gas gauge，the description didn't update. fix it.	elicec	null	null	null	null	null	null	
2017-12-22 23:10:45.0	null	2017-12-22 23:15:07.0	open	[]	1	501	Add grub of bootloader list in INITRD help	https://api.github.com/repos/torvalds/linux/issues/501	https://github.com/torvalds/linux/pull/501	Hello,  Just to add grub in the help list of INITRD in "CONFIG_BLK_DEV_INITRD" section.  Best regards,  Thanks.	tazou	null	null	null	null	null	null	
2018-01-01 11:06:30.0	null	2020-10-02 17:46:38.0	open	[]	1	502	Removed white space	https://api.github.com/repos/torvalds/linux/issues/502	https://github.com/torvalds/linux/pull/502		aslamanver	null	null	null	null	null	null	
2018-01-04 18:59:02.0	2018-01-04 18:59:11.0	2018-01-16 01:06:18.0	closed	[]	2	503	x86: warn if unsecure CPU is being used	https://api.github.com/repos/torvalds/linux/issues/503	https://github.com/torvalds/linux/pull/503	Signed-off-by: Matteo Croce <mcroce@redhat.com>	teknoraver	null	null	null	null	null	null	
2018-01-05 15:49:16.0	2018-01-21 14:43:20.0	2018-01-21 14:43:20.0	closed	[]	5	504	Update common.c	https://api.github.com/repos/torvalds/linux/issues/504	https://github.com/torvalds/linux/pull/504	Update file because AMD actually IS affected by meltdown/spectre attack(s):  https://securityledger.com/2018/01/google-details-cpu-flaws-says-amd-arm-intel-affected/  https://tech.slashdot.org/story/18/01/04/0524234/google-says-almost-all-cpus-since-1995-vulnerable-to-meltdown-and-spectre-flaws  " [...] Spectre affects AMD and ARM as well (and likely other architectures too).   Best I can tell, the only CPUs guaranteed not affected by both are in-order architectures, which many older ARM (and extremely old x86) chips are.  These attacks are a sort of new category of security analysis--realizing that out of order execution can have side effects, and that programs can check for those side effects to leak program state and system memory. "  So yes, it would be safer to just don't touch this modified code - at least we are sure that CPU will be protected in case of any attack.	kspalaiologos	null	null	null	null	null	null	
2018-01-06 08:52:29.0	2019-03-01 16:01:24.0	2019-03-01 16:02:22.0	closed	[]	4	505	fix a bug refer to max_discard is 0	https://api.github.com/repos/torvalds/linux/issues/505	https://github.com/torvalds/linux/pull/505	typically TRIM cost shorter time than ERASE, so we expect max_trim as max_discard. But when ERASE timeout is too long, it did happened actually rather than theoretically.  A type of Toshiba eMMC's ERASE_TIMEOUT_MULT is too long and controller's max_busy_timeout is relatively small, then max_discard could be 0, even max_trim is available, but max_trim < max_disable can't be true, so we get a result of 0 instead of max_trim.	catShit	null	null	null	null	null	null	
2018-01-07 01:32:22.0	2018-01-07 01:40:45.0	2018-01-07 01:40:45.0	closed	[]	1	506	Fixed formating for cipher speed	https://api.github.com/repos/torvalds/linux/issues/506	https://github.com/torvalds/linux/pull/506		da-edra	null	null	null	null	null	null	
2018-01-15 11:15:19.0	2018-01-15 11:19:15.0	2018-01-15 11:19:15.0	closed	[]	1	507	experimental unblock	https://api.github.com/repos/torvalds/linux/issues/507	https://github.com/torvalds/linux/pull/507	Check if the blocking and unblocking works well for creating an effect of   ```perpetual force```	claymodel	null	null	null	null	null	null	
2018-01-17 20:40:01.0	null	2018-02-19 21:51:20.0	open	[]	1	508	[docs] - linux/documentation/abi/readme - minor tweaks [writing]	https://api.github.com/repos/torvalds/linux/issues/508	https://github.com/torvalds/linux/pull/508	###### [docs] - linux/documentation/abi/readme - minor tweaks [writing]	ghost	null	null	null	null	null	null	
2018-01-22 16:28:41.0	null	2020-10-02 17:46:32.0	open	[]	2	509	Sorting error	https://api.github.com/repos/torvalds/linux/issues/509	https://github.com/torvalds/linux/pull/509	Matt Mackal was placed at the top out of order. Recommending a pull to make the document follow the proposed sorting rules Linus intended.	kathryntolsen	null	null	null	null	null	null	
2018-01-22 21:06:12.0	2018-01-22 21:51:53.0	2018-01-22 21:51:53.0	closed	[]	1	510	Fixed several typographic issues for consistency	https://api.github.com/repos/torvalds/linux/issues/510	https://github.com/torvalds/linux/pull/510	For example, add capital letters in the beginning of some sentences, because for all other policy files it is done this way.	debianivanov	null	null	null	null	null	null	
2018-01-22 21:14:52.0	2018-01-22 21:51:25.0	2018-01-22 21:51:25.0	closed	[]	1	511	Fixed 32bit to 32-bit	https://api.github.com/repos/torvalds/linux/issues/511	https://github.com/torvalds/linux/pull/511	Very small change, but I think sufficient : )	debianivanov	null	null	null	null	null	null	
2018-01-24 05:28:22.0	2018-01-24 05:28:52.0	2018-01-24 05:28:52.0	closed	[]	0	512	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/512	https://github.com/torvalds/linux/pull/512	Syncing from original	hellozee	null	null	null	null	null	null	
2018-01-29 13:39:45.0	2018-01-29 13:40:07.0	2018-01-29 13:40:07.0	closed	[]	0	513	Update from Base	https://api.github.com/repos/torvalds/linux/issues/513	https://github.com/torvalds/linux/pull/513		Esteban-Rocha	null	null	null	null	null	null	
2018-01-31 01:06:02.0	2018-01-31 01:06:51.0	2018-01-31 01:09:21.0	closed	[]	0	514	Update README	https://api.github.com/repos/torvalds/linux/issues/514	https://github.com/torvalds/linux/pull/514		pbobyn91	null	null	null	null	null	null	
2018-02-05 08:01:44.0	2018-02-06 03:15:57.0	2018-02-09 12:57:12.0	closed	[]	5	515	Updates calculation of wTotalLength for UAC2 gadget USB descriptor	https://api.github.com/repos/torvalds/linux/issues/515	https://github.com/torvalds/linux/pull/515	According to specification (http://www.usb.org/developers/docs/devclass_docs/audio10.pdf, page 38), the descriptor header size should be included in wTotalLength. This **should** fix problem with UAC2 gadgets not getting recognized in Windows 10.	robiwano	null	null	null	null	null	null	
2018-02-08 09:13:15.0	null	2020-10-02 17:46:28.0	open	[]	1	516	EM-2040 i2c fixes DO NOT MERGE	https://api.github.com/repos/torvalds/linux/issues/516	https://github.com/torvalds/linux/pull/516	For early RFC/review purposes only!	oliv3r	null	null	null	null	null	null	
2018-02-12 04:44:46.0	null	2020-10-02 17:46:26.0	open	[]	1	517	Syntax consistency update when declaring variables	https://api.github.com/repos/torvalds/linux/issues/517	https://github.com/torvalds/linux/pull/517	Changing the basic variable declarations to be more consistent through out the file.	damienfamed75	null	null	null	null	null	null	
2018-02-14 17:09:58.0	null	2020-10-02 17:46:24.0	open	[]	1	518	x86: Treat R_X86_64_PLT32 as R_X86_64_PC32	https://api.github.com/repos/torvalds/linux/issues/518	https://github.com/torvalds/linux/pull/518	On i386, there are 2 types of PLTs, PIC and non-PIC.  PIE and shared  objects must use PIC PLT.  To use PIC PLT, you need to load  _GLOBAL_OFFSET_TABLE_ into EBX first.  There is no need for that on  x86-64 since x86-64 uses PC-relative PLT.    On x86-64, for 32-bit PC-relative branches, we can generate PLT32  relocation, instead of PC32 relocation, which can also be used as  a marker for 32-bit PC-relative branches.  Linker can always reduce  PLT32 relocation to PC32 if function is defined locally.   Local  functions should use PC32 relocation.  As far as Linux kernel is  concerned, R_X86_64_PLT32 can be treated the same as R_X86_64_PC32  since Linux kernel doesn't use PLT.    R_X86_64_PLT32 for 32-bit PC-relative branches has been enabled in  binutils master branch which will become binutils 2.31.    Tested with    commit 61f14c015f5be9151ba25e638d349f4d40cb7cd4  Merge: 178e834c47b0 791412dafbbf  Author: Linus Torvalds <torvalds@linux-foundation.org>  Date:   Tue Feb 13 09:35:17 2018 -0800        Merge tag 'mips_4.16_2' of git://git.kernel.org/pub/scm/linux/kernel/git/jhogan/mips    on x86-64, using binutils master branch:    commit 692d6f9760bc67b68a5c96baac47067fd7dfa711  Author: Tom Tromey <tom@tromey.com>  Date:   Tue Feb 13 13:34:45 2018 -0700        Constify target_so_ops::bfd_open    Signed-off-by: H.J. Lu <hjl.tools@gmail.com>	hjl-tools	null	null	null	null	null	null	
2018-02-15 09:39:18.0	null	2019-02-26 11:24:57.0	open	[]	5	519	USB: serial: cp210x: add new device EZP2010	https://api.github.com/repos/torvalds/linux/issues/519	https://github.com/torvalds/linux/pull/519	EZP2010 is a very popular Chinese USB SPI Programmer. Manufacturer provides only windows drivers, but this device is based on Silicon Labs CP210x chip, so it is not so hard to add it to the driver id table.	klukonin	null	null	null	null	null	null	
2018-02-16 21:16:07.0	null	2018-02-16 21:20:09.0	open	[]	1	520	driver/base: Refactor	https://api.github.com/repos/torvalds/linux/issues/520	https://github.com/torvalds/linux/pull/520		243083df	null	null	null	null	null	null	
2018-02-19 09:04:56.0	2018-02-19 09:07:38.0	2018-02-19 09:07:38.0	closed	[]	2	521	Jailhouse enabling/4.14	https://api.github.com/repos/torvalds/linux/issues/521	https://github.com/torvalds/linux/pull/521		anilkuamr	null	null	null	null	null	null	
2018-02-22 20:09:11.0	2018-05-26 14:20:30.0	2018-05-26 14:20:38.0	closed	[]	1	522	ALSA: usb: add quirk for Singxer F-1 DSD converter	https://api.github.com/repos/torvalds/linux/issues/522	https://github.com/torvalds/linux/pull/522	This patch adds native DSD support for the Singxer F-1 converter board.	patrickschaffrath	null	null	null	null	null	null	
2018-02-27 16:31:00.0	null	2020-10-02 17:46:17.0	open	[]	1	524	For better readability updated xz.txt file	https://api.github.com/repos/torvalds/linux/issues/524	https://github.com/torvalds/linux/pull/524	Updated xz.txt file to remove two conservative colons.  Example:: changed to Example:	mshingote	null	null	null	null	null	null	
2018-03-02 12:16:44.0	2018-03-03 07:00:10.0	2018-04-07 03:31:22.0	closed	[]	1	525	Wip syscall	https://api.github.com/repos/torvalds/linux/issues/525	https://github.com/torvalds/linux/pull/525		goswami-rahul	null	null	null	null	null	null	
2018-03-04 20:00:32.0	2018-03-04 20:01:01.0	2018-03-04 20:01:01.0	closed	[]	0	527	Documentation: teaching: labs: introduction: Fix typos	https://api.github.com/repos/torvalds/linux/issues/527	https://github.com/torvalds/linux/pull/527		andadrn	null	null	null	null	null	null	
2018-03-05 15:28:45.0	null	2020-10-02 17:46:15.0	open	[]	4	528	A question about your kernel 4.12.1	https://api.github.com/repos/torvalds/linux/issues/528	https://github.com/torvalds/linux/pull/528	Hello,    is your kernel compatible/usable with UP Squared also?    Thanks in advance,  Michael  	mickpf	null	null	null	null	null	null	
2018-03-07 03:19:33.0	2018-03-07 03:33:06.0	2018-03-19 10:29:44.0	closed	[]	4	529	test github	https://api.github.com/repos/torvalds/linux/issues/529	https://github.com/torvalds/linux/pull/529		h0n3ym4k	null	null	null	null	null	null	
2018-03-10 07:05:14.0	2018-03-10 09:21:31.0	2018-03-12 02:52:51.0	closed	[]	2	530	fix a typo in devicetree bindings.	https://api.github.com/repos/torvalds/linux/issues/530	https://github.com/torvalds/linux/pull/530		youxiaojie	null	null	null	null	null	null	
2018-03-10 16:10:55.0	2018-03-10 16:14:06.0	2018-03-19 10:28:37.0	closed	[]	1	531	SYSCALL	https://api.github.com/repos/torvalds/linux/issues/531	https://github.com/torvalds/linux/pull/531		dblackmorris	null	null	null	null	null	null	
2018-03-12 20:54:50.0	2018-03-12 20:55:22.0	2018-03-13 03:46:40.0	closed	[]	3	532	Documentation: lectures: Add draft 'Interrupts' lecture	https://api.github.com/repos/torvalds/linux/issues/532	https://github.com/torvalds/linux/pull/532	Addressed Tavi's comments. Still TODO: add info about IPI, add slide about IRQ handling in Linux (irq chips etc).	dbaluta	null	null	null	null	null	null	
2018-03-14 21:37:35.0	2018-03-14 21:39:24.0	2018-03-14 21:39:24.0	closed	[]	0	533	asdf	https://api.github.com/repos/torvalds/linux/issues/533	https://github.com/torvalds/linux/pull/533		smohebbi	null	null	null	null	null	null	
2018-03-17 10:15:17.0	2018-04-07 03:31:22.0	2018-04-07 03:31:22.0	closed	[]	1	534	9 bit uart	https://api.github.com/repos/torvalds/linux/issues/534	https://github.com/torvalds/linux/pull/534	is there any serialdriver to get 9 bit uart data  	vsivanagulu	null	null	null	null	null	null	
2018-03-18 20:58:32.0	2018-03-18 21:00:57.0	2018-03-18 21:00:57.0	closed	[]	1	535	lab04: exercises: fixed access variable reset 	https://api.github.com/repos/torvalds/linux/issues/535	https://github.com/torvalds/linux/pull/535	atomic_inc will not reset the access variable, and so, the resource will be busy at any second call. To solve, atomic_dec, or simply, atomic_set to 0, as implied in the TODO.	crmares	null	null	null	null	null	null	
2018-03-20 16:55:23.0	2018-03-20 16:57:44.0	2018-03-20 16:58:41.0	closed	[]	0	536	Fixed typo in time.c	https://api.github.com/repos/torvalds/linux/issues/536	https://github.com/torvalds/linux/pull/536	Randomly stumbled upon this:  LINE 184: "Verify we're witin" -> "Verify we're within"    //EDIT: Not the appropriate location for something like this	drewgrubb0	null	null	null	null	null	null	
2018-03-22 20:51:55.0	null	2020-10-02 17:46:12.0	open	[]	1	537	Fix misspelling: must not	https://api.github.com/repos/torvalds/linux/issues/537	https://github.com/torvalds/linux/pull/537	Signed-off-by: Piotr Kasprzyk <ciri@ciri.pl>	kwadrat	null	null	null	null	null	null	
2018-03-28 01:40:36.0	2018-03-28 01:42:13.0	2018-03-28 01:42:13.0	closed	[]	0	538	Aosp optee 4.9	https://api.github.com/repos/torvalds/linux/issues/538	https://github.com/torvalds/linux/pull/538		jsaxer	null	null	null	null	null	null	
2018-03-30 01:50:44.0	2018-03-30 01:51:51.0	2018-03-30 01:51:51.0	closed	[]	1	539	update	https://api.github.com/repos/torvalds/linux/issues/539	https://github.com/torvalds/linux/pull/539	update	chaosmamama	null	null	null	null	null	null	
2018-03-30 07:53:27.0	2019-03-21 08:22:10.0	2019-03-21 08:22:11.0	closed	[]	1	540	Add new FITRIM ioctl for fstrim to trim FAT file system	https://api.github.com/repos/torvalds/linux/issues/540	https://github.com/torvalds/linux/pull/540	FAT file system lacks the ability to handle FITRIM ioctl, thus we can not use fstrim one FAT filesys.  This change add FITRIM ioctl for fstrim or other tools to leverage.	witallwang	null	null	null	null	null	null	
2018-04-02 20:13:59.0	null	2020-10-02 17:46:09.0	open	[]	1	541	Proposal integration FN+F9 for KeyboardBacklight	https://api.github.com/repos/torvalds/linux/issues/541	https://github.com/torvalds/linux/pull/541	when trying to turn on the keyboard light FN+F9  ''' [  775.626810] acer_wmi: Unknown key number - 0x84 '''	webghostx	null	null	null	null	null	null	
2018-04-04 07:00:48.0	2018-04-04 07:01:17.0	2018-04-04 07:01:17.0	closed	[]	0	542	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/542	https://github.com/torvalds/linux/pull/542	update	rahrawat	null	null	null	null	null	null	
2018-04-04 18:24:22.0	2018-04-04 18:25:26.0	2018-04-04 18:25:26.0	closed	[]	1	543	Update from base	https://api.github.com/repos/torvalds/linux/issues/543	https://github.com/torvalds/linux/pull/543		Esteban-Rocha	null	null	null	null	null	null	
2018-04-05 09:31:06.0	2018-04-07 03:31:22.0	2018-04-07 03:31:22.0	closed	[]	1	544	Added sisusb for USB2VGA	https://api.github.com/repos/torvalds/linux/issues/544	https://github.com/torvalds/linux/pull/544	Specifically for the Magic Control Technology Corp. Magic Control Technology Corp. dongle.	teaberryy	null	null	null	null	null	null	
2018-04-06 13:38:28.0	2018-04-06 13:39:02.0	2018-04-06 13:44:15.0	closed	[]	1	545	[DELETE ME] PR on wrong repo, sorry.	https://api.github.com/repos/torvalds/linux/issues/545	https://github.com/torvalds/linux/pull/545	PR on wrong repo, sorry.	oliv3r	null	null	null	null	null	null	
2018-04-06 15:17:11.0	null	2020-10-02 17:46:06.0	open	[]	2	546	Removed the non working back-quotes from README.md  around make	https://api.github.com/repos/torvalds/linux/issues/546	https://github.com/torvalds/linux/pull/546	For some reason _make htmldocs_ is not changing into `make htmldocs` in README.md even after trying in multiple ways. So just removed the back quotes which were serving no use.	ShivajiReddy	null	null	null	null	null	null	
2018-04-06 23:03:32.0	2018-04-06 23:21:07.0	2018-04-06 23:21:07.0	closed	[]	2	547	DeleteMe Please	https://api.github.com/repos/torvalds/linux/issues/547	https://github.com/torvalds/linux/pull/547		FelipeRuizGarcia	null	null	null	null	null	null	
2018-04-08 11:09:06.0	null	2020-10-02 17:46:05.0	open	[]	2	548	Add kernal module meta-data	https://api.github.com/repos/torvalds/linux/issues/548	https://github.com/torvalds/linux/pull/548	Some software like firewalld depend on kernel module meta-data.  This patch will help to fix: https://github.com/firewalld/firewalld/issues/263	kvishnivetsky	null	null	null	null	null	null	
2018-04-08 14:10:33.0	null	2020-10-02 17:46:03.0	open	[]	10	549	Deleted commas in json file	https://api.github.com/repos/torvalds/linux/issues/549	https://github.com/torvalds/linux/pull/549	I deleted the commas that where right after the open curly brackets, because there wasn't anything in front of the commas.	Audition-CSBlock	null	null	null	null	null	null	
2018-04-23 04:44:35.0	2018-04-23 14:10:13.0	2018-04-23 14:10:58.0	closed	[]	1	550	Update skbuff.c	https://api.github.com/repos/torvalds/linux/issues/550	https://github.com/torvalds/linux/pull/550		compdzwio	null	null	null	null	null	null	
2018-04-23 14:29:44.0	2018-04-23 14:31:42.0	2018-04-23 14:31:42.0	closed	[]	1	551	easy understand	https://api.github.com/repos/torvalds/linux/issues/551	https://github.com/torvalds/linux/pull/551		compdzwio	null	null	null	null	null	null	
2018-05-07 04:35:04.0	null	2020-10-02 17:45:56.0	open	[]	1	552	Update timekeeping.h	https://api.github.com/repos/torvalds/linux/issues/552	https://github.com/torvalds/linux/pull/552	typo CLOCK_MONTONIC	jjnetcn	null	null	null	null	null	null	
2018-05-12 20:20:40.0	2018-05-15 10:04:37.0	2018-05-18 02:50:38.0	closed	[]	3	553	Renamed README to README.md for Markdown support.	https://api.github.com/repos/torvalds/linux/issues/553	https://github.com/torvalds/linux/pull/553		Dogacel	null	null	null	null	null	null	
2018-05-28 02:45:03.0	null	2020-10-02 17:45:51.0	open	[]	2	554	ideapad-laptop: Add E42-80 to no_hw_rfkill list	https://api.github.com/repos/torvalds/linux/issues/554	https://github.com/torvalds/linux/pull/554	`Lenovo Zhaoyang E42-80` is another Lenovo ideapad model **without a hw rfkill switch**, resulting in wifi always reported as hard blocked.  Add it to the list of models without rfkill switch.	dylanchu	null	null	null	null	null	null	
2018-05-29 14:23:39.0	2018-05-29 14:32:18.0	2018-05-29 14:36:32.0	closed	[]	1	555	.	https://api.github.com/repos/torvalds/linux/issues/555	https://github.com/torvalds/linux/pull/555	upstream	0x726f6b6d	null	null	null	null	null	null	
2018-05-30 12:16:40.0	2018-05-30 12:31:31.0	2018-05-30 12:31:31.0	closed	[]	1	556	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/556	https://github.com/torvalds/linux/pull/556	update upstream	rsy56640	null	null	null	null	null	null	
2018-06-03 14:48:14.0	null	2020-10-02 17:45:49.0	open	[]	1	557	[GitHub][docs] Rename README to README.md [markdown]	https://api.github.com/repos/torvalds/linux/issues/557	https://github.com/torvalds/linux/pull/557	Clearly this is a markdown file with markdown grammar. And change the filename extension can make GitHub give a better display.	Leo-Mu	null	null	null	null	null	null	
2018-06-05 09:42:15.0	null	2020-10-02 17:45:47.0	open	[]	4	558	Optimization	https://api.github.com/repos/torvalds/linux/issues/558	https://github.com/torvalds/linux/pull/558		ArtemOSDev	null	null	null	null	null	null	
2018-06-06 03:54:07.0	2018-06-19 07:44:06.0	2018-06-19 07:44:06.0	closed	[]	3	559	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/559	https://github.com/torvalds/linux/pull/559	update	haobinnan	null	null	null	null	null	null	
2018-06-09 02:16:22.0	2018-06-09 02:16:40.0	2018-06-09 02:16:40.0	closed	[]	0	560	update upstream #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/560	https://github.com/torvalds/linux/pull/560	update upstream	rsy56640	null	null	null	null	null	null	
2018-06-11 14:38:59.0	2018-06-11 14:39:27.0	2018-06-11 14:39:27.0	closed	[]	0	561	kcov: collect coverage from remote threads	https://api.github.com/repos/torvalds/linux/issues/561	https://github.com/torvalds/linux/pull/561		xairy	null	null	null	null	null	null	
2018-06-18 20:29:09.0	2018-10-11 20:10:00.0	2018-10-17 17:29:58.0	closed	[]	20	562	code made very faster	https://api.github.com/repos/torvalds/linux/issues/562	https://github.com/torvalds/linux/pull/562		impzero	null	null	null	null	null	null	
2018-06-25 18:56:44.0	2018-06-25 19:00:33.0	2018-06-25 19:00:39.0	closed	[]	1	563	Replaced tab with space	https://api.github.com/repos/torvalds/linux/issues/563	https://github.com/torvalds/linux/pull/563		ShietStone	null	null	null	null	null	null	
2018-06-28 09:10:06.0	2018-06-28 09:24:03.0	2018-06-28 09:24:03.0	closed	[]	1	564	Tcp wave 14 maintenance	https://api.github.com/repos/torvalds/linux/issues/564	https://github.com/torvalds/linux/pull/564		Ahmed1978	null	null	null	null	null	null	
2018-06-30 17:02:15.0	2018-06-30 19:29:29.0	2018-06-30 19:29:29.0	closed	[]	1	565	[hackers.mu][zero content-prevent cryptographic leaks]	https://api.github.com/repos/torvalds/linux/issues/565	https://github.com/torvalds/linux/pull/565	contents need to be zeroed otherwise cryptographic data will be leaked	yasirmx	null	null	null	null	null	null	
2018-07-03 15:01:32.0	2018-07-11 13:10:45.0	2018-07-11 13:10:45.0	closed	[]	1	566	Documentation: admin-guide: Adding sysrq-key combination for System Z…	https://api.github.com/repos/torvalds/linux/issues/566	https://github.com/torvalds/linux/pull/566	…/S390 arch.    I have made following changes in sysrq.rst    On System Z - Press 'CTRL-O-<command key>' on the hvc0 console.'CTRL-O' means                          pressing 'O' (not zero) while holding down the 'CTRL' key. For                          3270 console or line-mode HMC console: Pass '^-<command key>'                         Here, '^-' means cap and dash characters.    Signed-off-by: Prashant Dhamdhere <pdhamdhe@redhat.com>          	pdhamdhe	null	null	null	null	null	null	
2018-07-05 04:41:44.0	null	2020-10-02 17:45:39.0	open	[]	35	567	Auzeuner DVB-T2 (Astrometa 2018) driver update	https://api.github.com/repos/torvalds/linux/issues/567	https://github.com/torvalds/linux/pull/567	Hi Linus,     here is rtl28xxu.c rtl28xxu.h update with support cxd2837er demodulator for right function Astrometa 2018 dvb-t/t2/c stick. Works for me on linux kernel 4.17.2.	kapitanf	null	null	null	null	null	null	
2018-07-05 18:32:13.0	2018-11-22 17:07:00.0	2018-11-22 17:07:00.0	closed	[]	1	568	MD pull	https://api.github.com/repos/torvalds/linux/issues/568	https://github.com/torvalds/linux/pull/568		wburnett01	null	null	null	null	null	null	
2018-07-06 09:09:29.0	2018-07-06 09:21:09.0	2018-07-06 09:22:50.0	closed	[]	1	569	Tcp wave 14 maintenance	https://api.github.com/repos/torvalds/linux/issues/569	https://github.com/torvalds/linux/pull/569		Ahmed1978	null	null	null	null	null	null	
2018-07-08 08:20:58.0	null	2020-10-02 17:45:36.0	open	[]	1	570	Update meye.c	https://api.github.com/repos/torvalds/linux/issues/570	https://github.com/torvalds/linux/pull/570	validate user-controlled offset paramter to avoid  arbitrary access.	zrlw	null	null	null	null	null	null	
2018-07-15 16:43:33.0	null	2020-10-02 17:45:33.0	open	[]	1	571	Added support to Lenovo G50-XX screens	https://api.github.com/repos/torvalds/linux/issues/571	https://github.com/torvalds/linux/pull/571		pebeto	null	null	null	null	null	null	
2018-07-20 22:02:12.0	null	2020-10-02 17:45:31.0	open	[]	1	572	ARM: Tegra: T124 changes	https://api.github.com/repos/torvalds/linux/issues/572	https://github.com/torvalds/linux/pull/572	Tested on tegra124 mocha board with dual-channel MIPI DSI panel.	Insei	null	null	null	null	null	null	
2018-07-23 06:22:01.0	2018-07-23 06:29:09.0	2018-07-23 06:29:09.0	closed	[]	1	573	usb-audio: Topping DX7s quirk for DSD interface	https://api.github.com/repos/torvalds/linux/issues/573	https://github.com/torvalds/linux/pull/573		Wang-Yue	null	null	null	null	null	null	
2018-07-30 19:54:24.0	null	2020-10-02 17:45:29.0	open	[]	4	574	ath9k_htc: increase number of configurable virtual interfaces	https://api.github.com/repos/torvalds/linux/issues/574	https://github.com/torvalds/linux/pull/574	Testing with AR9271 USB device I was able to start 8 VAPs, but one client device could connect only if 7 VAPs were configured. This might need more work to make the feature fully usable, but even at present situation it enables functionality that was previously disabled.  Updated ath9k_htc firmware is required too, PR already opened: https://github.com/qca/open-ath9k-htc-firmware/pull/149    Signed-off-by: Tomislav Požega <pozega.tomislav@gmail.com>	psyborg55	null	null	null	null	null	null	
2018-08-06 01:07:19.0	2018-08-06 01:07:52.0	2018-08-06 01:07:52.0	closed	[]	0	575	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/575	https://github.com/torvalds/linux/pull/575	Update Files	chorman0773	null	null	null	null	null	null	
2018-08-06 07:11:47.0	null	2020-10-02 17:45:27.0	open	[]	2	576	tlb_uv.c: Add missing return value check to prevent nptr dereference.	https://api.github.com/repos/torvalds/linux/issues/576	https://github.com/torvalds/linux/pull/576	Function init_per_cpu() defined in arch/x86/platform/uv/tlb_uv.c calls kzalloc() to allocate memory for variable uvhub_mask which is used in function get_cpu_topology() and function summarize_uvhub_sockets() later. However, none of the 3 functions mentioned above checks whether uvhub_mask is NULL. As kzalloc() may return NULL, when get_cpu_topology() and summarize_uvhub_sockets() tries to dereference this pointer, it may cause NULL pointer dereference bug.	Jason2031	null	null	null	null	null	null	
2018-08-06 07:31:11.0	2018-08-17 02:30:02.0	2018-08-17 02:30:17.0	closed	[]	2	577	pktcdvd.c: Fix wrong return code when alloc_disk() fails.	https://api.github.com/repos/torvalds/linux/issues/577	https://github.com/torvalds/linux/pull/577	Function pkt_setup_dev() defined in drivers/block/pktcdvd.c calls alloc_disk(). However, it forgets to set the error return code when alloc_disk() fails. Instead, when alloc_disk() fails, it simply jumps to label 'out_mem' leaving the variable ret unchanged.	Jason2031	null	null	null	null	null	null	
2018-08-07 07:58:58.0	null	2020-10-02 17:45:26.0	open	[]	2	578	conntrack.c: Add missing return value check to prevent nptr dereference.	https://api.github.com/repos/torvalds/linux/issues/578	https://github.com/torvalds/linux/pull/578	Function ovs_ct_limit_cmd_get() defined in net/openvswitch/conntrack.c may cause a null pointer dereference as it calls nla_nest_start which may return NULL. The returned value is used in function nla_nest_end() later where the pointer is dereferenced.	Jason2031	null	null	null	null	null	null	
2018-08-07 08:28:04.0	null	2020-10-02 17:45:25.0	open	[]	3	579	team.c: Fix potential memory leak when __send_and_alloc_skb fails.	https://api.github.com/repos/torvalds/linux/issues/579	https://github.com/torvalds/linux/pull/579	Function team_nl_send_options_get() and team_nl_send_port_list_get() defined in drivers/net/team/team.c call function __send_and_alloc_skb() 2 times respectively. After the first call to function __send_and_alloc_skb(), pointer skb keeps the return value of nlmsg_new(), which should be freed by nlmsg_free() on exit. Function __send_and_alloc_skb() calls a function pointer send_func() which may return error. However, when the second call to __send_and_alloc_skb() fails, function team_nl_send_options_get() and team_nl_send_port_list_get() directly returns, leaving skb unfreed.	Jason2031	null	null	null	null	null	null	
2018-08-11 03:25:25.0	null	2020-10-02 17:45:22.0	open	[]	1	580	Update README	https://api.github.com/repos/torvalds/linux/issues/580	https://github.com/torvalds/linux/pull/580	To make README more friendly and provides link for beginners. 	jackm9367	null	null	null	null	null	null	
2018-08-12 02:04:19.0	null	2020-10-02 17:45:20.0	open	[]	2	581	Set theme jekyll-theme-slate	https://api.github.com/repos/torvalds/linux/issues/581	https://github.com/torvalds/linux/pull/581		betrr	null	null	null	null	null	null	
2018-08-15 09:27:05.0	2019-09-07 06:49:16.0	2019-09-07 06:49:16.0	closed	[]	1	582	Rename README to README.md	https://api.github.com/repos/torvalds/linux/issues/582	https://github.com/torvalds/linux/pull/582	Rename **README** to **README.md** for Markdown syntax highlighting :smile: 	Anon-Exploiter	null	null	null	null	null	null	
2018-08-26 06:48:23.0	null	2018-11-14 03:19:10.0	open	[]	2	583	Beautify README.md in a modern style	https://api.github.com/repos/torvalds/linux/issues/583	https://github.com/torvalds/linux/pull/583		Hirrolot	null	null	null	null	null	null	
2018-08-26 09:20:24.0	null	2020-10-02 17:45:14.0	open	[]	16	584	noting	https://api.github.com/repos/torvalds/linux/issues/584	https://github.com/torvalds/linux/pull/584		YQ93	null	null	null	null	null	null	
2018-08-27 08:16:47.0	null	2020-10-02 17:45:04.0	open	[]	1	585	Add device IRBIS TW36 coordinate	https://api.github.com/repos/torvalds/linux/issues/585	https://github.com/torvalds/linux/pull/585		Ilia1	null	null	null	null	null	null	
2018-08-27 20:54:45.0	2018-09-15 10:02:49.0	2018-09-15 10:02:49.0	closed	[]	1	586	Corrected parameter naming scheme	https://api.github.com/repos/torvalds/linux/issues/586	https://github.com/torvalds/linux/pull/586		ctrlsam	null	null	null	null	null	null	
2018-08-28 10:15:05.0	null	2020-10-02 17:45:03.0	open	[]	1	587	ahci.c -- add Marvell 88SE6141 SATA controller	https://api.github.com/repos/torvalds/linux/issues/587	https://github.com/torvalds/linux/pull/587	Added a line to support Marvell 88SE6141 SATA controller. According to https://forums.gentoo.org/viewtopic-t-581669-start-0.html this is what the manufacturer's driver did (i.e. patch the kernel with this line).  Adding this to the main ahci.c file would provide out-of-the box support for Marvell 88SE6141. 	jimcat	null	null	null	null	null	null	
2018-08-28 19:24:58.0	2018-08-28 19:28:51.0	2018-08-28 19:29:13.0	closed	[]	0	588	bad checkpatch	https://api.github.com/repos/torvalds/linux/issues/588	https://github.com/torvalds/linux/pull/588		elazar-lb	null	null	null	null	null	null	
2018-09-09 17:00:40.0	null	2020-10-02 17:45:00.0	open	[]	1	589	Fix tcmu sample code	https://api.github.com/repos/torvalds/linux/issues/589	https://github.com/torvalds/linux/pull/589		likema	null	null	null	null	null	null	
2018-09-12 18:14:00.0	null	2020-01-25 04:04:09.0	open	[]	17	590	Removed something that no one likes about Linux	https://api.github.com/repos/torvalds/linux/issues/590	https://github.com/torvalds/linux/pull/590	```                                                                                                                                                       -- it's literally nothing. We all love Linux and everything about it <3  ```	s0md3v	null	null	null	null	null	null	
2018-09-17 12:33:34.0	2018-09-17 14:45:59.0	2018-09-17 14:45:59.0	closed	[]	2	591	I think "code-of-conflict" and "code-of-product" should be removed because they will incite hatred	https://api.github.com/repos/torvalds/linux/issues/591	https://github.com/torvalds/linux/pull/591		ghost	null	null	null	null	null	null	
2018-09-17 18:46:54.0	null	2020-10-02 17:44:51.0	open	[]	5	592	Update bfa_defs.h	https://api.github.com/repos/torvalds/linux/issues/592	https://github.com/torvalds/linux/pull/592	Fixed Spacing	reavessm	null	null	null	null	null	null	
2018-09-19 10:07:40.0	2019-01-09 09:18:18.0	2019-01-09 09:18:18.0	closed	[]	94	593	Revert "Code of Conduct: Let's revamp it."	https://api.github.com/repos/torvalds/linux/issues/593	https://github.com/torvalds/linux/pull/593	This reverts commit 8a104f8b5867c682d994ffa7a74093c54469c11f.    Code is just code, no politics please.	jackwish	null	null	null	null	null	null	
2018-09-19 14:11:56.0	null	2020-10-02 17:44:48.0	open	[]	6	594	Let's re-insert the Code of Conflict. Greg Kroah-Hartman is an usurper.	https://api.github.com/repos/torvalds/linux/issues/594	https://github.com/torvalds/linux/pull/594	Undoing the Freedesktop.org coup. Linus was blackmailed.  ![45757254-80909080-bc55-11e8-953a-7a2f549a1f13](https://user-images.githubusercontent.com/11582807/45758938-666e9800-bbec-11e8-8594-e916f71c97cf.png)  	jason-oliveira	null	null	null	null	null	null	
2018-09-21 01:39:01.0	null	2020-10-02 17:44:46.0	open	[]	6	595	Rewriting code-of-conduct.rst to pinch scope and define it better	https://api.github.com/repos/torvalds/linux/issues/595	https://github.com/torvalds/linux/pull/595	As should be apparent by a number of other pull requests, contributors / users are not fond of the current Code of Conduct. So I rewrote it, in a manner that should more effectively convey the message whilst pinching the scope to the actual github, as opposed to the entire internet, as the wording was vague previously.    EDIT: If someone else can get this into the Linux Kernel Mailing List, I'd be greatly appreciative. I can't figure it out (keep getting a "missing operand" error, will try again on my main system as opposed to a secondary laptop come Monday).	SteveHeist	null	null	null	null	null	null	
2018-09-21 01:43:20.0	2018-09-21 18:13:12.0	2018-09-21 18:13:12.0	closed	[]	1	596	Code cleanup	https://api.github.com/repos/torvalds/linux/issues/596	https://github.com/torvalds/linux/pull/596	I did my best to clean up bits and pieces of the kernel code.	PierceGriffiths	null	null	null	null	null	null	
2018-09-21 18:14:47.0	null	2018-09-29 14:15:32.0	open	[]	4	597	Code cleanup in linux/sched/	https://api.github.com/repos/torvalds/linux/issues/597	https://github.com/torvalds/linux/pull/597		PierceGriffiths	null	null	null	null	null	null	
2018-09-23 21:46:13.0	null	2018-10-13 13:56:06.0	open	[]	2	598	corrected CoC typos	https://api.github.com/repos/torvalds/linux/issues/598	https://github.com/torvalds/linux/pull/598	feels more like it now :100:	oussamabouchareb	null	null	null	null	null	null	
2018-09-26 00:19:26.0	null	2020-10-02 17:44:37.0	open	[]	8	599	Replaced the Code of Conduct with the Code of Conflict	https://api.github.com/repos/torvalds/linux/issues/599	https://github.com/torvalds/linux/pull/599	Due to the amount of controversy following the installation of the Code of Conduct, I am opening this pull request to replace it with the original Code of Conflict, to, as put by Joey Pabalinas, "Unfuck our Codes of Conduct", and to stop the controversy and drama (two things I never liked).	AshtonSnapp	null	null	null	null	null	null	
2018-09-28 17:58:28.0	null	2018-12-02 13:02:07.0	open	[]	7	601	Delete code-of-conduct.rst	https://api.github.com/repos/torvalds/linux/issues/601	https://github.com/torvalds/linux/pull/601	Removing the PC code of conduct. There is no need for an outside body to dictate community guidelines for an open source community, people are free to be horrible however they want, we are programmers for Christ's sake we are naturally awkward I will not allow our awkwardness be used against us to defy us of our merit. This kernel is based on the fact that if you have good code, regardless of how politically incorrect, inappropriate you are whatever background you come from, whatever gender, religion, race, planet or what so ever should not dictate if your code is accepted, it should be based of the merit the quality of your code brings.	gabumoh	null	null	null	null	null	null	
2018-10-02 14:34:22.0	2018-10-03 10:42:53.0	2018-10-03 10:42:53.0	closed	[]	1	602	Ak	https://api.github.com/repos/torvalds/linux/issues/602	https://github.com/torvalds/linux/pull/602		Arcfrost	null	null	null	null	null	null	
2018-10-02 17:51:52.0	null	2020-10-02 17:44:29.0	open	[]	2	603	Optimize strspn.	https://api.github.com/repos/torvalds/linux/issues/603	https://github.com/torvalds/linux/pull/603	Variable count is redundant.	V0idk	null	null	null	null	null	null	
2018-10-05 02:36:48.0	2018-10-12 00:58:27.0	2018-10-22 16:31:41.0	closed	[]	7	604	fixed CoC	https://api.github.com/repos/torvalds/linux/issues/604	https://github.com/torvalds/linux/pull/604	fixed CoC.	al-caveman	null	null	null	null	null	null	
2018-10-06 16:08:32.0	null	2020-10-02 17:44:25.0	open	[]	2	605	I changed it to the KDE code of conduct	https://api.github.com/repos/torvalds/linux/issues/605	https://github.com/torvalds/linux/pull/605	Its better because it only cares aobut people's code not there race or gender which doesnt rly mater in programing like at all. All that should mater is your code not your race or gender	Colonizor48	null	null	null	null	null	null	
2018-10-09 02:29:16.0	2018-10-09 02:29:34.0	2018-10-09 02:29:34.0	closed	[]	1	606	merge	https://api.github.com/repos/torvalds/linux/issues/606	https://github.com/torvalds/linux/pull/606		jab-r	null	null	null	null	null	null	
2018-10-09 07:59:11.0	null	2018-11-21 09:40:55.0	open	[]	9	607	Reversed it to the code of conflict	https://api.github.com/repos/torvalds/linux/issues/607	https://github.com/torvalds/linux/pull/607	Much better.    We dont need to inject politics into this. So please.    	ghost	null	null	null	null	null	null	
2018-10-15 06:35:01.0	2018-10-23 03:45:42.0	2018-10-23 03:56:26.0	closed	[]	3	608	Riffa staging driver	https://api.github.com/repos/torvalds/linux/issues/608	https://github.com/torvalds/linux/pull/608	Added a full duplex riffa PCIe linux staging driver.     Signed-off-by: PHUNG CHENG FEI (feiphung@hotmail.com)	promach	null	null	null	null	null	null	
2018-10-15 14:24:49.0	2020-09-12 18:49:15.0	2020-09-12 18:49:15.0	closed	[]	1	609	Documented ac97_bus.c	https://api.github.com/repos/torvalds/linux/issues/609	https://github.com/torvalds/linux/pull/609	Documented ac97_bus.c for better understanding. :+1:	mufeedvh	null	null	null	null	null	null	
2018-10-17 11:38:59.0	2018-10-17 11:41:01.0	2018-10-17 11:55:39.0	closed	[]	1	610	crypto: ccp: Add Platform Security Processor (PSP) device support	https://api.github.com/repos/torvalds/linux/issues/610	https://github.com/torvalds/linux/pull/610	The Platform Security Processor (PSP) is part of the AMD Secure  Processor (AMD-SP) functionality. The PSP is a dedicated processor that  provides support for software-based Trusted Execution Environment (TEE)  to enable third-party trusted applications.    Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>  Signed-off-by: Rijo Thomas <Rijo-john.Thomas@amd.com>	rdeva1209	null	null	null	null	null	null	
2018-10-20 13:09:54.0	null	2018-11-05 19:34:13.0	open	[]	1	611	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/611	https://github.com/torvalds/linux/pull/611	更新	ahr-per	null	null	null	null	null	null	
2018-10-25 20:42:16.0	null	2018-11-21 09:04:26.0	open	[]	1	612	Updated the code-of-conduct to a much better code of conduct	https://api.github.com/repos/torvalds/linux/issues/612	https://github.com/torvalds/linux/pull/612	Changed it to the new SQLite CoC	VincentXE	null	null	null	null	null	null	
2018-10-27 03:15:56.0	2018-10-27 03:16:21.0	2018-10-27 03:16:21.0	closed	[]	1	613	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/613	https://github.com/torvalds/linux/pull/613	update	paulluo	null	null	null	null	null	null	
2018-10-28 07:19:51.0	2018-10-28 07:20:34.0	2019-02-12 18:41:30.0	closed	[]	0	614	ASoC:SOF Topic/remove duplicated defines	https://api.github.com/repos/torvalds/linux/issues/614	https://github.com/torvalds/linux/pull/614	remove some duplicated defines	zhuyingjiang	null	null	null	null	null	null	
2018-10-28 22:51:36.0	2018-10-29 00:21:48.0	2018-10-29 00:22:08.0	closed	[]	1	615	elan_i2c_core.c -- add ACPI ID for Lenovo Ideapad 330-15IGM	https://api.github.com/repos/torvalds/linux/issues/615	https://github.com/torvalds/linux/pull/615	Got this error in dmesg: i2c_hid i2c-ELAN061E:00: i2c-ELAN061E:00 supply vdd not found, using dummy regulator	ghost	null	null	null	null	null	null	
2018-10-29 12:47:15.0	null	2020-10-02 17:44:12.0	open	[]	4	616	added ELAN061E TOUCHPAD	https://api.github.com/repos/torvalds/linux/issues/616	https://github.com/torvalds/linux/pull/616	now support lenovo ideapad 330 15ARR (ryzen 3 model)	mansoorkodungallur	null	null	null	null	null	null	
2018-10-29 14:52:13.0	2018-10-29 14:52:35.0	2018-10-29 14:52:35.0	closed	[]	0	617	:)	https://api.github.com/repos/torvalds/linux/issues/617	https://github.com/torvalds/linux/pull/617		ghost	null	null	null	null	null	null	
2018-10-29 22:15:00.0	2020-07-12 19:23:11.0	2020-07-12 19:23:11.0	closed	[]	1	618	Allow root processes to call kernel task port	https://api.github.com/repos/torvalds/linux/issues/618	https://github.com/torvalds/linux/pull/618		Patrickk17	null	null	null	null	null	null	
2018-11-11 12:26:53.0	2018-11-11 12:27:18.0	2018-11-11 12:27:18.0	closed	[]	0	620	Merge 20181111	https://api.github.com/repos/torvalds/linux/issues/620	https://github.com/torvalds/linux/pull/620		AndyLavr	null	null	null	null	null	null	
2018-11-11 12:40:19.0	2018-11-11 12:41:49.0	2018-11-11 12:41:49.0	closed	[]	0	621	Merge pull request #11 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/621	https://github.com/torvalds/linux/pull/621	Merge head 20181111	AndyLavr	null	null	null	null	null	null	
2018-11-13 14:56:48.0	2018-11-13 14:57:01.0	2018-11-13 15:16:35.0	closed	[]	0	622	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/622	https://github.com/torvalds/linux/pull/622	Update Files	chorman0773	null	null	null	null	null	null	
2018-11-15 06:37:34.0	2018-11-15 06:39:39.0	2018-11-15 06:40:20.0	closed	[]	2	623	Dev0	https://api.github.com/repos/torvalds/linux/issues/623	https://github.com/torvalds/linux/pull/623		Dohbedoh	null	null	null	null	null	null	
2018-11-16 22:40:07.0	2018-11-16 22:52:37.0	2018-11-16 22:52:37.0	closed	[]	1	624	CMPE283 Assignment 1	https://api.github.com/repos/torvalds/linux/issues/624	https://github.com/torvalds/linux/pull/624	kernel module to read vmx controls  <Please reject the request, for learning purpose only>	khanayazahmad	null	null	null	null	null	null	
2018-11-21 11:49:42.0	null	2020-10-02 17:44:08.0	open	[]	1	625	Update xpad.c	https://api.github.com/repos/torvalds/linux/issues/625	https://github.com/torvalds/linux/pull/625	added   PDP Wired Controller for Xbox One - Crimson Red    idVendor           0x0e6f     idProduct          0x02a2	kingofsin	null	null	null	null	null	null	
2018-11-27 17:59:03.0	null	2020-10-02 17:44:06.0	open	[]	1	626	Add E-mu 0404 USB automatic sample rate	https://api.github.com/repos/torvalds/linux/issues/626	https://github.com/torvalds/linux/pull/626	Add old work patch...	khseal	null	null	null	null	null	null	
2018-11-30 15:21:19.0	2018-11-30 19:39:10.0	2018-11-30 19:39:10.0	closed	[]	1	627	Fix typo	https://api.github.com/repos/torvalds/linux/issues/627	https://github.com/torvalds/linux/pull/627	fixed typo in usr/Makefile comment section	oygen87	null	null	null	null	null	null	
2018-11-30 21:01:03.0	2018-12-06 14:02:08.0	2018-12-06 14:02:08.0	closed	[]	1	628	Fix broken Gmane URLs	https://api.github.com/repos/torvalds/linux/issues/628	https://github.com/torvalds/linux/pull/628	This is an automated pull request to fix broken Gmane URLs.    Here's what I did:   First I searched for Gmane URLs in your repo. For each Gmane URL, I checked if the content was available at the URL. For URLs where the content was not available, I first checked the `article` subdomain of Gmane, which has some content not available on the `thread` and `comments` subdomains.    If the content wasn't anywhere on Gmane's web interface, I resolved the URL to a [Message-ID](https://en.wikipedia.org/wiki/Message-ID) via the Gmane NNTP interface and tried to find the Message-ID on other mailing list archivers. I checked `mail-archive.com`, then `marc.info`, then `lists.debian.org` and so on.    If a new URL was found, I replaced it in this pull request. If the content wasn't found, I left the link alone.   	cyounkins-bot	null	null	null	null	null	null	
2018-12-01 02:47:30.0	2018-12-01 02:48:59.0	2019-03-14 02:55:25.0	closed	[]	3	629	a	https://api.github.com/repos/torvalds/linux/issues/629	https://github.com/torvalds/linux/pull/629	a	lonerinthenight	null	null	null	null	null	null	
2018-12-02 11:00:48.0	2019-03-15 22:03:08.0	2019-03-15 22:03:08.0	closed	[]	1	630	Sunxi next	https://api.github.com/repos/torvalds/linux/issues/630	https://github.com/torvalds/linux/pull/630	just on a13,thanks	badthird	null	null	null	null	null	null	
2018-12-04 09:06:28.0	null	2020-10-02 17:44:04.0	open	[]	1	631	spi: dw: fix potential variable assignment error	https://api.github.com/repos/torvalds/linux/issues/631	https://github.com/torvalds/linux/pull/631	spi::mode is defined by framework for several SPI capabilities, such as polarity, phase, bit-endian, wire number.  Directly use this variable for setting controller's polarity and phase is inappropriate.  Since SPI framework has its definition,  fetch required bit in spi::mode and set to register.	shaftarger	null	null	null	null	null	null	
2018-12-04 15:12:55.0	null	2019-02-18 12:22:13.0	open	[]	3	632	add ACPI ID for Lenovo IdeaPad 330-15ARR	https://api.github.com/repos/torvalds/linux/issues/632	https://github.com/torvalds/linux/pull/632	Add ELAN061E to the ACPI table to support Elan touchpad found in Lenovo IdeaPad 330-15ARR.	redmusicxd	null	null	null	null	null	null	
2018-12-10 18:50:05.0	2018-12-23 15:37:37.0	2019-01-23 14:05:29.0	closed	[]	4	633	add ACPI ID for ASUS Aspire F5-573G	https://api.github.com/repos/torvalds/linux/issues/633	https://github.com/torvalds/linux/pull/633	Add ELAN0501 to the ACPI table to support Elan touchpad found in ASUS Aspire F5-573G	patrickdreyer	null	null	null	null	null	null	
2018-12-21 17:52:39.0	null	2018-12-29 10:13:51.0	open	[]	1	634	sched/debug: Change /proc/sched_debug from 0444 to 0400	https://api.github.com/repos/torvalds/linux/issues/634	https://github.com/torvalds/linux/pull/634	Just like the upstream commit 8e7df2b, there's not enough reasons to read this file as non-root.  The old CVE-2014-1738 could have been prevented by this.	HacKurx	null	null	null	null	null	null	
2018-12-25 23:34:33.0	2019-01-07 21:12:13.0	2019-01-07 21:12:58.0	closed	[]	2	635	drm: panel-orientation-quirks: Add quirk for Lenovo Ideapad D330	https://api.github.com/repos/torvalds/linux/issues/635	https://github.com/torvalds/linux/pull/635	Lenovo Ideapad D330 Pentium CPU version has 1920x1200 LCD. Console ouput gets rotated at boot as Miix 310.    Signed-off-by: David Santamaría Rogado <howl.nsp@gmail.com>	howl	null	null	null	null	null	null	
2018-12-29 14:17:28.0	null	2018-12-29 14:19:19.0	open	[]	1	636	Create CODE_OF_CONDUCT.md	https://api.github.com/repos/torvalds/linux/issues/636	https://github.com/torvalds/linux/pull/636		abdullahkhilji	null	null	null	null	null	null	
2018-12-29 21:59:04.0	2019-02-13 08:35:13.0	2021-11-05 15:22:11.0	closed	[]	65	637	foo	https://api.github.com/repos/torvalds/linux/issues/637	https://github.com/torvalds/linux/pull/637		orhanerday	null	null	null	null	null	null	
2019-01-03 04:24:03.0	null	2020-10-02 17:43:57.0	open	[]	2	638	Fixes Typo when Spind and wait around	https://api.github.com/repos/torvalds/linux/issues/638	https://github.com/torvalds/linux/pull/638		Brakoman	null	null	null	null	null	null	
2019-01-03 16:46:16.0	2019-01-03 16:49:17.0	2019-01-03 16:49:18.0	closed	[]	1	639	Create saiki.txt	https://api.github.com/repos/torvalds/linux/issues/639	https://github.com/torvalds/linux/pull/639	trying pull request	saikirananumalla	null	null	null	null	null	null	
2019-01-06 07:07:11.0	null	2020-10-02 17:43:55.0	open	[]	1	640	Add Startech ICUSB2322X	https://api.github.com/repos/torvalds/linux/issues/640	https://github.com/torvalds/linux/pull/640	This is untested. I returned the device and bought a compatible one. Just dumping this here in case someone else wants to steal it/merge it. I don't have any motivation at this point to figure out the email submission process.    Originally from https://groups.google.com/d/msg/beagleboard/sSNHl1LvTN0/0UG54OI5PDwJ.	OzzieOrca	null	null	null	null	null	null	
2019-01-08 05:24:49.0	null	2020-10-02 17:43:53.0	open	[]	1	641	Update index.rst	https://api.github.com/repos/torvalds/linux/issues/641	https://github.com/torvalds/linux/pull/641	Correct spelling mistakes.	XUANLANcognition	null	null	null	null	null	null	
2019-01-09 19:01:36.0	2020-03-02 21:31:38.0	2020-03-03 15:55:31.0	closed	[]	2	642	Update CREDITS: minor typo	https://api.github.com/repos/torvalds/linux/issues/642	https://github.com/torvalds/linux/pull/642	Two spaces after a sentence instead of one in two places.	ZachSchaffer	null	null	null	null	null	null	
2019-01-14 07:43:41.0	2019-01-14 07:44:02.0	2019-01-14 07:44:02.0	closed	[]	0	643	Merge from Marvell's branch	https://api.github.com/repos/torvalds/linux/issues/643	https://github.com/torvalds/linux/pull/643		damfle	null	null	null	null	null	null	
2019-01-16 22:31:40.0	null	2020-10-02 17:43:50.0	open	[]	1	644	Fixes null reference execption on oid_search_table	https://api.github.com/repos/torvalds/linux/issues/644	https://github.com/torvalds/linux/pull/644	On Gentoo, trying to compile linux-5.0.0-rc2 failed until I copied oid_registry_data.c from 4.20 sources	reavessm	null	null	null	null	null	null	
2019-01-26 09:13:19.0	null	2020-10-02 17:43:48.0	open	[]	1	645	Merge tag 'fix_id-194593' 	https://api.github.com/repos/torvalds/linux/issues/645	https://github.com/torvalds/linux/pull/645	https://bugzilla.kernel.org/show_bug.cgi?id=194593    Updation of time constraints from jiffies to USER_HZ	Avanishka	null	null	null	null	null	null	
2019-01-28 04:02:36.0	null	2020-10-02 17:43:47.0	open	[]	1	646	fix sharpness control	https://api.github.com/repos/torvalds/linux/issues/646	https://github.com/torvalds/linux/pull/646	The original sharpness control is unable to work and we modify the code base on packet capture from Windows driver.  Tested with an "Easier CAP" UTV007 device.	shenyaocn	null	null	null	null	null	null	
2019-01-28 07:23:59.0	2019-01-28 07:25:01.0	2019-01-28 07:25:01.0	closed	[]	1	647	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/647	https://github.com/torvalds/linux/pull/647	merge master	fangwenqi	null	null	null	null	null	null	
2019-02-03 10:16:01.0	2019-02-03 12:00:04.0	2019-02-03 12:00:04.0	closed	[]	1	648	Add tsin pins for meson-gxbb/gxl/gxm	https://api.github.com/repos/torvalds/linux/issues/648	https://github.com/torvalds/linux/pull/648	This PR add tsin pins for meson-gxbb/gxl/gxm.  This PR was verified on LibreELEC Amlogic mainline kernel 4.20.5 build.	afl1	null	null	null	null	null	null	
2019-02-07 18:35:14.0	null	2019-02-14 10:51:26.0	open	[]	1	649	Fixed the README Format.	https://api.github.com/repos/torvalds/linux/issues/649	https://github.com/torvalds/linux/pull/649	It was not rendering as markdown because it was not a .md file.  I also added links for mentioned documents.	josephworks	null	null	null	null	null	null	
2019-02-08 09:01:01.0	2019-02-08 09:01:56.0	2019-02-08 09:01:56.0	closed	[]	0	650	Update README	https://api.github.com/repos/torvalds/linux/issues/650	https://github.com/torvalds/linux/pull/650	test	guhwan	null	null	null	null	null	null	
2019-02-14 21:19:46.0	2019-04-20 09:00:27.0	2019-04-20 09:00:27.0	closed	[]	1	651	minor update README	https://api.github.com/repos/torvalds/linux/issues/651	https://github.com/torvalds/linux/pull/651	It's not better so?	ghost	null	null	null	null	null	null	
2019-02-15 10:17:23.0	null	2020-10-02 17:43:42.0	open	[]	2	652	Update and rename README to README.rst	https://api.github.com/repos/torvalds/linux/issues/652	https://github.com/torvalds/linux/pull/652		khode-mohsen	null	null	null	null	null	null	
2019-02-22 00:41:10.0	null	2020-10-02 17:43:40.0	open	[]	1	653	changed:  linux/include/linux/list.h	https://api.github.com/repos/torvalds/linux/issues/653	https://github.com/torvalds/linux/pull/653	Added a few functions to work with double linked lists over integer indices.  list_part_of()  list_len()  list_add_at()  list_del_at()  list_get()  I used this functions as an extension in an other project and I thought that these are maybe useful for others. If they are not relevant enough, simply close this request.	idlmn	null	null	null	null	null	null	
2019-02-22 03:46:23.0	null	2020-10-02 17:43:39.0	open	[]	1	654	Do not overwrite INSTALL_HDR_PATH	https://api.github.com/repos/torvalds/linux/issues/654	https://github.com/torvalds/linux/pull/654	make intsall_headers overwrites the environment variable INSTALL_HDR_PATH, this commit allows it to be configured as described.	b1tninja	null	null	null	null	null	null	
2019-02-23 14:56:48.0	null	2021-06-14 03:04:58.0	open	[]	2	655	[vimrc]: cscope: implement cnext/cprev shortcuts	https://api.github.com/repos/torvalds/linux/issues/655	https://github.com/torvalds/linux/pull/655	Course presents F5/F6 keys as shortcuts to move between multiple  results but they are not implemented (not working).    "If there are more than one results (usually there are) you can  move between them using F6 and F5"  [cscope_shortcuts.zip](https://github.com/torvalds/linux/files/2896903/cscope_shortcuts.zip)    	LazarRazvan	null	null	null	null	null	null	
2019-02-26 23:11:33.0	2019-02-27 00:22:08.0	2019-02-27 00:22:12.0	closed	[]	1	656	Add dynfunc1() syscall	https://api.github.com/repos/torvalds/linux/issues/656	https://github.com/torvalds/linux/pull/656	dynfunc1() is a system call that supports adding function in kernel module to process parameter passed to dynfunc1().	shenchsh	null	null	null	null	null	null	
2019-03-03 14:52:06.0	null	2020-10-02 17:43:36.0	open	[]	12	657	created kunal1.txt	https://api.github.com/repos/torvalds/linux/issues/657	https://github.com/torvalds/linux/pull/657		crazykunal	null	null	null	null	null	null	
2019-03-05 05:35:12.0	2019-03-15 10:33:16.0	2020-01-15 15:15:18.0	closed	[]	8	658	Fisrt Commit	https://api.github.com/repos/torvalds/linux/issues/658	https://github.com/torvalds/linux/pull/658	test	LLiuJJ	null	null	null	null	null	null	
2019-03-05 18:47:43.0	2019-03-05 18:49:07.0	2020-04-01 04:08:56.0	closed	[]	0	659	0-list: update PROCFS_MAX_SIZE to 512	https://api.github.com/repos/torvalds/linux/issues/659	https://github.com/torvalds/linux/pull/659	Update PROCFS_MAX_SIZE to 512 to get rid of:  warning: the frame size of 1028 bytes is larger than 1024 bytes [-Wframe-larger-than=]	claudiughioc	null	null	null	null	null	null	
2019-03-06 01:55:01.0	null	2020-02-17 01:47:21.0	open	[]	1	660	Added new changes to README.md	https://api.github.com/repos/torvalds/linux/issues/660	https://github.com/torvalds/linux/pull/660		josephworks	null	null	null	null	null	null	
2019-03-08 13:55:22.0	null	2020-02-17 20:49:35.0	open	[]	4	661	Fixed typo: extra space.	https://api.github.com/repos/torvalds/linux/issues/661	https://github.com/torvalds/linux/pull/661	There was a double space.	jacob-macleod	null	null	null	null	null	null	
2019-03-13 12:59:13.0	2019-03-13 13:06:30.0	2019-03-13 13:06:30.0	closed	[]	2	662	gpio-f7188x: add support  for Fintek F81965	https://api.github.com/repos/torvalds/linux/issues/662	https://github.com/torvalds/linux/pull/662	As per specifications http://www.hardwaresecrets.com/datasheets/F81865_V028P.pdf  Updated logs for supported devices added from previous commit	Smiche	null	null	null	null	null	null	
2019-03-19 22:53:56.0	null	2019-03-23 20:31:56.0	open	[]	5	663	 i2c_hid: ELAN touchpad bugs fix	https://api.github.com/repos/torvalds/linux/issues/663	https://github.com/torvalds/linux/pull/663	While using ELAN touchpad's, there are messages flooding in journalctl and dmesg with incomplete report:  `[  581.465203] i2c_hid i2c-ELAN1200:00: i2c_hid_get_input: incomplete report (16/65535)`    Also there were the next bugs:    - If you touch touchpad with 5 fingers, the driver dies immediately.  - When you scroll anything, and release one finger, driver thought you are still scrolling    Recently, I spoke to ELANTECH and they send me a patch suggested by Intel to fix this issue. It was a simple hack, so me and guys from [redhat](https://bugzilla.redhat.com/show_bug.cgi?id=1543769#c130) forum created this patch.    It is fixed by adding additional quirk to trigger `IRQF_TRIGGER_FALLING` flag.    An explanation about why i2c_hid_init_irq section was moved under the i2c_hid_lookup_quirk, answered by Hans de Goede <hdegoede@redhat.com>:    > i2c_hid_init_irq now checks for a quirk, so we must setup the quirks before we init the irq, and we cannot setup the quirk earlier, so we must init the irq later.    So this commit revert's [this](https://github.com/torvalds/linux/commit/1475af255e18f35dc46f8a7acc18354c73d45149#diff-896178b83bacd485a53cd66e4cd7e2d0) commit, as no message flood can be seen by now, and fixes touchpad problems.    Signed-off-by: Vladislav Dalechyn <hotwater438@tutanota.com>	h0tw4t3r	null	null	null	null	null	null	
2019-03-21 15:14:51.0	null	2020-10-02 17:43:23.0	open	[]	1	664	Add compatibility to upboard/upsquared to blokas Pisound raspberry hat. 	https://api.github.com/repos/torvalds/linux/issues/664	https://github.com/torvalds/linux/pull/664	Sorry, mistake.... 	Fabreaur	null	null	null	null	null	null	
2019-03-22 07:01:42.0	null	2020-10-02 17:43:22.0	open	[]	1	665	Added erase page.	https://api.github.com/repos/torvalds/linux/issues/665	https://github.com/torvalds/linux/pull/665	There was no function to erase pages. so I added.	houwentaoff	null	null	null	null	null	null	
2019-03-27 03:44:03.0	null	2020-10-02 17:43:18.0	open	[]	7	666	FIX VARIOUS ISSUES	https://api.github.com/repos/torvalds/linux/issues/666	https://github.com/torvalds/linux/pull/666	BSD SHALL PREVAIL.    ISSUES CORRECTED: ALL	LEARAX	null	null	null	null	null	null	
2019-04-02 01:16:36.0	2019-04-06 07:08:29.0	2019-06-11 19:44:26.0	closed	[]	3	667	debug	https://api.github.com/repos/torvalds/linux/issues/667	https://github.com/torvalds/linux/pull/667	there were a lot of bugs so i removed all the bugs so now there are no bugs	ledlamp	null	null	null	null	null	null	
2019-04-06 03:23:07.0	null	2020-10-02 17:43:10.0	open	[]	4	668	Removed unnecessary space character from README	https://api.github.com/repos/torvalds/linux/issues/668	https://github.com/torvalds/linux/pull/668	Removed unnecessary space after the period, on line 9.	AlexanderTheGreat	null	null	null	null	null	null	
2019-04-06 15:18:12.0	2019-04-10 17:11:22.0	2019-04-10 17:11:22.0	closed	[]	4	669	Fixed spelling error in docs	https://api.github.com/repos/torvalds/linux/issues/669	https://github.com/torvalds/linux/pull/669	Fixed errors on the memory management page that were showing on the kernel docs	jakegore	null	null	null	null	null	null	
2019-04-12 16:42:51.0	2019-04-14 22:59:16.0	2019-04-14 22:59:16.0	closed	[]	0	670	Update fixdep.c to be more inclusive	https://api.github.com/repos/torvalds/linux/issues/670	https://github.com/torvalds/linux/pull/670	changed his to their	devyboy	null	null	null	null	null	null	
2019-04-23 13:03:59.0	2019-04-30 00:56:51.0	2019-04-30 00:56:51.0	closed	[]	0	671	Add an interface for CFS bandwidth	https://api.github.com/repos/torvalds/linux/issues/671	https://github.com/torvalds/linux/pull/671	I added an interface which is more intuitive and takes less write/read systemcalls.     I think that most people don't really care period and quota of CFS Bandwidth, They just use it like "I will allow this process to use 50% of single core" in most cases. But I know that we still need to care period and quota in some cases.    Please consider for merging this if you like, thanks.	0n1shi	null	null	null	null	null	null	
2019-05-02 16:39:54.0	null	2019-05-08 03:30:19.0	open	[]	1	672	Changed Documentation	https://api.github.com/repos/torvalds/linux/issues/672	https://github.com/torvalds/linux/pull/672	General Update of Documentation	ghost	null	null	null	null	null	null	
2019-05-03 12:58:13.0	null	2020-10-02 17:43:03.0	open	[]	1	673	drivers/gpio PCA9555 - epoll_wait(2) misses first irq after setting an irq mask...	https://api.github.com/repos/torvalds/linux/issues/673	https://github.com/torvalds/linux/pull/673	When ones changes the state of any input pins of a PCA9555 chip before setting up the IRQ mask through i.e. SysFS e.g.    echo "both" > /sys/class/gpio/gpioXYZ/edge the epoll_wait shall not exit on the subsequent change of the GPIO state.  The reason behind it is that the IRQ status is not being saved when the IRQ is masked.	metelik	null	null	null	null	null	null	
2019-05-03 19:59:00.0	null	2020-10-02 17:43:02.0	open	[]	2	674	Ideapad S205 has a hardware switch but den ACPI driver reads the hard…	https://api.github.com/repos/torvalds/linux/issues/674	https://github.com/torvalds/linux/pull/674	…ware state wrong, so the wifi is hard blocked and not working.    Instead of adding hundreds of exceptions of lenovo laptops, why not adding a switch for loading the module with wifi hardware state unblocked or something like this,	JohnCramer66	null	null	null	null	null	null	
2019-05-03 22:00:57.0	2019-08-24 14:55:50.0	2019-08-24 14:55:50.0	closed	[]	1	675	[Documentation Fix] LSM Hooks	https://api.github.com/repos/torvalds/linux/issues/675	https://github.com/torvalds/linux/pull/675	**Purpose**  This PR aims to fix the documentation of `bprm_set_creds` and `bprm_check_security` hooks.    **Issue**  Earlier the docstrings erroneously used `@bprm->security`. However, the `struct linux_binprm` does not have a `security` field. It has a `cred` field which in turn has the desired `security` `void *`. Hence the correct    **Fix**  The correct usage should be `@bprm->cred->security`. Hence I replaced all occurrences of `@bprm->security` with the correct one.    [SELinux](https://github.com/torvalds/linux/blob/master/security/selinux/hooks.c#L2323) too uses `bprm->cred->security` in their codebase.	ayushr2	null	null	null	null	null	null	
2019-05-06 03:04:02.0	2019-05-06 03:04:42.0	2019-05-06 03:04:42.0	closed	[]	0	676	PS4	https://api.github.com/repos/torvalds/linux/issues/676	https://github.com/torvalds/linux/pull/676	How do I merge?	Razor246	null	null	null	null	null	null	
2019-05-09 10:29:13.0	2019-05-09 10:31:02.0	2019-05-09 10:31:02.0	closed	[]	1	677	Ps4	https://api.github.com/repos/torvalds/linux/issues/677	https://github.com/torvalds/linux/pull/677	Merge	Razor246	null	null	null	null	null	null	
2019-05-10 22:17:33.0	2019-05-15 16:17:06.0	2019-05-15 16:17:06.0	closed	[]	1	678	dtc: Use pkg-config to locate libyaml	https://api.github.com/repos/torvalds/linux/issues/678	https://github.com/torvalds/linux/pull/678	Makefile's wildcard can find host header file which  leads to false-positive detection of presence of libyaml  installation when cross-compiling.	pmod	null	null	null	null	null	null	
2019-05-12 16:53:44.0	2019-05-12 16:54:14.0	2019-05-12 16:54:14.0	closed	[]	0	679	Ps4 5.1.0	https://api.github.com/repos/torvalds/linux/issues/679	https://github.com/torvalds/linux/pull/679		Razor246	null	null	null	null	null	null	
2019-05-13 20:32:35.0	2019-05-13 20:32:56.0	2019-05-13 20:33:09.0	closed	[]	0	680	Ps4 linux 5	https://api.github.com/repos/torvalds/linux/issues/680	https://github.com/torvalds/linux/pull/680		Razor246	null	null	null	null	null	null	
2019-05-16 00:13:36.0	null	2020-10-02 17:43:00.0	open	[]	1	681	Update hid-asus.c	https://api.github.com/repos/torvalds/linux/issues/681	https://github.com/torvalds/linux/pull/681	Asus Rog GL553VW FN keys and keyboard	danyconnect	null	null	null	null	null	null	
2019-05-16 00:15:14.0	null	2020-10-02 17:42:58.0	open	[]	1	682	Update hid-ids.h	https://api.github.com/repos/torvalds/linux/issues/682	https://github.com/torvalds/linux/pull/682	Asus Rog GL553VW FN + KEYBOARD	danyconnect	null	null	null	null	null	null	
2019-05-28 04:36:44.0	2019-05-28 04:37:10.0	2019-05-28 04:37:10.0	closed	[]	0	683	ignore this request	https://api.github.com/repos/torvalds/linux/issues/683	https://github.com/torvalds/linux/pull/683		sskmarthy	null	null	null	null	null	null	
2019-06-02 21:39:34.0	null	2020-03-03 05:11:02.0	open	[]	77	684	Update panic.c	https://api.github.com/repos/torvalds/linux/issues/684	https://github.com/torvalds/linux/pull/684		palmarci	null	null	null	null	null	null	
2019-06-03 18:12:47.0	null	2019-06-03 18:15:16.0	open	[]	1	685	ACPICA: Fix compilation with bare-metal toolchian	https://api.github.com/repos/torvalds/linux/issues/685	https://github.com/torvalds/linux/pull/685	An ifdef expects to be compiled with full-fledged Linux toolchain,  but it's common to compile kernel with just bare-metal toolchain  which doesn't define __linux__. So, also add __KERNEL__ check.    Signed-off-by: Laster K. (lazerl0rd) <officiallazerl0rd@gmail.com>	lazerl0rd	null	null	null	null	null	null	
2019-06-04 18:59:48.0	null	2021-06-18 22:05:15.0	open	[]	14	686	a)	https://api.github.com/repos/torvalds/linux/issues/686	https://github.com/torvalds/linux/pull/686	**СЛАВА УКРАЇНІ ТА КЕРНЕСУ ГЕННАДІЮ АДОЛЬФОВИЧУ**	shizofreniya	null	null	null	null	null	null	
2019-06-05 05:49:32.0	null	2020-10-02 17:42:06.0	open	[]	5	687	Fixed some typo and newline issues.	https://api.github.com/repos/torvalds/linux/issues/687	https://github.com/torvalds/linux/pull/687	some simple fixing and making more efficient.	shaswata56	null	null	null	null	null	null	
2019-06-08 17:11:46.0	null	2020-10-02 17:42:04.0	open	[]	3	688	Removed goto and used return.	https://api.github.com/repos/torvalds/linux/issues/688	https://github.com/torvalds/linux/pull/688	Results are same. But, more convenient.	shaswata56	null	null	null	null	null	null	
2019-06-09 06:00:05.0	null	2019-06-09 06:00:16.0	open	[]	1	689	media: dvbsky: use a single mutex and state buffers for all R/W ops	https://api.github.com/repos/torvalds/linux/issues/689	https://github.com/torvalds/linux/pull/689		koshkoshka	null	null	null	null	null	null	
2019-06-17 19:18:05.0	2019-06-17 19:55:10.0	2019-06-17 19:55:15.0	closed	[]	1	690	Use print() function in both Python 2 and Python 3	https://api.github.com/repos/torvalds/linux/issues/690	https://github.com/torvalds/linux/pull/690	Legacy __print__ statements are syntax errors in Python 3 but __print()__ function works as expected in both Python 2 and Python 3.  There are now less than 200 days until Python 2 end of life.	cclauss	null	null	null	null	null	null	
2019-06-20 09:53:47.0	null	2020-10-02 17:41:58.0	open	[]	1	691	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/691	https://github.com/torvalds/linux/pull/691	update	kalicatmix	null	null	null	null	null	null	
2019-06-21 06:02:49.0	2019-06-21 06:03:05.0	2019-06-21 06:03:15.0	closed	[]	0	692	Update 842.c	https://api.github.com/repos/torvalds/linux/issues/692	https://github.com/torvalds/linux/pull/692		rahulthesparrow	null	null	null	null	null	null	
2019-06-24 10:42:23.0	null	2020-10-02 17:41:55.0	open	[]	1	693	Add support for new Board: eval1a	https://api.github.com/repos/torvalds/linux/issues/693	https://github.com/torvalds/linux/pull/693	This Pull-Requests adds support for a new board named eval1a  The configuration has been tested and is working properly.	swissbyte	null	null	null	null	null	null	
2019-06-26 12:10:58.0	2019-07-22 11:36:47.0	2019-07-22 11:36:47.0	closed	[]	5	694	Significant kernel performance improvements	https://api.github.com/repos/torvalds/linux/issues/694	https://github.com/torvalds/linux/pull/694	I made huge improvements to the linux kernel by optimizing the code to not even compile at all so the runtime will be very close to O(0). This should make the kernel more usable for most users.	lvinci	null	null	null	null	null	null	
2019-06-30 13:12:37.0	null	2020-01-22 18:21:26.0	open	[]	22	695	Linux 6.0	https://api.github.com/repos/torvalds/linux/issues/695	https://github.com/torvalds/linux/pull/695	- Fixes lot of bugs	Jprimero15	null	null	null	null	null	null	
2019-07-01 12:57:43.0	2019-07-01 13:05:30.0	2019-07-01 13:05:30.0	closed	[]	1	696	dt-bindings: net: dsa: Fix documentation for qca8k	https://api.github.com/repos/torvalds/linux/issues/696	https://github.com/torvalds/linux/pull/696	Add missing Less than an Greater than signs in the examples.	tiagogaspar8	null	null	null	null	null	null	
2019-07-01 17:40:48.0	2019-07-01 17:43:56.0	2019-07-01 17:43:56.0	closed	[]	0	697	Modifief kexec_load syscall to support running EFI application.	https://api.github.com/repos/torvalds/linux/issues/697	https://github.com/torvalds/linux/pull/697	Currently only supports extremely simple apps like HelloWorld.efi    * kexec.h - Added KEXEC_RUN_PE flag to be passed to kexec_load. This is the  * kexec.c          - Implemented kimage_load_pe, kimage_run_pe          - Implemented EFI hooks to generate fake EFI system table and          fake EFI boot services.          - Implemented naive EFI AllocatePool, FreePool          - Implemented EFI conout to enable OutputString	oweisse	null	null	null	null	null	null	
2019-07-05 12:59:54.0	null	2020-10-02 17:41:38.0	open	[]	2	698	Remove the extra space characters at the end of lines for each file	https://api.github.com/repos/torvalds/linux/issues/698	https://github.com/torvalds/linux/pull/698	# Remove the extra space characters at the end of lines for each file in Linux kernel source    Because my email box can't send patches to LKML, so I created this PR.    I will also use my friends' email box to send my patch as soon as I can.    These changes may have something wrong, I will also have a check and improve, so please have a check before merging this PR.	xianfengting	null	null	null	null	null	null	
2019-07-07 15:10:14.0	null	2020-10-02 17:41:36.0	open	[]	1	699	Update cp210x.c	https://api.github.com/repos/torvalds/linux/issues/699	https://github.com/torvalds/linux/pull/699	Added Oregon Scientific WMR89 (0x0FDE, 0xCA0A)	LapplandsCohan	null	null	null	null	null	null	
2019-07-10 20:40:11.0	null	2020-10-02 17:41:33.0	open	[]	2	700	Corrected typo in comments in ksys_shmdt	https://api.github.com/repos/torvalds/linux/issues/700	https://github.com/torvalds/linux/pull/700	Corrected "it's" to "its"	crabasa	null	null	null	null	null	null	
2019-07-12 10:43:17.0	2019-07-12 18:38:33.0	2019-07-12 18:38:33.0	closed	[]	1	701	change README file	https://api.github.com/repos/torvalds/linux/issues/701	https://github.com/torvalds/linux/pull/701		eyadfareh	null	null	null	null	null	null	
2019-07-14 03:01:16.0	null	2020-10-02 17:41:32.0	open	[]	2	702	Updated and renamed Update to Update.md	https://api.github.com/repos/torvalds/linux/issues/702	https://github.com/torvalds/linux/pull/702	Moved to markup file, added hyperlinks, added welcome, added thanks.	MrMe42	null	null	null	null	null	null	
2019-07-28 13:10:50.0	2019-07-28 13:11:07.0	2019-07-28 13:11:10.0	closed	[]	0	703	Create test	https://api.github.com/repos/torvalds/linux/issues/703	https://github.com/torvalds/linux/pull/703	this is a test. will be removed.	Sadiqush	null	null	null	null	null	null	
2019-07-30 15:35:17.0	2019-07-30 15:36:47.0	2019-07-30 15:37:44.0	closed	[]	0	704	Kexec runtime services	https://api.github.com/repos/torvalds/linux/issues/704	https://github.com/torvalds/linux/pull/704	Now reaching phase 4 of Windows loading. Using original EFI runtime services	oweisse	null	null	null	null	null	null	
2019-07-31 19:43:04.0	null	2019-08-15 03:56:30.0	open	[]	2	705	Improved doc-comment in stackleak_plugin.c	https://api.github.com/repos/torvalds/linux/issues/705	https://github.com/torvalds/linux/pull/705	Cleaned documentation comment up. I removed the "TODO" because it was very old.	deeprobin	null	null	null	null	null	null	
2019-08-06 11:29:39.0	2019-08-06 11:39:25.0	2019-08-06 11:39:25.0	closed	[]	0	706	Enable system LED control	https://api.github.com/repos/torvalds/linux/issues/706	https://github.com/torvalds/linux/pull/706	Delete this	Mich3le3D	null	null	null	null	null	null	
2019-08-10 15:23:42.0	null	2020-10-02 17:41:24.0	open	[]	1	708	Create PKGBUILD	https://api.github.com/repos/torvalds/linux/issues/708	https://github.com/torvalds/linux/pull/708	Allowing Arch users to compile and install linux easier	Redo11	null	null	null	null	null	null	
2019-08-11 00:21:04.0	null	2020-10-02 17:41:22.0	open	[]	3	709	ecdsa generic algorithm	https://api.github.com/repos/torvalds/linux/issues/709	https://github.com/torvalds/linux/pull/709	Follow the ECDSA generic algorithm for linux kernel 5.3. This is part of work to signed modules with nist ECDSA p256 and p384.	SauloAlessandre	null	null	null	null	null	null	
2019-08-14 19:40:42.0	null	2019-09-19 09:38:58.0	open	[]	2	710	Update security.c	https://api.github.com/repos/torvalds/linux/issues/710	https://github.com/torvalds/linux/pull/710		rohand2290	null	null	null	null	null	null	
2019-08-15 15:46:06.0	2019-08-17 21:57:57.0	2019-08-17 21:57:57.0	closed	[]	1	711	 There should be a comma after 'Therefore'.	https://api.github.com/repos/torvalds/linux/issues/711	https://github.com/torvalds/linux/pull/711		marload	null	null	null	null	null	null	
2019-08-20 03:28:58.0	null	2019-08-20 03:30:16.0	open	[]	1	712	Add Royal Purple PDP Wired Xbox One Controller	https://api.github.com/repos/torvalds/linux/issues/712	https://github.com/torvalds/linux/pull/712		Multimegamander	null	null	null	null	null	null	
2019-08-21 12:24:41.0	null	2020-10-02 17:41:13.0	open	[]	2	713	Update README,added languages	https://api.github.com/repos/torvalds/linux/issues/713	https://github.com/torvalds/linux/pull/713	I've made a better README file;  It looks beautiful;  And I've added some more languages,I think it will help many foreign people **understand the README better**    Please accept my change ,it will help many people   _**Thanks a lot!!!!!**_	admiral-thrawn	null	null	null	null	null	null	
2019-08-29 06:55:12.0	2019-08-29 07:09:52.0	2019-08-29 07:09:52.0	closed	[]	2	714	Added defconfig and fitImage for GE	https://api.github.com/repos/torvalds/linux/issues/714	https://github.com/torvalds/linux/pull/714	Signed-off-by: Tanvi Desai <tanvid@SSWLAB.open-silicon.com>	tanvidesai94	null	null	null	null	null	null	
2019-09-04 01:53:49.0	2019-09-04 04:59:13.0	2019-09-04 04:59:13.0	closed	[]	1	715	remove the acheive sp error	https://api.github.com/repos/torvalds/linux/issues/715	https://github.com/torvalds/linux/pull/715	I was hacking on and read this acheive in xfs_inode and decided to fix it everywhere because it pissed me off so much. 	MarcusSorealheis	null	null	null	null	null	null	
2019-09-04 21:41:10.0	null	2020-10-02 17:41:11.0	open	[]	1	716	Added support for 0079:1846 Mayflash/Dragonrise USB Gamecube Controller Adapter	https://api.github.com/repos/torvalds/linux/issues/716	https://github.com/torvalds/linux/pull/716	Mayflash/Dragonrise seems to have yet another device ID for one of their Gamecube controller  adapters.  Previous to this commit, the adapter registered only one /dev/input/js* device, and  all controller inputs (from any controller) were mapped to this device.  This patch defines the  1846 USB device ID and enables the HID_QUIRK_MULTI_INPUT quirk for it, which ~~should~~ (I can now confirm: _does_) fix that.	redyoshi49q	null	null	null	null	null	null	
2019-09-05 21:40:09.0	2019-09-16 17:59:48.0	2019-09-16 17:59:48.0	closed	[]	1	717	Fix DCCP charter URL at dccp.txt	https://api.github.com/repos/torvalds/linux/issues/717	https://github.com/torvalds/linux/pull/717		dimmo	null	null	null	null	null	null	
2019-09-06 06:03:55.0	null	2020-10-02 17:41:09.0	open	[]	1	718	arch/riscv: disable too many harts before pick main boot hart	https://api.github.com/repos/torvalds/linux/issues/718	https://github.com/torvalds/linux/pull/718	The original code may cause the main hart to execute the boot sequence to be too many hart    Signed-off-by: Xiang Wang <merle@hardenedlinux.org>	wxjstz	null	null	null	null	null	null	
2019-09-14 17:34:16.0	null	2020-10-02 17:41:08.0	open	[]	1	720	created survey.py	https://api.github.com/repos/torvalds/linux/issues/720	https://github.com/torvalds/linux/pull/720	...	Gurseerit	null	null	null	null	null	null	
2019-09-19 02:54:28.0	2019-09-19 02:57:13.0	2019-09-19 02:57:28.0	closed	[]	1	721	[CP 5.3.1] Custom update version	https://api.github.com/repos/torvalds/linux/issues/721	https://github.com/torvalds/linux/pull/721		phungmanhcuong	null	null	null	null	null	null	
2019-09-22 02:55:51.0	2019-09-22 02:56:02.0	2019-09-22 02:56:02.0	closed	[]	0	722	5.0	https://api.github.com/repos/torvalds/linux/issues/722	https://github.com/torvalds/linux/pull/722		yash2710	null	null	null	null	null	null	
2019-09-23 19:09:40.0	2019-09-23 23:27:43.0	2019-09-23 23:27:43.0	closed	[]	1	723	Use memset to initialize "union bpf_attr"	https://api.github.com/repos/torvalds/linux/issues/723	https://github.com/torvalds/linux/pull/723	={} promises to initialize only the first member of the union	vitalybuka	null	null	null	null	null	null	
2019-09-23 21:31:07.0	null	2020-10-02 17:41:04.0	open	[]	1	724	Specify GFP_DMA for DMA-capable memory allocation in Firewire Driver	https://api.github.com/repos/torvalds/linux/issues/724	https://github.com/torvalds/linux/pull/724	When dynamically allocating DMA-capable memory in PowerPC, the kernel must explicitly specify the GFP_DMA flag.     Tested with T2080 Processor communicating over PCIe to two TI 1394 OHCI links.	Jerkim007	null	null	null	null	null	null	
2019-09-24 09:24:27.0	2019-09-24 09:26:35.0	2019-09-24 09:26:35.0	closed	[]	1	725	merge 262 commits into CarDGee:master from torvalds:master	https://api.github.com/repos/torvalds/linux/issues/725	https://github.com/torvalds/linux/pull/725	merge 262 commits into CarDGee:master from torvalds:master	CarDGee	null	null	null	null	null	null	
2019-09-25 12:20:01.0	null	2020-10-02 17:41:03.0	open	[]	1	726	Bionic develop	https://api.github.com/repos/torvalds/linux/issues/726	https://github.com/torvalds/linux/pull/726	Noalink test	rgondip1	null	null	null	null	null	null	
2019-09-25 14:50:46.0	null	2020-10-02 17:41:01.0	open	[]	15	727	created pizza	https://api.github.com/repos/torvalds/linux/issues/727	https://github.com/torvalds/linux/pull/727		Kumaresan2002	null	null	null	null	null	null	
2019-09-26 17:43:46.0	null	2020-10-02 17:40:49.0	open	[]	3	728	Fix typo in a comment	https://api.github.com/repos/torvalds/linux/issues/728	https://github.com/torvalds/linux/pull/728		dolby360	null	null	null	null	null	null	
2019-10-03 16:03:03.0	null	2019-10-03 16:05:15.0	open	[]	1	729	A small demo from mourya	https://api.github.com/repos/torvalds/linux/issues/729	https://github.com/torvalds/linux/pull/729		loopzeronoob	null	null	null	null	null	null	
2019-10-03 16:27:21.0	null	2019-10-03 16:30:18.0	open	[]	1	730	From Mourya2	https://api.github.com/repos/torvalds/linux/issues/730	https://github.com/torvalds/linux/pull/730		loopzeronoob	null	null	null	null	null	null	
2019-10-04 02:11:53.0	2019-10-04 02:13:03.0	2019-10-04 02:51:22.0	closed	[]	0	731	merge V5.5/dt64	https://api.github.com/repos/torvalds/linux/issues/731	https://github.com/torvalds/linux/pull/731		yrzr	null	null	null	null	null	null	
2019-10-04 22:03:02.0	2019-12-14 23:32:11.0	2019-12-14 23:32:33.0	closed	[]	3	732	dtc: Use pkg-config to locate libyaml	https://api.github.com/repos/torvalds/linux/issues/732	https://github.com/torvalds/linux/pull/732	Makefile's wildcard use predefined location of yaml.h  header file which may lead to false-positive detection  of presence of libyaml installation when cross-compiling  (e.g. in yocto environment).  Use instead pkg-config to detect libyaml.	pmod	null	null	null	null	null	null	
2019-10-05 19:32:01.0	2019-10-05 19:33:40.0	2019-10-05 19:33:40.0	closed	[]	0	733	Hotfix	https://api.github.com/repos/torvalds/linux/issues/733	https://github.com/torvalds/linux/pull/733		nikolajssosnins	null	null	null	null	null	null	
2019-10-05 19:41:15.0	2019-10-05 19:41:29.0	2019-10-05 19:41:29.0	closed	[]	0	734	Release v0.1	https://api.github.com/repos/torvalds/linux/issues/734	https://github.com/torvalds/linux/pull/734		nikolajssosnins	null	null	null	null	null	null	
2019-10-07 17:19:05.0	null	2020-10-02 17:40:43.0	open	[]	1	735	Update dns_resolver-type.h	https://api.github.com/repos/torvalds/linux/issues/735	https://github.com/torvalds/linux/pull/735	updated line 5 updated	KotwalNikhil	null	null	null	null	null	null	
2019-10-07 20:49:14.0	null	2020-10-02 17:40:42.0	open	[]	1	736	Quote to prevent globbing and word splitting	https://api.github.com/repos/torvalds/linux/issues/736	https://github.com/torvalds/linux/pull/736	prevent globbing and word splitting	mztriz	null	null	null	null	null	null	
2019-10-09 04:36:42.0	2019-10-09 04:43:03.0	2019-10-09 04:43:03.0	closed	[]	1	737	Adding status of environment setting to readme file	https://api.github.com/repos/torvalds/linux/issues/737	https://github.com/torvalds/linux/pull/737	Environment setting	sacefe	null	null	null	null	null	null	
2019-10-09 10:50:09.0	null	2020-10-02 17:40:40.0	open	[]	2	738	Update README	https://api.github.com/repos/torvalds/linux/issues/738	https://github.com/torvalds/linux/pull/738		Chaitanya31612	null	null	null	null	null	null	
2019-10-09 12:39:43.0	null	2020-10-02 17:40:38.0	open	[]	1	739	Added colon	https://api.github.com/repos/torvalds/linux/issues/739	https://github.com/torvalds/linux/pull/739	I added colon for stating the subtypes	imsahil007	null	null	null	null	null	null	
2019-10-09 19:41:37.0	2019-10-14 15:20:10.0	2019-10-16 12:57:19.0	closed	[]	2	740	Updating deprecated SPDX license headers	https://api.github.com/repos/torvalds/linux/issues/740	https://github.com/torvalds/linux/pull/740	In the 3.0 release of the SPDX license list the use of just `GPL-x.x` or `GPL-x.x+` was deprecated in favor of specifying `GPL-x.x-only` or `GPL-x.x-or-later`.     I wrote a script to go through and update the outdated headers:  ```  find . -type f -print0 | xargs -0 -I % perl -pi -e \   's/(SPDX-License-Identifier:.*GPL-\d\.\d(?!(-only|-or-later|\+)))/$1-only/g' %    find . -type f -print0 | xargs -0 -I % perl -pi -e \   's/(SPDX-License-Identifier:.*GPL-\d\.\d)(\+)/$1-or-later/g' %  ```    The first regex statement is to replace `GPL-x.x` with `GPL-x.x-only`. It looks for `SPDX-License-Identifier:` followed by 0 or more of any characters except new lines, followed by `GPL-{digit}.{digit}`, and then a negative lookahead to discard the match if it is followed by `-only` or `-or-later` to ignore headers that have already been updated. The matched statement is appended with `-only` by taking the capture group 1 followed by -only with `$1-only`.    The second regex statement is to replace `GPL-x.x+` with `GPL-x.x-or-later`. It looks for `SPDX-License-Identifier:` followed by 0 or more of any characters except new lines, followed by `GPL-{digit}.{digit}+`. The statement is split into 2 capture groups so that the `+` character can be thrown away before appending `-or-later` with  `$1-or-later`.	badcf00d	null	null	null	null	null	null	
2019-10-11 05:00:35.0	null	2020-10-02 17:40:34.0	open	[]	1	741	Update README	https://api.github.com/repos/torvalds/linux/issues/741	https://github.com/torvalds/linux/pull/741	Updated readme is provided here	thekapilkhandelwal	null	null	null	null	null	null	
2019-10-13 16:46:34.0	null	2020-10-02 17:40:31.0	open	[]	1	742	Minor grammatical changes to multiqueue.txt	https://api.github.com/repos/torvalds/linux/issues/742	https://github.com/torvalds/linux/pull/742	Made some minor grammatical changes to the file.	moi238	null	null	null	null	null	null	
2019-10-14 09:16:46.0	null	2020-10-02 17:40:30.0	open	[]	1	743	Linux Commands	https://api.github.com/repos/torvalds/linux/issues/743	https://github.com/torvalds/linux/pull/743		gurpreetsahni	null	null	null	null	null	null	
2019-10-19 19:46:03.0	null	2020-10-02 17:40:24.0	open	[]	1	744	Added rtl8188eus realtek wireless driver files	https://api.github.com/repos/torvalds/linux/issues/744	https://github.com/torvalds/linux/pull/744	There were a lot of issues on installing this driver on linux due to error in driver installation files.  The driver files have been modified and have been updated	NithinSGowda	null	null	null	null	null	null	
2019-10-20 04:53:37.0	2019-11-09 08:33:13.0	2019-11-09 08:33:13.0	closed	[]	2	745	IPC msg.c changed	https://api.github.com/repos/torvalds/linux/issues/745	https://github.com/torvalds/linux/pull/745		ghost	null	null	null	null	null	null	
2019-10-22 18:16:49.0	null	2020-10-02 17:40:22.0	open	[]	10	746	[netfilter]: Fix skb->csum calculation when netfilter manipulation for NF_NAT_MANIP_SRC\DST is done on IPV6 packet.	https://api.github.com/repos/torvalds/linux/issues/746	https://github.com/torvalds/linux/pull/746	 [netfilter]: Fix skb->csum calculation when netfilter manipulation fo…    …r NF_NAT_MANIP_SRC\DST is done on IPV6 packet.    No need to update skb->csum in function inet_proto_csum_replace16(),  even if skb->ip_summed == CHECKSUM_COMPLETE, because change in L4  header checksum field and change in IPV6 header cancels each other  for skb->csum calculation.    Signed-off-by: Praveen Chaudhary <pchaudhary@linkedin.com>  Signed-off-by: Zhenggen Xu <zxu@linkedin.com>  Signed-off-by: Andy Stracner <astracner@linkedin.com>    Reviewed-by: Florian Westphal <fw@strlen.de>    ---    Changes in V2.  1.) Updating diff as per email discussion with Florian Westphal.      Since inet_proto_csum_replace16() does incorrect calculation      for skb->csum in all cases.  2.) Change in Commmit logs.    ---      -------------Issue [BUG in current code]:-------------    IPV6 UDP packet is dropped by kernel in function udp6_csum_init(), when netfilter for NF_NAT_MANIP_SRC\DST is applied.        Counter increased: Udp6InCsumErrors. Note: incoming UPD6 packet has correct UDP checksum.       -------------Reproduction steps: (using IPV6 UDP DNS Query)--- [linux kernel any version > 4.9.110]-------------    1.) Set an SNAT entry in /etc/iptables/rules.v6 as show below.  ```      -A POSTROUTING -p udp -m udp --dport 53 -o Ethernet+ -j SNAT --to-source 2a04:xxxx:xxxx:4::2 (Masked)  ```  Note: Above rule will change ipv6 source address to 2a04:xxxx:xxxx:4::2 for outgoing UDPv6 DNS packet , and will change the ipv6 destination address from 2a04:xxxx:xxxx:4::2 to original ipv6 address for incoming DNS response.    2.) Apply the iptable changes.  ```      switch$ sudo /etc/network/if-pre-up.d/iptables  ```  3.) Run a DNS query using IPV6 DNS server for any site. We can observe that DNS query is timed out.  ```      switch$ host facebook.com 2a04:xxxx:xx:1::c216      ;; connection timed out; no servers could be reached  ```    ---------------Details of issue----------------    1.) On incoming path:   Function Trace: udp_error()-->nf_checksum()-->nf_ip6_checksum():    In function nf_ip6_checksum(); checksum is verified for incoming packet. Here skb->data points to IPV6 HEADER and ip_summed == CHECKSUM_NONE at start. So after a call to __skb_checksum_complete, skb->csum will store the 16-bit sum of [ipv6 header + UDP header + UDP data].    Checksum verification will be successful here, because csum_ipv6_magic() subtracts 16-bit sum of IPv6 header from 16-bit sum of Pseudo header.    Note: UDP checksum = ~[pseudo header + UDP header + UDP data].      2.) SNAT iptable rule processing,     Function Trace: nf_nat_ipv6_manip_pkt()--> l4proto_manip_pkt()-->udp_manip_pkt()-->__udp_manip_pkt()-->nf_csum_update()---> nf_nat_ipv6_csum_update()-->inet_proto_csum_replace16():    In function inet_proto_csum_replace16(), first udp_header checksum field will be updated as below, because of the NF_NAT_MANIP_SRC\DST manipulation,  I.e to reflect IPV6 src\dst address change in IPV6 header.  ```          *sum = csum_fold(csum_partial(diff, sizeof(diff),                   ~csum_unfold(*sum)));  ```    Since skb->csum includes udp header checksum field, skb->csum will also go through similar calculation to reflect udp header checksum field change.  ```      if (skb->ip_summed == CHECKSUM_COMPLETE && pseudohdr)              skb->csum = ~csum_partial(diff, sizeof(diff),                            ~skb->csum);  ```  After this update, skb->csum = [Original IPV6 Header + Modified UDP header + UDP data]        3.) Then in function nf_nat_ipv6_manip_pkt(), ipv6 header will be updated to have target IPV6 src\dst address:        ```   if (maniptype == NF_NAT_MANIP_SRC)      ipv6h->saddr = target->src.u3.in6;   else    ipv6h->daddr = target->dst.u3.in6;    ```  Here we do not update skb->csum. So skb->csum will still be equal to [Original IPV6 Header + Modified UDP header + UDP data].   **BUG BUG BUG**: This is the bug, skb->csum must be updated to reflect this change in IPV6 SRC Address.    Ideally change in UDP header checksum field and change in IPV6 SRC address cancels each other in this case, so no update was needed in skb->csum in function inet_proto_csum_replace16().    4.) IPV6 header processing:     Function Trace: ip6_input() --> ip6_input_finish() --> ip6_protocol_deliver_rcu():    In ip6_protocol_deliver_rcu(), 16-bit sum of IPV6 header will be subtracted from skb->csum.    ```      skb_postpull_rcsum(skb, skb_network_header(skb),                         skb_network_header_len(skb));  ```    This is the sum of new IPV6 header with modified IPV6 Source\dest address. After this subtraction     skb->csum = [Original IPV6 Header + Modified UDP header + UDP data] - [Modified IPv6 Header]  This is wrong value of skb->csum.      5.) UDP Header Checksum init:    Function Trace: __udp6_lib_rcv() --> udp6_csum_init() -->  __skb_checksum_validate_complete()    In  __skb_checksum_validate_complete() below condition will never met. Because value of skb->csum is unexpected.   ```      if (skb->ip_summed == CHECKSUM_COMPLETE) {          if (!csum_fold(csum_add(psum, skb->csum))) {              skb->csum_valid = 1;              return 0;          }      }  ```    In udp6_csum_init(), below check will be true:  ```  if (skb->ip_summed == CHECKSUM_COMPLETE && !skb->csum_valid) {          /* If SW calculated the value, we know it's bad */          if (skb->csum_complete_sw)              return 1;  ```    and this packet will be dropped in  __udp6_lib_rcv() due to below check    ```  if (udp6_csum_init(skb, uh, proto))          goto csum_error;  .......  .......    csum_error:      __UDP6_INC_STATS(net, UDP_MIB_CSUMERRORS, proto == IPPROTO_UDPLITE);  ```        -------------------Related JPROBE LOGS:-------------------  ```  Oct 19 05:15:01.420147 asw03 NOTICE kernel: [350574.264081]  nf_ip6_checksum: dataoff=40     Oct 19 05:15:01.420180 asw03 NOTICE kernel: [350574.264084]  nf_ip6_checksum: skb:ffff9faa71cbc500 ip_sum=0 csum_valid=0 csum_com_sw=0 csum=0  ```  [Explanation]: dataoff = 40 for ipv6 header and checksum is not verified yet, so skb->csum = 0.    ```  Oct 19 05:15:01.420190 asw03 NOTICE kernel: [350574.264090]  nf_ip6_checksum: len:228 psum:ffffd68e csum=2e57fb19 sum=0  ```  [Explanation]: psum = pseudo header sum - ipv6 header sum. Csum = skb->csm = [ipv6 header + UDP header + UDP data]  psum + csum (16-bit sum) = ffff + d68e + 2e57 + fb19 = 0x2FFFD = 0xFFFD + 0x2 = 0xFFFF. Skb->len is 228 here.      ```  Oct 19 05:15:01.420199 asw03 NOTICE kernel: [350574.264105] inet_proto_csum_replace16 : prev_hw_check=7feb uh_check=01cb  ```  [Explanation]: With SNAT, IPV6 address will change from 2axx:xxxx:00xx:0004:0000:0000:0000:0002 to 2axx:xxx:00xx:2082:0000:0000:0000:0002. So the 16 bit diff is: 0x2082 - 0x0004 = 0x207E . So UDP header checksum changes from 0xEB7f to 0xCB01, Diff = ~(0x207E). [Printed without htons above.]      ```  Oct 19 05:15:01.420203 asw03 NOTICE kernel: [350574.264107] inet_proto_csum_replace16: skb:ffff9faa71cbc500 ip_sum=2 csum_valid=1 csum_com_sw=1 csum= b037fb18  ```c  [Explanation]: Skb->csum changed according to udp header checksum diff: 16-bit diff for (b037fb18 - 2e57fb19) = ~htons(0x207E).      ```  Oct 19 05:15:01.420218 asw03 NOTICE kernel: [350574.264116] ip6_rcv_finish: skb:ffff9faa71cbc500 ip_sum=2 csum_valid=1 csum_com_sw=1 csum=b037fb18  Oct 19 05:15:01.420227 asw03 NOTICE kernel: [350574.264135] __udp6_lib_rcv: src: 2axx:xxxx:00xx:0001:0000:0000:0000:c216 dst: 2axx:xxxx:00xx:2082:0000:0000:0000:0002 port: 53 uh_check: cb01  Oct 19 05:15:01.420230 asw03 NOTICE kernel: [350574.264137] __udp6_lib_rcv: skb:ffff9faa71cbc500 ip_sum=2 csum_valid=1 csum_com_sw=1 csum=57e294da  ```  [Explanation]: Between ip6_rcv_finish and __udp6_lib_rcv, 16-bit sum of ipv6 header is subtracted from skb->csum. So skb->csum = 57e294da at __udp6_lib_rcv.      ```  Oct 19 05:15:01.420236 asw03 NOTICE kernel: [350574.264140] __udp6_lib_rcv_post: len:188 psum:ffff9522 csum=57e294da  ```  Here psum + csum = ffff + 9522 + 57e2 + 94da = 0x281DD = 0x81DF = ~(htons(207E)) [same delta]. Which shows that SKB_CSUM should be updated due to change IPV6 address.      --------------FIX ------------------------    No need to update skb->csum in function inet_proto_csum_replace16(), even if skb->ip_summed == CHECKSUM_COMPLETE, because change in L4  header checksum field and change in IPV6 header cancels each other for skb->csum calculation. This is because skb->csum includes sum of   [IPv6 Header + L4 Header + L4 Data]      -----------------------  Interesting Facts:    ------------------Why Problem is not seen for IPV4--------------    IPV4 suffers with similar issue, but since 16-bit sum of IPV4 header is always zero [Due to IPv4 header checksum present in IPV4 header]. Skb->csum as per below state will correct:    skb->csum = [Original IPV6 Header + Modified UDP header + UDP data - Modified IPv6 Header] = [Modified UDP header + UDP data]      ------------------Why Problem is not seen for IPV6 TCP--------------    Even though skb->csum will be incorrect, when packet hit tcp_v6_rcv()--> skb_checksum_init()--> __skb_checksum_validate().    TCP code starts checksum calculation from scratch by assigning pseudo header sum in skb->csum and by returning 0 from skb_checksum_init().    With this fix,  validation will be successful in __skb_checksum_validate() even for tcpv6 packet, so kernel will not recalculate checksum.      ------------------Why Problem is not seen in linux kernel version < 3.16--------------    Call to udp_csum_pull_header(skb) in udpv6_queue_rcv_one_skb(struct sock *sk, struct sk_buff *skb) has exposed the issue for UDPv6.    -------------------------------------------------------------------------------------    Note:     -- Kindly let me know, If needed I can present entire packet and example with checksum calculation at each stage.    -------------------------------------------------------------------------------------        ---------------------------Testing (with JPROBE LOGS) [AFTER FIX UDPv6 DNS query works fine]:---------------------------      1.)   ```  pchaudha@asw03:~$ sudo cat /etc/iptables/rules.v6 | grep SNAT  # SNAT  -A POSTROUTING -p tcp -m tcp --dport 443 -o Ethernet+ -j SNAT --to-source 2a04:xxxx:62:4::2  -A POSTROUTING -p udp -m udp --dport 53 -o Ethernet+ -j SNAT --to-source 2a04:xxxx:62:4::2  -A POSTROUTING -p tcp -m tcp --dport 53 -o Ethernet+ -j SNAT --to-source 2a04:xxxx:62:4::2  ```      2.)  ```   pchaudha@asw03:~$ sudo /etc/network/if-pre-up.d/iptables  ```  3.) UDPv6 DNS query:  ```  pchaudha@asw03:~$ host facebook.com 2a04:xxxx:xx:1::c216  Using domain server:  Name: 2a04:xxxx:32:1::c216  Address: 2a04:xxxx:32:1::c216#53  Aliases:    facebook.com has address 157.240.11.35  facebook.com has IPv6 address 2a03:2880:f10d:183:face:b00c:0:25de  facebook.com mail is handled by 10 smtpin.vvv.facebook.com.  ```  4.) JPROBE LOGS:   ```  Oct 22 05:51:20.748153 asw03 NOTICE kernel: [611954.922595] nf_nat_ipv6_manip_pkt: skb:ffff9faa7c9bf400 t->dst.protonum=17  Oct 22 05:51:20.748186 asw03 NOTICE kernel: [611954.922600] inet_proto_csum_replace16: skb:ffff9faa7c9bf400 ips=2 csumv=1 csumsw=1 csum=4914e05c  Oct 22 05:51:20.748195 asw03 NOTICE kernel: [611954.922605] ip6_rcv_finish: skb:ffff9faa7c9bf400 ips=2 csumv=1 csumsw=1 csum=4914e05c  ```    5.) TCPv6 query:  ```  pchaudha@asw03:~$ host -T facebook.com 2a04:xxxx:32:1::c216  Using domain server:  Name: 2a04:xxxx:32:1::c216  Address: 2a04:xxxx:32:1::c216#53  Aliases:    facebook.com has address 31.13.70.36  facebook.com has IPv6 address 2a03:2880:f10d:183:face:b00c:0:25de  facebook.com mail is handled by 10 smtpin.vvv.facebook.com.  --------------------------  ```    6.) JPROBE LOGS:  ```  Oct 22 18:13:29.199793 asw03 NOTICE kernel: [656483.605018] nf_nat_ipv6_manip_pkt: skb:ffff9faab3e79400 t->dst.protonum=6  Oct 22 18:13:29.199826 asw03 NOTICE kernel: [656483.605032] inet_proto_csum_replace16: skb:ffff9faab3e79400 ips=2 csumv=1 csumsw=1 csum=c6796dec  Oct 22 18:13:29.199835 asw03 NOTICE kernel: [656483.605038] ip6_rcv_finish: skb:ffff9faab3e79400 ips=2 csumv=1 csumsw=1 csum=c6796dec  ```	praveen-li	null	null	null	null	null	null	
2019-10-23 01:57:59.0	2019-10-23 01:59:08.0	2019-10-23 01:59:08.0	closed	[]	0	747	hypercall implementation done for CMPE 283 assignment 1	https://api.github.com/repos/torvalds/linux/issues/747	https://github.com/torvalds/linux/pull/747		rashmisarode	null	null	null	null	null	null	
2019-10-31 11:05:31.0	2019-10-31 11:06:15.0	2019-10-31 11:06:15.0	closed	[]	0	749	corrected a spell mistake	https://api.github.com/repos/torvalds/linux/issues/749	https://github.com/torvalds/linux/pull/749		naman-modi	null	null	null	null	null	null	
2019-11-04 18:16:48.0	2019-11-04 18:17:32.0	2019-11-04 18:17:32.0	closed	[]	1	750	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/750	https://github.com/torvalds/linux/pull/750	Update Kernel	LatorreDev	null	null	null	null	null	null	
2019-11-12 09:00:29.0	2019-11-12 09:01:11.0	2019-11-12 17:27:30.0	closed	[]	0	751	Implementation	https://api.github.com/repos/torvalds/linux/issues/751	https://github.com/torvalds/linux/pull/751		dhwani91	null	null	null	null	null	null	
2019-11-16 08:04:12.0	2019-11-16 08:04:23.0	2019-11-16 08:04:23.0	closed	[]	0	752	Created new CPUID leaf 0x4FFFFFFF and 0x4FFFFFFD	https://api.github.com/repos/torvalds/linux/issues/752	https://github.com/torvalds/linux/pull/752		rashmisarode	null	null	null	null	null	null	
2019-11-19 01:12:32.0	null	2020-10-02 17:40:18.0	open	[]	14	753	making it more modern	https://api.github.com/repos/torvalds/linux/issues/753	https://github.com/torvalds/linux/pull/753	:)    http://chng.it/gWvT9DcW	TIBTHINK	null	null	null	null	null	null	
2019-11-22 14:28:04.0	null	2020-10-02 17:40:01.0	open	[]	1	754	Updated nf_conntrack_sip, nf_nat_sip.c modules' creator email	https://api.github.com/repos/torvalds/linux/issues/754	https://github.com/torvalds/linux/pull/754	Just a update from my old to my current used email.	chentschel	null	null	null	null	null	null	
2019-11-27 21:49:00.0	2020-06-04 11:39:57.0	2020-06-04 11:39:57.0	closed	[]	3	755	Update j1939.rst	https://api.github.com/repos/torvalds/linux/issues/755	https://github.com/torvalds/linux/pull/755	[networking/j1939.rst](https://github.com/torvalds/linux/blob/master/Documentation/networking/j1939.rst)   referes to J1939_PGN_ADDRESS_REQUEST, however "j1939.h" defines only:  #define J1939_PGN_REQUEST 0x0ea00    There was once a patch changing the define "J1939_PGN_REQUEST" to "J1939_PGN_ADDRESS_REQUEST". However this patch had been rejected. Still the documentation [networking/j1939.rst](https://github.com/torvalds/linux/blob/master/Documentation/networking/j1939.rst) had been written as if this patch had been applied:   [Link to patch](https://marc.info/?l=linux-can&m=155491812521734&w=2)    I have created here an issue for discussion:  https://github.com/linux-can/can-utils/issues/174	josemic	null	null	null	null	null	null	
2019-11-28 03:15:02.0	2020-03-30 22:34:49.0	2020-03-30 22:34:49.0	closed	[]	1	756	support sys_get_thread_area api for mips	https://api.github.com/repos/torvalds/linux/issues/756	https://github.com/torvalds/linux/pull/756	support sys_get_thread_area api for arch mips	sunny868	null	null	null	null	null	null	
2019-12-04 03:21:47.0	null	2020-10-02 17:40:00.0	open	[]	1	757	Confusion of control 2 register contents	https://api.github.com/repos/torvalds/linux/issues/757	https://github.com/torvalds/linux/pull/757	The contents of the CONTROL 2 register (ABB5ZES3_REG_CTRL2, 0x01) contains status flags for various interrupts and enable/disable bits for timers. The bits being modified in this call, which are all the same bit in this case (bit 7), is a read-only bit so the call has no effect. The correct method to perform what has been documented is to update the associated register for each alarm individually, setting that one bit.	joshld	null	null	null	null	null	null	
2019-12-04 03:22:11.0	null	2020-10-02 17:39:58.0	open	[]	1	758	ab-b5ze-s3 months start from 1 not 0	https://api.github.com/repos/torvalds/linux/issues/758	https://github.com/torvalds/linux/pull/758	As per the datasheet, the months register (08h) stores the current month coded in BCD format with a value range of 1 to 12. January is therefore allocated to value 1 and December is allocated to value 12 (or BCD 10010). When handling year wrapping, the check must be performed against constant 12 (should we be capturing anything greater to remain within the correct range?) and the months should be reset to 1 for January.	joshld	null	null	null	null	null	null	
2019-12-04 15:33:55.0	null	2019-12-04 15:35:15.0	open	[]	1	759	gen_initramfs_list.sh is a bash script that isn't posix compliant.	https://api.github.com/repos/torvalds/linux/issues/759	https://github.com/torvalds/linux/pull/759	This ensures we call bash instead of sh which could be dash or any other  shell that is not compatible with the script.    Signed-off-by: Jory Pratt <anarchy@gentoo.org>	anarchpenguin	null	null	null	null	null	null	
2019-12-11 08:34:06.0	null	2020-10-02 17:39:54.0	open	[]	1	761	Update llc_station.c	https://api.github.com/repos/torvalds/linux/issues/761	https://github.com/torvalds/linux/pull/761	The true/false values of the conditional operator ? in llc_stat_ev_rx_null_dsap_xid_c are reversed. Since llc_stat_ev_rx_null_dsap_xid_c is called first in llc_station_rcv, an XID response is sent instead of a TEST response when a null TEST (DSAP=0x00) frame is received.    The same issue exists in llc_stat_ev_rx_null_dsap_test_c.	achantask	null	null	null	null	null	null	
2019-12-13 14:13:06.0	null	2020-02-17 19:58:40.0	open	[]	1	762	correct naming lockdown_read arg	https://api.github.com/repos/torvalds/linux/issues/762	https://github.com/torvalds/linux/pull/762		AlgoSolu	null	null	null	null	null	null	
2019-12-16 11:06:49.0	null	2020-10-02 17:39:50.0	open	[]	1	763	Support hard drives that do not implement the Synchronize Cache SCSI command	https://api.github.com/repos/torvalds/linux/issues/763	https://github.com/torvalds/linux/pull/763	Many obsolete hard drives do not support the Synchronize Cache SCSI  command. Such command is generally issued during fsync() calls which  at the moment therefore fail with the ILLEGAL_REQUEST sense key.    Since this failure is currently treated as critical in the kernel SCSI  disk driver, such obsolete hard drives cannot be used anymore: they  cannot be formatted, mounted and/or checked using tools such as e2fsprogs.    Because there is nothing which can be done if the drive does not support  such command, such ILLEGAL_REQUEST should be treated as non-critical so  that the underlying operation does not fail and the obsolete hard drive  can be used normally.    This patch disables the Write Cache feature as a precaution on hard  drives which do not support the Synchronize Cache command and therefore  the cache flushing functionality.    Fixes bug: https://bugzilla.kernel.org/show_bug.cgi?id=203635	gtrentalancia	null	null	null	null	null	null	
2019-12-16 16:38:46.0	null	2020-10-02 17:39:48.0	open	[]	3	764	Update panic.c	https://api.github.com/repos/torvalds/linux/issues/764	https://github.com/torvalds/linux/pull/764	We should really use modern terminology, in one month it's 2020	Error-Undefined	null	null	null	null	null	null	
2019-12-19 06:22:44.0	null	2021-04-17 00:16:02.0	open	[]	3	765	Merry Christmas!!	https://api.github.com/repos/torvalds/linux/issues/765	https://github.com/torvalds/linux/pull/765	Since Christmas is coming soon!	ghost	null	null	null	null	null	null	
2019-12-22 21:27:25.0	null	2020-10-02 17:39:23.0	open	[]	1	766	Devrezz	https://api.github.com/repos/torvalds/linux/issues/766	https://github.com/torvalds/linux/pull/766	Linux Kernel 5.2.11 customization to add I2S in/out (ADC/DAC) sound to odroid c2 based on meson64 GXBB (S905)  Add Cirrus CS4245 ADC/DAC codec	Rezzonics	null	null	null	null	null	null	
2019-12-22 22:16:00.0	null	2019-12-22 22:20:15.0	open	[]	1	767	fix the kernel	https://api.github.com/repos/torvalds/linux/issues/767	https://github.com/torvalds/linux/pull/767	this post was made by steve ballmer gang	benclarkk	null	null	null	null	null	null	
2019-12-26 06:49:21.0	2019-12-26 06:49:56.0	2019-12-26 06:49:56.0	closed	[]	0	768	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/768	https://github.com/torvalds/linux/pull/768	pull	jeon3029	null	null	null	null	null	null	
2019-12-27 02:26:18.0	null	2020-10-02 17:39:11.0	open	[]	1	769	Format security hooks	https://api.github.com/repos/torvalds/linux/issues/769	https://github.com/torvalds/linux/pull/769	Details:   - add default hook for security_cred_getsecid   - group hooks with functionalities and get coherent for orders	wenhuizhang	null	null	null	null	null	null	
2019-12-28 11:18:31.0	2020-01-09 01:20:17.0	2020-01-09 01:20:17.0	closed	[]	2	770	Included missing <strings.h>	https://api.github.com/repos/torvalds/linux/issues/770	https://github.com/torvalds/linux/pull/770	``bcmd()`` is a function from ``<strings.h>`` (with s) that are not included in the file, so Mmy compiler throws an error:    ```sh  $ make -j 8  HOSTCC  scripts/kconfig/confdata.o  scripts/kconfig/confdata.c:75:6: warning: implicitly declaring library function 'bcmp'        with type 'int (const void *, const void *, unsigned int)'        [-Wimplicit-function-declaration]          if (bcmp(map1, map2, st1.st_size))              ^  scripts/kconfig/confdata.c:75:6: note: include the header <strings.h> or explicitly        provide a declaration for 'bcmp'  1 warning generated.    HOSTLD  scripts/kconfig/conf  /data/data/com.termux/files/usr/bin/arm-linux-androideabi-ld: scripts/kconfig/confdata.o: in function `conf_write':                                                               confdata.c:(.text+0x1484): undefined reference to `bcmp'  clang-9: error: linker command failed with exit code 1 (use -v to see invocation)  make[2]: *** [scripts/Makefile.host:116: scripts/kconfig/conf] Error 1  make[1]: *** [Makefile:567: syncconfig] Error 2  make: *** [Makefile:678: include/config/auto.conf.cmd] Error 2  ```  im following [that tutorial](https://gist.github.com/EduApps-CDG/733e29c28dd53e91128d384c2e879397) that says how to compile the Kernel with a Android, but thr error is not on the tutorial, but on compile.	EduApps-CDG	null	null	null	null	null	null	
2019-12-30 02:25:33.0	null	2020-10-02 17:39:09.0	open	[]	2	771	Fix POSIX: POSIX too slow, Complete performance Overhaul	https://api.github.com/repos/torvalds/linux/issues/771	https://github.com/torvalds/linux/pull/771	http://www.cs.columbia.edu/~vatlidak/resources/POSIXmagazine.pdf    https://news.ycombinator.com/item?id=13621623	jobs-git	null	null	null	null	null	null	
2019-12-30 02:43:03.0	2019-12-30 10:43:04.0	2019-12-30 10:43:04.0	closed	[]	3	772	Fix alignment of value in /proc/$pid/smaps	https://api.github.com/repos/torvalds/linux/issues/772	https://github.com/torvalds/linux/pull/772	The `/proc/$pid/smaps` output has an alignment issue for the field `FilePmdMapped` and `THPeligible`.    This increases the alignment of `FilePmdMapped` by 1 space, and converts the alignment of `THPeligible` to use spaces instead of tabs, to be consistent with the other fields.	ioquatix	null	null	null	null	null	null	
2019-12-31 04:07:54.0	null	2019-12-31 04:17:18.0	open	[]	2	773	Update namespace.rst	https://api.github.com/repos/torvalds/linux/issues/773	https://github.com/torvalds/linux/pull/773	aligning the ACPI block diagram	girish17	null	null	null	null	null	null	
2020-01-01 07:45:49.0	null	2020-02-17 20:47:14.0	open	[]	1	774	Typo in qnx6.txt	https://api.github.com/repos/torvalds/linux/issues/774	https://github.com/torvalds/linux/pull/774	'structer' line 166 was replaced by 'structure' line 166	shamirmatan	null	null	null	null	null	null	
2020-01-01 11:36:02.0	2020-01-01 11:56:48.0	2020-01-01 11:57:07.0	closed	[]	3	775	missing parentheses in USE_NEW_SCHEME	https://api.github.com/repos/torvalds/linux/issues/775	https://github.com/torvalds/linux/pull/775	accroding to https://github.com/torvalds/linux/commit/bd0e6c9614b95352eb31d0207df16dc156c527fa#diff-28615d62e1250eadc353d804f49bc6d6, will try old enumeration scheme first for high speed devices. for example, when a high speed device pluged in, line 2720 should expand to 0 at the first time. USE_NEW_SCHEME(0, 0 || 0 || 1) === 0. but it wrongly expand to 1(alway expand to 1 for high speed device), and change USE_NEW_SCHEME to USE_NEW_SCHEME((i) % 2 == (int)(scheme)) may be better ?	atmgnd	null	null	null	null	null	null	
2020-01-07 14:10:55.0	2020-02-03 10:42:49.0	2020-02-03 10:42:50.0	closed	[]	3	776	fix typo in filesystems/vfs.rst	https://api.github.com/repos/torvalds/linux/issues/776	https://github.com/torvalds/linux/pull/776	change `creat` to `create`	ZhaoQi99	null	null	null	null	null	null	
2020-01-10 16:11:41.0	null	2020-02-14 09:20:11.0	open	[]	5	777	Rename README to README.md	https://api.github.com/repos/torvalds/linux/issues/777	https://github.com/torvalds/linux/pull/777	Otherwise github won't recognize it as a markdown file.	Zotyamester	null	null	null	null	null	null	
2020-01-15 15:55:25.0	2020-01-15 15:55:42.0	2020-01-15 15:55:42.0	closed	[]	0	778	Merge pull request #1 from torvalds/master	https://api.github.com/repos/torvalds/linux/issues/778	https://github.com/torvalds/linux/pull/778	Sync with upstream 2019-10-09!	CoryXie	null	null	null	null	null	null	
2020-01-16 11:42:52.0	null	2020-10-02 17:38:57.0	open	[]	6	779	Fixed bug where 'yes' and 'no' are mixed up	https://api.github.com/repos/torvalds/linux/issues/779	https://github.com/torvalds/linux/pull/779	Everywhere in the kernel 'yes' means 'no' and 'no' means 'yes' for whatever reason.   So I fixed around 44.000 files.  Obviously.    I am now a maintainer of the linux kernel project.	marcschuler	null	null	null	null	null	null	
2020-01-22 02:24:03.0	null	2020-10-02 17:38:47.0	open	[]	1	780	Update userspace-if.rst	https://api.github.com/repos/torvalds/linux/issues/780	https://github.com/torvalds/linux/pull/780	from what I saw in the user-space tests, the output buffer contains AAD	usstq	null	null	null	null	null	null	
2020-01-22 14:22:07.0	null	2020-01-22 14:25:18.0	open	[]	1	781	Use kvzalloc to make your code better	https://api.github.com/repos/torvalds/linux/issues/781	https://github.com/torvalds/linux/pull/781	Use kvzalloc to make your code better	leesagacious	null	null	null	null	null	null	
2020-01-24 04:19:18.0	2020-01-24 14:00:30.0	2020-01-24 14:00:30.0	closed	[]	1	782	edit readme	https://api.github.com/repos/torvalds/linux/issues/782	https://github.com/torvalds/linux/pull/782		itsvinayak	null	null	null	null	null	null	
2020-02-08 15:48:23.0	null	2020-10-02 17:38:41.0	open	[]	1	795	Added SPI0 to Board	https://api.github.com/repos/torvalds/linux/issues/795	https://github.com/torvalds/linux/pull/795		EliasKotlyar	null	null	null	null	null	null	
2020-02-11 00:45:34.0	2020-02-13 00:56:54.0	2020-02-13 00:56:54.0	closed	[]	1	796	Add gpu memory tracepoints	https://api.github.com/repos/torvalds/linux/issues/796	https://github.com/torvalds/linux/pull/796	This change adds the below gpu memory tracepoint:  gpu_mem/gpu_mem_total: track global or process gpu memory total counters    Signed-off-by: Yiwei Zhang <zzyiwei@google.com>	zhangyiwei	null	null	null	null	null	null	
2020-02-11 09:42:03.0	null	2020-10-02 17:38:39.0	open	[]	1	797	Integration/soundwire latest	https://api.github.com/repos/torvalds/linux/issues/797	https://github.com/torvalds/linux/pull/797	need to get the driver for the soundwire	yunbotsai	null	null	null	null	null	null	
2020-02-12 11:27:49.0	null	2020-10-02 17:38:37.0	open	[]	1	798	Add support for USB modems using Conexant CX06836	https://api.github.com/repos/torvalds/linux/issues/798	https://github.com/torvalds/linux/pull/798	Small patch to add support for USB HSF Modems using Conexant CX06836 Chipset (idVendor=0572, idProduct=1300)	stevenvw1973	null	null	null	null	null	null	
2020-02-14 18:22:21.0	2020-02-14 18:24:34.0	2020-02-14 18:24:34.0	closed	[]	0	799	Create README.md	https://api.github.com/repos/torvalds/linux/issues/799	https://github.com/torvalds/linux/pull/799	to replace existing README (which isn't displayed like intended)	kilianfriedrich	null	null	null	null	null	null	
2020-02-18 10:28:02.0	null	2020-10-02 17:38:32.0	open	[]	1	800	fix "unsigned" warn when running independently	https://api.github.com/repos/torvalds/linux/issues/800	https://github.com/torvalds/linux/pull/800	while trying to compile and run this file independently for another project (timer DS research) I have encountered a small warning regarding sign status for bkt, this fixes this warning while not chaning functionality in any way	daTokenizer	null	null	null	null	null	null	
2020-02-18 14:27:46.0	null	2020-10-02 17:38:31.0	open	[]	2	801	Improve readability of socket err	https://api.github.com/repos/torvalds/linux/issues/801	https://github.com/torvalds/linux/pull/801	socket {} expected success "but" got err {}	sparshrestha	null	null	null	null	null	null	
2020-02-24 18:35:33.0	null	2020-10-02 17:38:23.0	open	[]	1	802	Remove Intel unavailable hardware from SDIO IDs	https://api.github.com/repos/torvalds/linux/issues/802	https://github.com/torvalds/linux/pull/802	Request to remove Intel from SDIO ID since hardware never became available to clean up file.    Looks to have been missed during this pull request  "This hardware never became available to normal humans.  Leaving this  driver imposes unwelcome maintenance costs for no clear benefit."  https://github.com/torvalds/linux/commit/ce8126c334f4960fc091d57ad293b250be7f3a4f	laserjobs	null	null	null	null	null	null	
2020-02-28 17:38:00.0	null	2020-02-28 17:40:18.0	open	[]	1	803	Update .clang-format	https://api.github.com/repos/torvalds/linux/issues/803	https://github.com/torvalds/linux/pull/803		farley-melo	null	null	null	null	null	null	
2020-02-29 17:36:40.0	2020-02-29 17:37:23.0	2020-03-30 20:08:41.0	closed	[]	0	804	Refactoring of medusa model	https://api.github.com/repos/torvalds/linux/issues/804	https://github.com/torvalds/linux/pull/804		Nestastnikos	null	null	null	null	null	null	
2020-03-02 12:16:22.0	null	2020-10-02 17:38:14.0	open	[]	1	805	Fix for packets being rejected in the ring buffer used by the xHCI co…	https://api.github.com/repos/torvalds/linux/issues/805	https://github.com/torvalds/linux/pull/805	…ntroller. When a packet larger than MTU arrives in Linux from the modem, it is discarded with -EOVERFLOW error (Babble error). This is seen on USB3.0 and USB2.0 busses. This is essentially because the MRU (Max Receive Size) is not a separate entity to the MTU (Max Transmit Size) and the received packets can be larger than those transmitted. Following the babble error there were an endless supply of zero-length URBs which are rejected with -EPROTO (increasing the rx input error counter each time). This is only seen on USB3.0. These continue to come ad infinitum until the modem is shutdown. There appears to be a bug in the core USB handling code in Linux that doesn't deal well with network MTUs smaller than 1500 bytes. By default the dev->hard_mtu (the real MTU) is in lockstep with dev->rx_urb_size (essentially an MRU), and it's the latter that is causing trouble. This has nothing to do with the modems; the issue can be reproduced by getting a USB-Ethernet dongle, setting the MTU to 1430, and pinging with size greater than 1406.	TarAldarion	null	null	null	null	null	null	
